2016-06-18  Torbjörn Granlund  <tg@gmplib.org>

	* Version 6.1.1 released.

2015-03-20  Marc Glisse  <marc.glisse@inria.fr>

	* configure.ac (WANT_ASSEMBLY): Remove.
	(NO_ASM): Remove from CFLAGS, add to AC_DEFINE.
	* tests/misc.c: Test NO_ASM instead of WANT_ASSEMBLY.

2016-02-25  Pavel Kopyl  <p.kopyl@samsung.com>

	* acinclude.m4 (GMP_ASM_UNDERSCORE): Tighten gurkmacka detection.

2016-01-04 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* Makefile.am (LIBGMP_LT_*, LIBGMPXX_LT_*): Bump version info.
	* gmp-h.in: Bump version.

2016-01-01 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/cxx/clocale.c: Do not re-define localeconv for mingw.
	* tests/misc/t-locale.c: Likewise (Thanks Alexander).

2015-12-26  Torbjörn Granlund  <torbjorng@google.com>

	* tests/misc.c (tests_start): Assert library version.

2015-12-19  Marc Glisse  <marc.glisse@inria.fr>

	* gmp-impl.h (fft_table_nk): Use gmp_uint_least32_t.
	* mpn/generic/trialdiv.c (gmp_primes_ptab): Likewise.

2015-12-14  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86_64/fat/fat.c (gmp_workaround_skylake_cpuid_bug):
	New function.
	(__gmpn_cpuvec_init): Handle more BMI2 crippled CPUs.

2015-12-13 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/arm32call.asm: bx->ret to support thumb-less chips 
	  (thanks Martin Husemann).

2015-12-13  Torbjörn Granlund  <torbjorng@google.com>

	* config.sub: Fix spelling of kabylake.
	* acinclude.m4: Likewise.
	* mpn/x86_64/fat/fat.c: Likewise.

2015-12-10 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/misc/t-printf.c: Test a sequence of '%'.
	* printf/doprnt.c: Avoid buffer overread with long long limbs.

2015-12-06  Torbjörn Granlund  <torbjorng@google.com>

	* configure.ac (arm*): Conditionally define NOTHUMB.
	Simplify and generalise.
	* mpn/arm/arm-defs.m4 (ret): New macro, conditional on NOTHUMB.
	* mpn/arm/*.asm: Use ret.

2015-12-03  Torbjörn Granlund  <torbjorng@google.com>

	* config.guess: Work around skylake cpuid bug.
	Fix spelling of kabylake.

2015-12-01  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86_64/coreibwl/mul_basecase.asm: Add FUNC_EXITs.

2015-11-21 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (MPN_TOOM22_MUL_MINSIZE): Consider ToomX2 limits
	  (thanks Paul).
	* tests/mpn/t-toom22.c: Keep on testing small sizes.

2015-11-01 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* Version 6.1.0 released.

	* mpz/inits.c [__CHECKER__]: Init limb, not pointer.
	* mpz/init.c [__CHECKER__]: Likewise (spotted by Vicente Benjumea).
	* tests/mpf/t-pow_ui.c: Use another mpf for the size limit.

2015-10-30  Torbjörn Granlund  <torbjorng@google.com>

	* mpf/pow_ui.c: Add log(e) precision bits.

	* doc/gmp.texi (Floating-point): Rewrite mpf introduction.

2015-10-29 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* demos/factorize.c: mpz_div_2exp => mpz_tdiv_q_2exp.
	* demos/perl/GMP.xs: Likewise.
	* tests/mpf/t-pow_ui.c: Use reference value to check the size.

	* mini-gmp/mini-gmp.c: Removed a typo (spotted by Paul Zimmermann).
	* doc/gmp.texi (Floating-point): Remove "infinite precision" claim.

	* gmp-h.in: Update version.

2015-10-28  Torbjörn Granlund  <torbjorng@google.com>

	* tests/mpf/t-pow_ui.c: New file.
	* tests/mpf/Makefile.am (check_PROGRAMS): Compile it.

	* mpf/pow_ui.c: Rewrite for accuracy and performance.

2015-10-26 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* configfsf.guess: Updated to version 2015-10-21, for a typo.

	* tests/cxx/t-ops.cc (check_mpq): Compare also with mpz.
	(check_mpf): Compare also with mpz and mpq.

2015-10-25  Torbjörn Granlund  <torbjorng@google.com>

	* configure.ac: Avoid passing ambiguous -march=skylake.

2015-10-21 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* Version 6.1.0-rc1 published.

	* gmp-h.in: Revert version for RC.

2015-10-20  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86/pentium4/sse2/popcount.asm: Use LEAL.
	* mpn/x86/k7/invert_limb.asm: Likewise.

2015-10-18  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/arm64/gmp-mparam.h: New file.

2015-10-18 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* Makefile.am (LIBGMP_LT_*, LIBGMPXX_LT_*): Bump version info.
	* gmp-h.in: Bump version.

2015-10-17 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpf/t-cmp_si.c: Initialise a variable (only when error arise)
	* mpn/generic/toom43_mul.c: Insert parentheses around & expressions.
	* mpn/generic/toom52_mul.c: Likewise.
	* tests/mpn/t-minvert.c: Remove an unused var.
	* tests/mpz/t-cong_2exp.c: Likewise.

2015-10-16  Hans Wennborg <hwennborg at google.com>

	* mpn/generic/div_qr_2.c: Insert parentheses around & expressions.
	* mpn/generic/toom44_mul.c: Likewise.
	* mpn/generic/toom53_mul.c: Likewise.
	* mpn/generic/toom62_mul.c: Likewise.
	* tests/mpn/t-bdiv.c: Simplify conditional printing of whitespace.
	* tests/mpn/t-div.c: Likewise.

2015-10-15 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* configfsf.sub: Updated to version 2015-08-20, from gnulib.
	* configfsf.guess: Updated to version 2015-09-14, from gnulib.

2015-10-14  Torbjörn Granlund  <torbjorng@google.com>

	* demos/pexpr.c (main): Clear out a variable.

	* mpn/generic/sqrlo_basecase.c: Move things before addmul_1 to reduce
	register pressure.

	* .hgignore: Add 'compile' and 'test-driver'.

	* mpn/generic/mu_bdiv_qr.c (mpn_mu_bdiv_qr_itch): Simplify, add ASSERT.
	* mpn/generic/mu_bdiv_q.c (mpn_mu_bdiv_q_itch): Likewise.

	* tune/tuneup.c (tune_mu_bdiv): Start at measured BDIV_DC_ thresholds.

2015-10-13 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpf/clears.c, mpf/inits.c, mpq/clears.c, mpq/inits.c,
	* mpz/clears.c, mpz/inits.c: Keep on supporting empty list.

2015-10-13  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__GMPP_DEFINE_BINARY_TYPE_FUNCTION): Allow mixed operations.
	(__gmp_cmp_function, __gmp_binary_equal, __gmp_binary_less):
	Handle mixed operations.
	(__gmp_cmp_function): Move before __gmp_binary_equal.

2015-10-13 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpf/pow_ui.c: Increased precision of partial results.

2015-10-12  Torbjörn Granlund  <torbjorng@google.com>

	* configure.ac: Reject AVX for NetBSD.

2015-10-11  Torbjörn Granlund  <torbjorng@google.com>

	* configure.ac (fat_path): Add skylake.

2015-10-10 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gen-fib.c: Correct the name of the program in error message.
	* gen-fac.c: Likewise.

	* mpf/get_str.c: Increase precision of base^e computation.

2015-10-09  Torbjörn Granlund  <torbjorng@google.com>

	* config.guess: Recognise cabylake and goldmont and more versions of
	skylake and silvermont.
	* acinclude.m4 (X86_64_PATTERN): Add cabylake and goldmont.
	* config.sub: Corresponding changes.
	* configure.ac: Corresponding changes.
	* mpn/x86_64/fat/fat.c: Corresponding changes.

2015-09-12  Torbjörn Granlund  <torbjorng@google.com>

	* mpf/clear.c, mpf/clears.c, mpf/inits.c, mpq/clear.c, mpq/clears.c
	* mpq/inits.c, mpz/clear.c, mpz/clears.c, mpz/inits.c:
	Streamline, use macros.

2015-09-27 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/cfdiv_r_2exp.c: Use mpn_neg and MPZ_NEWALLOC.
	* mpz/cfdiv_q_2exp.c: Use MPZ_REALLOC return value.

2015-09-12  Torbjörn Granlund  <torbjorng@google.com>

	* tests/mpf/t-cmp_si.c (check_data): Set precision reflecting data.

2015-09-11 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpf/cmp_z.c: New file implementing mpf_cmp_z.
	* mpf/Makefile.am (libmpf_la_SOURCES): Add it.
	* Makefile.am (MPF_OBJECTS): Add generate object to libs.
	* gmp-h.in: Declare new function.
	* tests/mpf/t-cmp_si.c: Test also the new function.
	* doc/gmp.texi: Document it.

2015-09-06  Torbjörn Granlund  <torbjorng@google.com>

	* Wrap remaining limb allocations in __GMP_ALLOCATE_FUNC_LIMBS.

	* mpn/x86/fat/fat.c (fake_cpuid_table): Add missing commas.
	* mpn/x86_64/fat/fat.c: Likewise.

	* mpn/x86/fat/fat.c (fake_cpuid_table): Improve struct type.
	* mpn/x86/fat/fat.c: Likewise.

2015-09-03 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpq/t-cmp_z.c (sizes_test): New function, tests sizes.

2015-09-03  Torbjörn Granlund  <torbjorng@google.com>

	* acinclude.m4 (GMP_C_HIDDEN_ALIAS): New.
	* configure.ac (GMP_C_HIDDEN_ALIAS): Invoke.

2015-09-01 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpq/cmp.c (mpq_cmp_numden): Cast to avoid over/underflow.
	* tests/mpn/t-toom22.c (MIN_AN): Use defined value.
	* tests/mpz/t-fac_ui.c: Check big factorial modulo a larger prime.
	* mpn/generic/bsqrtinv.c: Use sqrlo+mullo_n instead of powlo(,,3,,).
	* mpq/div.c: Move a branch out of the normal flow.

2015-08-31  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86/fat/fat.c (fake_cpuid_table): Update similarly to
	corresponding x86_64 code.

2015-08-31 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpq/cmp.c (mpq_cmp_z): New function to compare mpq with mpz,
	asked by Vincent Delecroix for the SageMath project.
	* gmp-h.in: Declare it.
	* doc/gmp.texi: Document it.
	* tests/mpq/t-cmp_z.c: New file to test mpq_cmp_z (from t-cmp.c).
	* tests/mpq/Makefile.am (check_PROGRAMS): Add t-cmp_z.

	* mpn/generic/powlo.c: Use mpn_sqrlo.

2015-08-29  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86_64/fat/fat.c (fake_cpuid_table): Add CPU aliases.

2015-08-25 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* configure.ac (AH_VERBATIM): Add HAVE_NATIVE_mpn_mullo_basecase.
	* mpn/generic/sqrlo.c (mpn_sqrlo): Use mullo_basecase when faster.
	* mpn/generic/sqrlo_basecase.c: More readable #defines.

	* tune/tuneup.c (tune_sqrlo): New function to tune sqrlo thresholds.
	(all): Call it, after multiplication and FFT.
	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add sqrlo{,_basecase}.c .
	* gmp-impl.h: Add all SQRLO_*_THRESHOLD* defs, for tuning and default.
	* mpn/generic/sqrlo.c: Remove default threshold definitions.
	* mpn/generic/sqrlo_basecase.c: Use SQRLO_DC_THRESHOLD_LIMIT.
	* mpn/minithres/gmp-mparam.h: New SQRLO_*_THRESHOLDs.

	* tune/tuneup.c (tune_mullo): Set MULLO_MUL_N_THRESHOLD to never
	whenever the FFT threshold does not exist.

	* mpf/cmp.c: Remove some branches.

2015-08-25  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86_64/x86_64-defs.m4: Output computed numbers in base-10 instead
	of base-16 to avoid bugs on Solaris, FreeBSD, and old NetBSD.

2015-08-23  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86_64/fat/fat.c (fake_cpuid_table): Add more entries, handle
	Broadwell separately.

	* configure.ac (fat_path): Add coreibwl.

2015-08-18 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/rootrem.c (logbased_root): New function.
	(mpn_rootrem_internal): Use it to estimate highest 9 bits of the root.

	* gmp-impl.h (MPQ_PTR_SWAP, MPQ_SRCPTR_SWAP): New macros.

2015-08-17  Torbjörn Granlund  <torbjorng@google.com>

	* acinclude.m4 (X86_64_PATTERN): Add skylake.
	* config.guess: Corresponding changes.
	* config.sub: Corresponding changes.
	* configure.ac: Corresponding changes.
	* mpn/x86_64/skylake/gmp-mparam.h: New file.

2015-08-15  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/generic/mullo_basecase.c: Provide alternative code, make default.

2015-08-04 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/refmpn.c (refmpn_sqrlo): New function.
	* tests/tests.h: Define it.

	* mpn/generic/sqrlo.c: New file, new function.
	* mpn/generic/sqrlo_basecase.c: New file, new function.
	* gmp-impl.h (mpn_sqrlo, mpn_sqrlo_basecase): Declare them.
	* configure.ac (gmp_mpn_functions): Add new files.

	* tests/mpn/t-sqrlo.c: New file, new test.
	* tests/mpn/Makefile.am (check_PROGRAMS): Add new test.
	* tests/devel/try.c: Support mpn_sqrlo and mpn_sqrlo_basecase.

	* tune/common.c (speed_mpn_sqrlo{,_basecase}): New functions.
	* tune/speed.c: Support new functions.
	* tune/speed.h (SPEED_ROUTINE_MPN_MULLO_BASECASE): Update.
	(SPEED_ROUTINE_MPN_SQRLO): New macro.

	* mpn/generic/rootrem.c: Avoid divisions if not needed.

	* tests/mpn/t-broot.c: Test also k=1.
	* mpz/aorsmul_i.c: Move branches out of main line.

2015-07-28 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/sqrtrem.c (mpn_dc_sqrt): Support odd sizes.

2015-07-16  Torbjörn Granlund  <torbjorng@google.com>

	* tune/speed.c: Remove now redundant MPN_FILL.

	* configure.ac (hppa-hpux): Never use O3 optimisation.

2015-07-09  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/ia64/add_n_sub_n.asm: Make it work for HP-UX.
	* mpn/ia64/addmul_2.asm: Likewise.
	* mpn/ia64/aors_n.asm: Likewise.
	* mpn/ia64/aorsorrlshC_n.asm: Likewise.
	* mpn/ia64/cnd_aors_n.asm: Likewise.
	* mpn/ia64/gcd_1.asm: Likewise.
	* mpn/ia64/lshiftc.asm: Likewise.
	* mpn/ia64/mod_34lsub1.asm: Likewise.
	* mpn/ia64/mul_2.asm: Likewise.
	* mpn/ia64/sec_tabselect.asm: Likewise.
	* mpn/ia64/sqr_diag_addlsh1.asm: Likewise.

2015-07-01 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (MPN_FILL): New macro, generalise MPN_ZERO.

	* mpn/generic/sqrtrem.c (mpn_dc_sqrt): New function not computing remainder.
	(mpn_dc_sqrtrem): Use tdiv_q instead of divrem, use given scratch space.
	(mpn_sqrtrem): Use mpn_dc_sqrt for both even and odd sizes.

2015-06-24  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86_64/fastsse/com.asm: Disalllow zero size operands.

	* mpn/x86_64/fastsse/copyi.asm: Suppress looping in basecase code.

2015-06-23 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/sqrtrem.c (mpn_sqrtrem2): Simplify branches.
	(mpn_dc_sqrtrem): Don't compute remainder if not needed.

2015-06-23  Torbjörn Granlund  <torbjorng@google.com>

	* gmp-impl.h: Remove K&R stringize support.
	* tests/devel/try.c: Likewise.
	* tests/t-constants.c: Likewise.
	* tests/mpf/t-fits.c: Likewise.
	* tests/mpz/t-fits.c: Likewise.

	* configure.ac (AC_C_STRINGIZE): Remove.

2015-06-15 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/devel/try.c: Support mpn_sqrt (sqrtrem with remainder = NULL).
	* mpn/generic/sqrtrem.c: Reorder branches for single limb operands.

2015-06-15  Torbjörn Granlund  <torbjorng@google.com>

	* config.guess: Rewrite code for AVX handling to deal with broken cpuid
	states.

2015-06-11  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86/k7/gcd_1.asm: Align stack for calls.
	* mpn/x86/p6/gcd_1.asm: Amend last change: align for PIC and non-PIC.

2015-06-10 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/sqrtrem.c: Use sqrtrem1 for single limb operands.

	* tests/mpz/t-root.c: Check also mpz_root return value.
	* mpn/generic/rootrem.c: Shorten first and last loop.

	* mpn/generic/toom2_sqr.c: Add some ASSERTs.
	* mpn/generic/toom22_mul.c: Likewise.
	* tests/mpn/t-toom22.c: stop testing some unsafe (unused) corner cases.

2015-06-08  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86/p6/gcd_1.asm: Align stack for calls.

2015-06-06  Torbjörn Granlund  <torbjorng@google.com>

	* config.sub: Recognise any arm*neon CPU.
	* configure.ac (powerpc): Add p8 directory for power8 and later.
	* mpn/powerpc64/mode64/p8/invert_limb.asm: New file.

2015-06-01  Torbjörn Granlund  <torbjorng@google.com>

	* tune/speed.c (routine): Measure "mpn_sqrt" and "mpn_root", which are
	really the corresponding "rem" functions with NULL remainder argument.

	* tune/speed.h (SPEED_ROUTINE_MPN_SQRTROOT_CALL): New.
	(SPEED_ROUTINE_MPN_SQRTREM, SPEED_ROUTINE_MPN_ROOTREM):	Remove.

	* tune/common.c (speed_mpn_sqrt, speed_mpn_root): New functions.
	(speed_mpn_sqrtrem): Use SPEED_ROUTINE_MPN_SQRTROOT_CALL
	(speed_mpn_rootrem): Likewise.

2015-05-30 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpf/cmp_ui.c: Use macros, remove branches, correct nails.
	* mpf/cmp_si.c: Likewise.
	* mpf/int_p.c: Use a simpler loop to ignore zero limbs.

	* mpf/sqrt_ui.c: Special case for sqrt(1).
	* tests/mpf/t-sqrt_ui.c: Test special cases.

	* gmp-h.in: Declare (and inline) mpn_zero_p.
	* gmp-impl.h: Remove mpn_zero_p.
	* mpn/generic/zero_p: New file to include the function in the library.
	* configure.ac (gmp_mpn_functions): Add it.
	* doc/gmp.texi: Document it.

	* mpz/combit.c: Call mpn_zero_p only if size is not zero.
	* mpz/scan1.c: Likewise.
	* tests/mpn/t-brootinv.c: Likewise.
	* tests/mpn/t-div.c: Likewise.
	* tests/mpn/t-minvert.c: Likewise.

	* mini-gmp/mini-gmp.h: Declare mpn_zero_p.
	* mini-gmp/mini-gmp.c: Define mpn_zero_p as a function, not a macro.

2015-05-28  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (Low-level Functions): Document mpn_divexact_1 and
	mpn_cnd_swap (the latter was forgotten for the 2015-02-08 change).

2015-05-28  Linus Nordberg  <linus@nordberg.se>

	* configure.ac: Remove double quotes in help strings, make some
	clarifications.

2015-05-24 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpq/div.c: Reduce memory use.
	* tests/mpq/reuse.c: Test also mpq_FUNCTION (x,x,x).
	* mpz/swap.c: Use _SWAP macros.

2015-05-18  Torbjörn Granlund  <torbjorng@google.com>

	* configure.ac (arm): Let compiler decide about arm vs thumb encoding.

2015-05-18 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-h.in (mpn_neg): Niels' code using mpn_neg.
	* gmp-h.in (mpn_com): Unconditionally declare prototype.

2015-05-17  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/arm/v6/sqr_basecase.asm: Rewrite for speed.

2015-05-16  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/arm/v6/addmul_2.asm: Rewrite for speed and size.

2015-05-15  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/arm/v7a/cora7/gmp-mparam.h: New file.
	* mpn/arm/v7a/cora8/gmp-mparam.h: New file.
	* configure.ac (arm): Point to new directories.

2015-05-15 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/invertappr.c: Reduce memory usage.
	* gmp-impl.h (mpn_invertappr_itch): Update accordingly.
	* tune/tuneup.c (tune_invertappr, tune_invert): Update min_size.

	* mpn/generic/mu_div_qr.c: Pass scratch memory to mpn_invertappr.
	* mpn/generic/mu_divappr_q.c: Likewise.

2015-05-12  Felix Janda  <felix.janda@posteo.de>

	* mpn/powerpc32/elf.m4 (LEA): Adopt to new ABI.

2015-05-09 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/invertappr.c: Reduce memory usage.
	* gmp-impl.h (mpn_invertappr_itch): Update accordingly.

2015-05-01  Torbjörn Granlund  <torbjorng@google.com>

	* tune/tuneup.c (all): Make GCD tuning last since it is not robust.

2015-04-27  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86_64/coreibwl/gmp-mparam.h: New file.

2015-04-26  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86_64/coreibwl/mul_basecase.asm: New file.
	* mpn/x86_64/coreibwl/sqr_basecase.asm: New file.

2015-04-26 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tune/common.c (speed_mpn_neg, speed_mpz_2fac_ui): New functions.
	(speed_mpn_add_1, speed_mpn_add_1_inplace): New functions.
	(speed_mpn_sub_1, speed_mpn_sub_1_inplace): New functions.
	* tune/speed.h: Declare them all.
        * tune/speed.c (routine): Added mpn_neg, mpn_add_1, mpn_sub_1,
	mpn_add_1_inplace, mpn_sub_1_inplace, and mpz_2fac_ui.

2015-04-25 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/invert.c: Split add in the correction test.
	* mpn/generic/invertappr.c: Cleanup of loops and branches.

	* mpn/generic/hgcd_reduce.c: Use TMP_ALLOC_LIMBS_3.
	* mpn/generic/powm.c: Use TMP_ALLOC_LIMBS_2.
	* mpn/generic/rootrem.c: Likewise.
	* mpn/generic/remove.c: Remove redundant #ifdef.
	* mpn/generic/perfpow.c: Likewise.

2015-04-21  Torbjörn Granlund  <torbjorng@google.com>

	* printf/sprintffuns.c (gmp_sprintf_final): Remove extra parameters.

	* mpn/arm/v6/popham.asm: Add MULFUNC_PROLOGUE.
	* mpn/powerpc64/mode64/rsh1aors_n.asm: Likewise.
	* mpn/powerpc64/mode64/p6/aorsmul_1.asm: Likewise.

2015-04-19  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86_64/x86_64-defs.m4 (oplist): Fix typo.
	(mulx): Simplify.
	(adcx, adox): New defines, using helper function adx.
	* mpn/x86_64/coreibwl/mul_1.asm: New file.
	* mpn/x86_64/coreibwl/addmul_1.asm: New file.
	* configure.ac (x86_64): Put coreibwl in appropriate code path.

	* configure.ac (x86_64): Pass more exact Intel CPU options.

2015-04-13  Torbjörn Granlund  <torbjorng@google.com>

	* longlong.h (arm): Rewrite.  Support thumb2; use gcc builtins for
	count_leading_zeros, use accurate code selection critera.

2015-04-13  Marc Glisse  <marc.glisse@inria.fr>

	* configure.ac (x86_64): Extend noavx to ABI=64.

2015-04-10  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/alpha/ev6/mod_1_4.asm: Use LDGP.

2015-04-01  Torbjörn Granlund  <torbjorng@google.com>

	* configure.ac (sparc): Don't use use -xO4, it miscompiles by design.

2015-03-24  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/generic/mul_fft.c (mpn_fft_best_k): Don't make pointers `static'
	just because they point to static (i.e., file-local) data.

2015-03-15  Torbjörn Granlund  <torbjorng@google.com>

	* acinclude.m4 (X86_64_PATTERN): Add CPU code names.

	* config.guess: Add more CPUs, use CPU code names.
	* config.sub: Corresponding changes.
	* configure.ac: Corresponding changes.

2015-02-21  Niels Möller  <nisse@lysator.liu.se>

	* gmp-h.in (mpn_divexact_1): New public declaration.
	* gmp-impl.h: Moved from here.

2015-02-08  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (Low-level Functions): Document mpn_cnd_swap.

	* mpn/generic/cnd_swap.c (mpn_cnd_swap): New file, moved function
	here. Also changed cnd argument type from int to mp_limb_t.
	* mpn/generic/sec_invert.c (mpn_cnd_swap): Old location.
	* configure.ac: Added cnd_swap.
	* gmp-h.in (mpn_cnd_swap): Added prototype.

2015-01-19  Torbjörn Granlund  <torbjorng@google.com>

	* configure.ac (arm): Provide architecture specific configs in addition
	to implementation specific configs.

	* config.guess (arm): Use configfsf.guess's guess as default before
	conditionally appending "neon".

2015-01-08  Torbjörn Granlund  <torbjorng@google.com>

	* config.guess: Match POWER8 for AIX.

	* longlong.h: Add many casts inside assembly input operands, this
	insures proper zero extension.

2014-12-27  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__gmp_unary_expr): Use __gmp_resolve_ref.
	(__gmp_expr): New specialization for unary expressions with
	a builtin argument.

2014-12-26  Marc Glisse  <marc.glisse@inria.fr>

	* gmp-impl.h (tmp_debug_entry_t): Change block to type void*.

2014-12-22  Torbjörn Granlund  <torbjorng@google.com>

	* longlong.h (mips64, mips32): Work around one clang bug.

2014-12-18  Torbjörn Granlund  <torbjorng@google.com>

	* longlong.h (umul_ppmm): Use input temps in more places.

2014-12-10  Marc Glisse  <marc.glisse@inria.fr>

	* tests/cxx/clocale.c (localeconv, nl_langinfo): Match glibc's
	prototype in C++.

2014-12-09  Torbjörn Granlund  <torbjorng@google.com>

	* configure.ac (powerpc): Remove hardwired -mpowerpc, causes clang
	problems.  Optionally pass -m32.

2014-12-08  Marc Glisse  <marc.glisse@inria.fr>

	* config.guess (ultrasparc*-*-*): Update for T4 and T5.
	* config.sub (ultrasparc*-*-*): Update for T5.
	* configure.ac (ultrasparc*-*-*): Update for T5.

	* longlong.h (sparc64): Define COUNT_LEADING_ZEROS_NEED_CLZ_TAB
	with VIS3.

	* tests/misc/t-locale.c (localeconv, nl_langinfo): Match glibc's
	prototype in C++.
	* tests/mpf/t-get_si.c (check_limbdata): Avoid narrowing conversion
	from -1 to unsigned inside {}.

2014-12-02  Torbjörn Granlund  <torbjorng@google.com>

	* config.guess (arm*-*-*): Redirect stderr.

2014-11-26  Torbjörn Granlund  <torbjorng@google.com>

	* configure.ac (arm*-*-*): Optionally pass redundant fpu mode options
	in order to placate clang.

	* mpn/arm/neon/lshiftc.asm: Avoid insn form missing from clang.

2014-11-24  Torbjörn Granlund  <torbjorng@google.com>

	* configure.ac (mips*-*-*): Provide ABI synonyms (for clang pretending
	to be gcc).

2014-11-18  Torbjörn Granlund  <torbjorng@google.com>

	From Hannes Mehnert:
	* config.guess (arm*-*-*): Base guesses on first matching /proc/cpuinfo
	line.

2014-11-17  Torbjörn Granlund  <torbjorng@google.com>

	* longlong.h (__longlong_h_C): New macro.
	(mpn_umul_ppmm, etc): Use it for C++ support.

2014-11-15  Torbjörn Granlund  <torbjorng@google.com>

	* tests/mpz/reuse.c: Make function vectors 'static'.

	* tests/mpn/logic.c (check_one): Make string variable 'const'.

	* tests/mpz/t-perfpow.c (tests): Make 'static'.

	* tune/tuneup.c (fftmes): Remove an unused variable.

2014-11-15  Marc Glisse  <marc.glisse@inria.fr>

	* tests/amd64check.c (calling_conventions_fenv): Mark as extern "C".
	* tests/x86check.c (calling_conventions_fenv): Likewise.

2014-11-13  Hans Wennborg  <hwennborg@google.com>

	* mpn/generic/toom_interpolate_8pts.c: Fix operator precedence in
	ASSERT.

2014-11-13  Torbjörn Granlund  <torbjorng@google.com>

	* tune/speed.h: Add casts for C++ compatibility.
	(speed_cyclecounter): Mark as extern "C".
	(mpn_mod_1_1p_1, mpn_mod_1_1p_2): Correct prototype.

	* tune/tune-gcd-p.c: Add casts for C++ compatibility.

	* tune/tuneup.c: Add casts for C++ compatibility.
	(mpn_divrem_1_tune, mpn_mod_1_tune): Mark as extern "C".
	(INSERT_FFTTAB): Produce sentinels differently to silence compiler.

2014-11-12  Torbjörn Granlund  <torbjorng@google.com>

	* gen-psqr.c: Add casts for C++ compatibility.

	* tests/misc/t-scanf.c: Include config.h early for HAVE_xxx.

2014-11-08  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/x86/x86-defs.m4 (LEA, LEAL): Make sure to put eip stub code in
	text segment.
	* mpn/x86/darwin.m4: Likewise.

	* tune/speed.h (i386 speed_cyclecounter): Remove inline asm code, rely
	on external version.

2014-11-06  Torbjörn Granlund  <torbjorng@google.com>

	* config.guess: Ignore appended letters such E in POWER8E.
	* configure.ac: Supply cflags for power8, power9.

2014-11-03  Torbjörn Granlund  <torbjorng@google.com>

	* mpn/powerpc32/addmul_1.asm: Avoid negative stack pointer references.
	* mpn/powerpc32/lshift.asm: Likewise.
	* mpn/powerpc32/lshiftc.asm: Likewise.
	* mpn/powerpc32/p3-p7/aors_n.asm: Likewise.
	* mpn/powerpc32/rshift.asm: Likewise.
	* mpn/powerpc32/sec_tabselect.asm: Likewise.
	* mpn/powerpc32/submul_1.asm: Likewise.
	* mpn/powerpc32/vmx/mod_34lsub1.asm: Likewise.

2014-10-13  Torbjörn Granlund  <torbjorng@google.com>

	* acinclude.m4 (freebsd hacked gcc): Test for crash-prone FreeBSD gcc.

2014-10-03  Peter Breitenlohner <peb@mppmu.mpg.de>

	* mpn/generic/sec_tabselect.c: Adjust type to silence compiler.

2014-10-01  Torbjörn Granlund  <torbjorng@google.com>

	* All Makefile.am: INCLUDES => AM_CPPFLAGS.

	* configure.ac (arm64): Set gcc_cflags_maybe to enable Neon (for clang
	pretending to be gcc).

2014-09-24  Marc Glisse  <marc.glisse@inria.fr>

	* longlong.h (arm64 count_trailing_zeros, count_leading_zeros): Use
	gcc's builtins.
	(arm64 umul_ppmm): Use macro arguments only once.

2014-09-22  Marc Glisse  <marc.glisse@inria.fr>

	* mpn/arm64/lshift.asm: Avoid negative immediates.
	* mpn/arm64/rshift.asm: Likewise.

2014-09-13  Marc Glisse  <marc.glisse@inria.fr>

	* mpn/generic/div_qr_1n_pi1.c: Honor NO_ASM.
	* mpn/generic/div_qr_1n_pi2.c: Likewise.
	* mpn/generic/div_qr_1u_pi2.c: Likewise.
	* mpn/generic/div_qr_2.c: Likewise.
	* mpn/generic/mod_1_1.c: Likewise.
	* mpn/generic/redc_2.c: Likewise.

2014-08-31  Torbjörn Granlund  <tege@gmplib.org>

	* mpn/arm64/lshift.asm: New file.
	* mpn/arm64/rshift.asm: New file.

2014-09-01 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (TMP_ALLOC_LIMBS_3): New macro to allocate 3 blocks.
	(mpn_remove): Update declaration with mp_srcptr arguments.
	* mpn/generic/remove.c: Use TMP_ALLOC_LIMBS_3. mp_srcptr for args.

	* mpn/generic/perfpow.c (pow_equals): TMP_DECL only where needed.
	(perfpow): Use TMP_ALLOC_LIMBS_3.
	(mpn_perfect_power_p): Skip useless allocations. Use mpn_remove.
	* tests/mpz/t-perfpow.c (check_random): Check more perfect powers.

	* mpn/generic/divis.c: Use TMP_ALLOC_LIMBS_2. Share a count.

2014-08-30  Torbjörn Granlund  <tege@gmplib.org>

	* mpn/arm64/mod_34lsub1.asm: New file.

2014-08-27  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp/mini-gmp.c (mpz_abs_sub_bit): Do full normalization,
	needed if mpz_clrbit clears the most significant one bit.

2014-08-23  Torbjörn Granlund  <tege@gmplib.org>

	* mpn/arm64/bdiv_dbm1c.asm: New file.

	* mpn/arm64/com.asm: New file.

	* mpn/arm64/sec_tabselect.asm: New file.

	* mpn/arm64/popcount.asm: New file.
	* mpn/arm64/hamdist.asm: New file.

	* configure.ac: Put generic arm/neon earlier in path.

2014-08-14 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpq/canonicalize.c: Earlier check for negative denominator.
	* mpq/set_d.c: Stricter allocation.

2014-08-03  Torbjörn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bobcat/mul_1.asm: Fix typo in offset affecting DOS64.

2014-07-28 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/fib2_ui.c: remove #if HAVE_NATIVE_mpn_rsblsh_n.
	* mpz/fib2_ui.c: Use tabulated values, when available.
	* mpz/fib_ui.c: #if HAVE_NATIVE_mpn_addlsh1_n, use it.

	* mpq/cmp_ui.c: Remove a branch.
	* mpq/cmp_si.c: Likewise.

	* mpn/generic/toom_interpolate_7pts.c: Replace an in-place add
	with add_n + INCR_U.

	* tests/mpf/t-fits.c: use ui_sub instead of sub_ui+neg.

	* mini-gmp/mini-gmp.c: Remove some useless variables.

2014-07-27  Torbjörn Granlund  <tege@gmplib.org>

	* mpn/x86/k7/gcd_1.asm: Use LEAL.

	* mpn/x86/x86-defs.m4 (LEAL): New.
	(LEA): Append to `load_eip' instead of ASM_END, like darwin.m4.
	* mpn/x86/darwin.m4 (LEAL): New.

2014-07-26  Torbjörn Granlund  <tege@gmplib.org>

	* mpn/x86/pentium/mode1o.asm: Add Darwin PIC code.
	* mpn/x86/pentium/bdiv_q_1.asm: Likewise.
	* mpn/x86/pentium/dive_1.asm: Likewise.
	* mpn/x86/pentium/popcount.asm: Likewise.
	* mpn/x86/pentium/hamdist.asm: Likewise.
	* mpn/x86/k6/gcd_1.asm: Likewise.

	* mpn/x86: Append ASM_END to many files.
	* tests/x86call.asm: Append ASM_END.

	* mpn/x86/fat/fat_entry.asm (FAT_ENTRY, FAT_INIT):
	Support Darwin.

	* mpn/x86/darwin.m4 (ASM_END): New, body from EPILOGUE_cpu.
	(EPILOGUE_cpu): Remove.

	* mpn/x86/x86-defs.m4 (LEA): Put `mov_eip_' thunks in ASM_END instead
	of EPILOGUE_cpu.

2014-07-05  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (Low-level Functions): Document that scratch need
	for mpn_sec_add_1 and mpn_sec_sub_1 are at most n limbs.
	(Low-level Functions): Document allowed overlap for mpn_addmul_1
	and mpn_submul_1.

2014-07-02  Torbjörn Granlund  <tege@gmplib.org>

	* mpn/x86_64/x86_64-defs.m4: Fix quoting.

	* mpn/x86_64/atom/redc_1.asm: Enforce proper stack allocation.
	* mpn/x86_64/bobcat/redc_1.asm: Likewise.
	* mpn/x86_64/core2/divrem_1.asm: Likewise.
	* mpn/x86_64/core2/gcd_1.asm: Likewise.
	* mpn/x86_64/core2/redc_1.asm: Likewise.
	* mpn/x86_64/coreihwl/redc_1.asm: Likewise.
	* mpn/x86_64/coreinhm/redc_1.asm: Likewise.
	* mpn/x86_64/coreisbr/redc_1.asm: Likewise.
	* mpn/x86_64/divrem_1.asm: Likewise.
	* mpn/x86_64/divrem_2.asm: Likewise.
	* mpn/x86_64/gcd_1.asm: Likewise.
	* mpn/x86_64/mod_1_1.asm: Likewise.
	* mpn/x86_64/mod_1_2.asm: Likewise.
	* mpn/x86_64/mod_1_4.asm: Likewise.

2014-06-30  Torbjörn Granlund  <tege@gmplib.org>

	* config.sub: Generalise x86 patterns.

2014-06-17  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__gmp_gcd_function, __gmp_lcm_function): New classes.
	(gcd, lcm): New functions.
	* doc/gmp.texi (C++ Interface Integers): Document them.
	* tests/cxx/t-ops2.cc (checkz): Test them.

2014-06-16  Torbjörn Granlund  <tege@gmplib.org>

	* mpf/mul.c: Postpone TMP_MARK.

	* mpn/generic/perfpow.c (perfpow): Combine TMP_ALLOCs.

2014-06-15  Torbjörn Granlund  <tege@gmplib.org>

	* tests/refmpn.c (refmpn_mul): Rewrite to avoid O(n) recursion depth.

2014-06-09  Torbjörn Granlund  <tege@gmplib.org>

	* mpn/generic/mullo_n.c: Remove default THRESHOLDs.
	* gmp-impl.h: Put MULLO THRESHOLDs here.  Improve various THRESHOLD
	defaults.

2014-06-08  Torbjörn Granlund  <tege@gmplib.org>

	* gmp-impl.h (TMP_ALLOC): Decrease limit to about half.

	* mpn/generic/toom53_mul.c: Replace many TMP_SALLOC invocations
	by a single TMP_ALLOC.
	* mpn/generic/toom42_mul.c: Likewise.

	* mpn/generic/sec_sqr.c: Don't unconditionally call mpn_sqr_basecase
	since it fails for non-cryptographic sizes for some obsolete CPUs.

	* mpn/generic/sec_powm.c: Remove own squaring code, instead use
	mpn_mul_basecase.

	* tests/mpn/logic.c (main): Don't use TMP_SALLOC_LIMBS.

	* mpn/generic/dcpi1_div_q.c: Avoid TMP_SALLOC_LIMBS.
	* mpn/generic/dcpi1_div_qr.c: Likewise.

2014-06-08 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/mul.c: Tighter allocation in Toom{2,3}X branches.

2014-06-06  Torbjörn Granlund  <tege@gmplib.org>

	* mpn/generic/mul.c: Swap some TMP_SALLOC_LIMBS for TMP_ALLOC_LIMBS
	and some TMP_ALLOC_LIMBS for TMP_SALLOC_LIMBS.

2014-05-31 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpf/ui_sub.c: Remove buggy code, use a wrapper to mpf_sub.
	* tests/mpf/t-sub.c: More corner cases and strict checking.
	* mpf/sub.c: Use more mpn_ primitives and macros.

	* tests/mpf/t-int_p.c: Test numbers with both integer and
	fractionary parts.

	* mpf/int_p.c: Delay zero branch and use mpn_zero_p.
	* mpf/fits_s.h: No special case for SIZ == 0.
	* mpf/fits_u.h: Likewise.

2014-05-29  Marc Glisse  <marc.glisse@inria.fr>

	* gmp-h.in: Include <limits.h>.
	(__GMP_UINT_MAX, __GMP_ULONG_MAX, __GMP_USHRT_MAX): Remove.
	* gmp-impl.h (ULONG_MAX, UINT_MAX, USHRT_MAX, LONG_MAX, INT_MAX,
	SHRT_MAX): Remove unnecessary redefinition.
	* tests/t-gmpmax.c: Remove file.
	* tests/Makefile.am: Remove t-gmpmax.

2014-05-22 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpf/t-sub.c (check_data): Test also ui_sub and sub_ui.

2014-05-20 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gen-fac.c: +1 in the init2 argument before setbit.
	* gen-fib.c: Likewise. (Thanks Niels)
	* mini-gmp/mini-gmp.c: Likewise.
	* rand/randmts.c: Likewise.

	* mpn/generic/invert.c: Remove unused TMP_MARK.
	* mpn/generic/invertappr.c: Avoid a branch.
	* mpz/millerrabin.c (millerrabin): Consider the rare case n is a power.

2014-05-15 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.c: Micro-optimisations.

	* gen-fib.c: Use mpz_setbit.
	* gen-psqr.c: Skip even numbers when looking for primes.

	* mpn/generic/invert.c: Avoid a branch.
	* mpn/generic/toom2_sqr.c: Avoid a few branches in the odd case.
	* mpn/generic/toom22_mul.c: Likewise.

2014-05-08  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (std::common_type): Remove partial specialization for two
	identical expressions. New partial specialization for a single type.
	* tests/cxx/t-cxx11.cc: Test it.

2014-04-14  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (mpz_invert): Clarify behavior in the zero ring.

2014-04-04  Marc Glisse  <marc.glisse@inria.fr>

	* longlong.h (i386): Add comment about "cc" clobber.

2014-04-04  Torbjorn Granlund  <tege@gmplib.org>

	* acinclude.m4 (X86_64_PATTERN): Generalise patterns to allow "noavx"
	suffix.

	* mpn/generic/div_qr_1n_pi1.c: Conditionalise ARM asm on !__thumb__.

2014-04-03  Marc Glisse  <marc.glisse@inria.fr>

	* mpn/arm64/mul_1.asm, mpn/arm64/gcd_1.asm: Use official b.cond syntax.
	* mpn/arm64/invert_limb.asm, mpn/arm64/aorsmul_1.asm: Prefix
	immediates with #.

2014-04-03  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Append "noavx" for CPUs which have AVX but where the
	kernel does not support it.
	* configure.ac: Accept "noavx" cpu name suffixes.  Conditionally pass
	-mno-avx.

2014-04-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/k8/redc_1.asm: Workaround for Darwin assembler quirk.

2014-03-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mod_1_1.c: Conditionalise ARM asm on !__thumb__.

2014-03-31  Marc Glisse  <marc.glisse@inria.fr>

	* mpn/arm/dive_1.asm, mpn/arm/invert_limb.asm: Use RODATA.
	* acinclude.m4 ([long long reliability tests]): Declare functions.
	(GMP_PROG_CC_FOR_BUILD_WORKS, GMP_PROG_EXEEXT_FOR_BUILD,
	GMP_C_FOR_BUILD_ANSI, GMP_CHECK_LIBM_FOR_BUILD): Replace exit(0) with
	return 0, no declaration needed.
	(GMP_CHECK_LIBM_FOR_BUILD): Include <math.h> to declare log.

2014-03-30  Marc Glisse  <marc.glisse@inria.fr>

	* README: Remove mention to Berkeley MP compatibility.

2014-03-26  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/gcd_1.asm: Provide default for
	BMOD_1_TO_MOD_1_THRESHOLD.

2014-03-24  Torbjorn Granlund  <tege@gmplib.org>

	* Version 6.0.0 released.

	* mpn: Update countless gmp-mparam.h files.

2014-03-22  Torbjorn Granlund  <tege@gmplib.org>

	* Makefile.am (LIBGMP_LT_*, LIBGMPXX_LT_*): Bump version info.
	* gmp-h.in: Bump version.

2014-03-17  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac: Remove clipper, i960, ns32k, pyr, a29k, z8000.
	* mpn/clipper: Remove directory and all its files.
	* mpn/i960: Likewise.
	* mpn/ns32k: Likewise.
	* mpn/pyr: Likewise.
	* mpn/a29k: Likewise.
	* mpn/z8000: Likewise.
	* mpn/Makefile.am (TARG_DIST): Purge removed directories.
	* doc/gmp.texi: Remove special mentions of removed architectures.

2014-03-12 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.c (mpz_probab_prime_p): Micro-optimisation.

2014-03-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/bd2/gmp-mparam.h: New file.
	* mpn/x86_64/bd2/gmp-mparam.h: New file.

2014-03-06  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpz/t-pprime_p.c (check_composites): New function.
	(check_primes): New function.
	(main): Call them. Also use TESTS_REPS.

	* mini-gmp/mini-gmp.c (gmp_millerrabin): New internal function.
	(mpz_probab_prime_p): New function.
	* mini-gmp/mini-gmp.h (mpz_probab_prime_p): Declare it.
	* mini-gmp/tests/t-pprime_p.c: New test program.
	* mini-gmp/tests/Makefile (CHECK_PROGRAMS): Added t-pprime_p.

2014-03-03  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp/mini-gmp.c (mpz_congruent_p): New function.
	* mini-gmp/mini-gmp.h: Declare it.
	* mini-gmp/tests/t-cong.c: New file, based on tests/mpz/t-cong.c.
	* mini-gmp/tests/Makefile (CHECK_PROGRAMS): Added t-cong.

	* mini-gmp/tests/testutils.c (dump): New function. Deleted static
	functions in other files.
	(mpz_set_str_or_abort): Moved function here, from...
	* mini-gmp/tests/t-cmp_d.c: ... old location.

	* mini-gmp/tests/t-reuse.c (dump3): Renamed, from ...
	(dump): ...old name.

2014-03-01  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/sec_powm.c (mpn_sec_powm): Clarify comment and
	asserts.

2014-02-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fat/fat.c (fake_cpuid): Handle id 7, make bold claims.

2014-02-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fat/fat_entry.asm: Zero ecx for the benefit of new BMI2
	feature test.

	* mpn/x86_64/fat/fat.c (__gmpn_cpuvec_init): Run CPUVEC_SETUP_coreihwl
	conditionally on BMI2 availability.

	* config.guess: Revert "coreihwl" to "coreisbr" if cpuid indicates that
	BMI2 is missing.
	(x86 cpuid, 2 variants): Zero ecx for the benefit of new BMI2 feature
	test.

2014-02-21 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.c (mpn_sqrtrem): New function.
	* mini-gmp/mini-gmp.h: Declare it.
	* mini-gmp/tests/t-sqrt.c: Test it.

2014-02-17  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/div_qr_1.c (mpn_div_qr_1): Revert yesterday's fix.
	Hopefully no longer needed.

	* mpn/s390_64/gmp-mparam.h (DIV_QR_1_NORM_THRESHOLD): Up to 1.
	* mpn/s390_64/z10/gmp-mparam.h (DIV_QR_1_NORM_THRESHOLD): Up to 1.

	* tune/tuneup.c (tune_div_qr_1): Ensure DIV_QR_1_NORM_THRESHOLD,
	DIV_QR_1_UNNORM_THRESHOLD >= 1.

2014-02-16 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/div_qr_1.c: Disallow DIV_QR_1_NORM_THRESHOLD==0.

2014-02-15  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpn/t-div.c: Fix typo.

2014-02-15 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* doc/gmp.texi (mpz_roinit_n, MPZ_ROINIT_N): Document that
	at least a readable limb is required.
	* mini-gmp/mini-gmp.c (mpz_div_qr): init + set = init_set .

2014-02-14  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (Low-level Functions): Update docs for
	mpn_sec_powm, to specify that left-over exponent bits must be
	zero.

2014-02-11  Niels Möller  <nisse@lysator.liu.se>

	* Makefile.am (EXTRA_DIST): Distribute COPYING.LESSERv3,
	COPYINGv2, and COPYINGv3.

	* doc/gmp.texi (Low-level Functions): Updated mpn_sec_powm docs.

	* mpn/generic/sec_powm.c (mpn_sec_powm): Replaced exponent limb
	count argument by bit count. Don't leak high exponent bits, and
	drop the requirement that the most significant exponent limb is
	non-zero.
	(mpn_sec_powm_itch): Analogous interface change.
	* gmp-h.in: Updated prototypes.
	* mpz/powm_sec.c (mpz_powm_sec): Update mpn_sec_powm* calls.
	* tune/tuneup.c (tune_powm_sec): Likewise. Also deleted code
	fiddling with the high exponent bits.

2014-02-10 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/tests/t-limbs.c: New test for mpz_limbs_*.
	* mini-gmp/tests/Makefile (CHECK_PROGRAMS): Add it.

2014-02-09  Niels Möller  <nisse@lysator.liu.se>

	* tune/tuneup.c (tune_powm_sec): Avoid timing of the nonsensical
	parameters nbits = 1, winsize = 2. Decrement tabulated values, to
	better match the > comparison when the table is used.

	* mpn/generic/sec_powm.c (win_size): Comment why we always get
	win_size(eb) <= eb. Make the table const.
	(mpn_sec_powm): Deleted handling of winsize > initial ebi. For
	now, replaced with an ASSERT_ALWAYS.

2014-02-08 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.c (mpz_realloc2, mpz_limbs_read, mpz_limbs_modify
	mpz_limbs_write, mpz_limbs_finish, mpz_roinit_n): New functions.
	(mpn_perfect_square_p): New function.
	* mini-gmp/mini-gmp.h: Declare them.

	* mini-gmp/tests/t-mul.c: Use roinit and limbs_read to test mpn.
	* mini-gmp/tests/t-sqrt.c: Test also mpn_perfect_square_p.

2014-02-08  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/sec_invert.c (mpn_cnd_neg_itch): #if:ed out unused
	function.

	* mpn/generic/sec_div.c: Simplified code for the normalized case.

	* tests/mpn/t-div.c (main): Test mpn_sec_div_qr and mpn_sec_div_r
	with normalized d.

2014-02-04  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (Low-level Functions): Document mpn_sec_add_1 and
	mpn_sec_sub_1.

2014-02-03 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.c (mpn_rootrem): Allow NULL argument.

	* mini-gmp/mini-gmp.c (mpn_zero): New function.
	(mpz_perfect_square_p): New function.
	* mini-gmp/mini-gmp.h: Declare them.

	* mini-gmp/tests/t-sqrt.c: Test mpz_perfect_square_p.
	* mini-gmp/tests/t-root.c: Test also 1-th root, allow perfect powers.

2014-01-29  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi (Floating-point Functions): Revise.

2014-01-29  Niels Möller  <nisse@lysator.liu.se>

	* README: Don't refer to specific COPYING* files, instead refer to
	manual for details.

	* COPYING.LIB: Renamed, to...
	* COPYING.LESSERv3: ... new name.
	* COPYING: Renamed, to...
	* COPYINGv3: ... new name.
	* COPYINGv2: New file, GPLv2.

	* doc/gmp.texi (Copying): Document dual licensing.

2014-01-27  Torbjorn Granlund  <tege@gmplib.org>

	* Update library files license to use LGPL3+ and GPL2+.

2014-01-27 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpn/t-aors_1.c: Check sec_aors_1 red zones (not smart).

	* mpn/generic/sec_aors_1.c: Mark the 2nd argument as const.
	* gmp-h.in (mpn_sec_add_1, mpn_sec_sub_1): Likewise.

2014-01-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fat/fat.c (fake_cpuid_table): Use proper steamroller and
	excavator values.

	* config.guess: Amend last AMD change.

	* mpn/s390_64/lshift.asm: Align loop.
	* mpn/s390_64/rshift.asm: Likewise.
	* mpn/s390_64/lshiftc.asm: Likewise.
	* mpn/s390_64: Add z10 cycle numbers.

2014-01-23 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* printf/repl-vsnprintf.c: Feed case 'z' in switch (type) with case 'z'
	in switch (fchar).

	* mini-gmp/tests/t-aorsmul.c: New file, test for mpz_{add,sub}mul{,_ui}
	* mini-gmp/tests/Makefile: Add t-aorsmul.

2014-01-21 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* acinclude.m4 (GMP_FUNC_VSNPRINTF): Get rid of varargs.

2014-01-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fat/fat.c (__gmpn_cpuvec_init): Fix duplicate entries for
	AMD "jaguar".

	* demos/expr: Get rid of varargs code and references.

2014-01-19  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Add new AMD CPUs (piledriver, steamroller, excavator,
	jaguar).
	* config.sub: Corresponding updates.
	* configure.ac: Likewise.
	* acinclude.m4 (X86_64_PATTERN): Likewise.
	* mpn/x86_64/fat/fat.c: Likewise.

	* Rename mpn_sec_minvert => mpn_sec_invert, many files affected.
	* mpn/generic/sec_invert.c: New name for sec_minvert.c.

	* doc/gmp.texi: Undocument mpz_array_init.

	* acinclude.m4 (GMP_C_STDARG): Comment out.
	* configure.ac: Suppress GMP_C_STDARG invocation.

	* Get rid of varargs code and references, many file affected.

	* Use mpq_t in favour of MP_RAT, many mpq files affected.

	* Get rid of BYTES_PER_MP_LIMB, most files affected.

	* mpz/iset.c: Avoid overflow in allocation computation.
	* mpz/mul.c: Likewise.
	* mpf/init.c: Likewise.
	* mpf/init2.c: Likewise.
	* mpf/iset.c: Likewise.
	* mpf/iset_d.c: Likewise.
	* mpf/iset_si.c: Likewise.
	* mpf/iset_str.c: Likewise.
	* mpf/iset_ui.c: Likewise.

	* mpz/array_init.c: Avoid two overflow scenarios in allocation
	computation.

	* mpn/s390_64/z10/gmp-mparam.h: New file.

	* mpz/clears.c: Call __gmp_free_func ourselves instead of via
	mpz_clears.
	* mpf/clears.c: Analogous change.
	* mpq/clears.c: Analogous change.

	* mpz/clear.c: Add cast to avoid overflow of (later ignored) argument.
	* mpf/clear.c: Likewise.

2014-01-19 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.c (mpn_popcount): New function.
	(mpz_popcount): Use it.
	(mpz_addmul_ui, mpz_addmul, mpz_submul_ui, mpz_submul): Added.
	* mini-gmp/mini-gmp.h: Declare them.

2014-01-18  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/t-aors_1.c: Test also mpn_sec_add_1 and mpn_sec_sub_1.

	* tests/mpn/t-minvert.c (main): Pass smallest allowed bit_size
	argument to mpn_sec_minvert.

2014-01-18  Marc Glisse  <marc.glisse@inria.fr>

	* doc/gmp.texi (C++ Interface Limitations): Warn against C++11 auto.

2014-01-18 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/t-parity.c: Use 1UL to generate unsigned constants.
	* tests/t-constants.c: Disable a non portable (unneeded) check.

2014-01-18  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/sec_aors_1.c (mpn_sec_add_1, mpn_sec_sub_1): New
	file.

	* mpn/generic/sec_minvert.c (mpn_sec_add_1_itch, mpn_sec_add_1):
	Deleted static definitions.
	(mpn_cnd_swap): Use volatile.

	* configure.ac (gmp_mpn_functions): sec_add_1 and sec_sub_1.
	(GMP_MULFUNC_CHOICES): Set up for sec_aors_1.

2014-01-16  Niels Möller  <nisse@lysator.liu.se>

	* tune/common.c (speed_mpn_sec_minvert): New function.
	* tune/speed.h: Declare it.
	(SPEED_ROUTINE_MPN_SEC_MINVERT): New macro.
	* tune/speed.c (routine): Added mpn_sec_minvert.

	* mini-gmp/mini-gmp.c (mp_bits_per_limb): New const value.
	* mini-gmp/mini-gmp.h: Declare it.

2014-01-12  Marc Glisse  <marc.glisse@inria.fr>

	* demos/expr/expr.h: Add extern "C" for C++.

2014-01-11  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi (Notes for Particular Systems): Add items about old
	NetBSD and current FreeBSD m4 problems.  Add item about FreeBSD's
	broken limits.h.

2014-01-05 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h: Declare all _itch functions using ATTRIBUTE_CONST.

2014-01-05  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac (alpha): Set extra_functions conditionally.

	* gmp-h.in (mpn_sec_minvert): Remove formal parameters.

	* doc/gmp.texi: Improve doc for several functions.

	* mpn/generic/sec_tabselect.c: Declare input arg using 'const'.
	* gmp-h.in: Analogous change.

	* gmp-h.in: Declare all itch functions using __GMP_ATTRIBUTE_PURE.
	* gmp-impl.h: Likewise.

2014-01-05 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpn/t-minvert.c: Always compare with mpz_invert results,
	add red zone to scratch.
	* tests/mpn/t-sizeinbase.c: New test.
	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-sizeinbase.c .
	* tests/mpn/t-div.c: Use mpn_sec_div_*_itch().

	* mpn/generic/pow_1.c: Micro-optimisation.

2014-01-04  Torbjorn Granlund  <tege@gmplib.org>

	* acinclude.m4 (GMP_PROG_M4): Avoid hex output, since case varies.

2014-01-03  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Support newer haswell, broadwell, silvermont.
	* mpn/x86_64/fat/fat.c (__gmpn_cpuvec_init): Likewise.

	* acinclude.m4 (GMP_PROG_M4): Check that eval's radix argument work.

	* mpz/invert.c: Rely on gcdext for all operands, removing faulty
	special case.
	* tests/mpz/t-invert.c: Enforce correct behaviour for |mod| = 1.

2014-01-02  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (Low-level Functions): Document mpn_sizeinbase.

	Enable previously unused mpn_sizeinbase function.
	* configure.ac (gmp_mpn_functions): Added sizeinbase.
	* gmp-h.in (mpn_sizeinbase): New prototype.

2014-01-02  Marc Glisse  <marc.glisse@inria.fr>

	* gmp-impl.h: Always include <limits.h>.
	* tests/mpn/t-get_d.c: Remove comment about <limits.h>

	* gmp-h.in (__GMP_USHRT_MAX): Use the promoted type.
	* gmp-impl.h (USHRT_HIGHBIT, SHRT_MIN, SHRT_MAX): Likewise.
	* tests/t-constants.c: Adapt printf strings.
	* tests/t-gmpmax.c: Likewise.

	* tests/mpn/t-hgcd_appr.c (hgcd_appr_valid_p): Add parentheses.

2014-01-01  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi (Low-level Functions for cryptography): Update interface
	for mpn_sec_div_qr and fix typos in mpn_sec_minvert text.

	* mpn/generic/sec_div.c: Rewrite to make mpn_sec_div_qr return high
	quotient limb.
	* gmp-h.in (mpn_sec_div_qr): Update declaration.
	* tests/mpn/t-div.c: Adapt.

2013-12-31  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (Low-level Functions for cryptography): Document
	mpn_sec_minvert.

2013-12-30  Marc Glisse  <marc.glisse@inria.fr>

	* doc/gmp.texi (C++ interface internals): Break long line.

2013-12-30  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi (Low-level Functions for cryptography): New section.

2013-12-29  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-minvert.
	* tests/mpn/t-minvert.c: New file.

	* configure.ac (gmp_mpn_functions): Added sec_minvert.
	* gmp-h.in (mpn_sec_minvert, mpn_sec_minvert_itch): New
	declarations.
	* mpn/generic/sec_minvert.c (mpn_sec_minvert)
	(mpn_sec_minvert_itch): New functions.
	(mpn_sec_add_1, mpn_cnd_neg, mpn_cnd_swap, mpn_sec_eq_ui): New
	helper functions.

2013-12-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/sec_powm.c: Fix an ASSERT.

	* gmp-h.in (mpn_sec_mul, mpn_sec_mul_itch): New declarations.
	* gmp-h.in (mpn_sec_sqr, mpn_sec_sqr_itch): Likewise.
	* mpn/generic/sec_mul.c: New file.
	* mpn/generic/sec_sqr.c: New file.

	* gmp-h.in (mpn_sec_powm, mpn_sec_powm_itch): New declarations.
	* gmp-h.in (mpn_sec_div_qr, mpn_sec_div_qr_itch): Likewise.
	* gmp-h.in (mpn_sec_div_r, mpn_sec_div_r_itch): Likewise.
	* gmp-impl: Remove declarations of above functions.

	* configure.ac (gmp_mpn_functions): Add sec_mul and sec_sqr.

2013-12-26 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* Update many file's encoding to UTF-8.
	* doc/tasks.html: Update <meta content> accordingly.
	* doc/projects.html: Likewise.

2013-12-26  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac: Rename mpn_blah_sec to mpn_sec_blah.
	* gmp-impl.h: Corresponding changes.
	* mpn/asm-defs.m4: Corresponding changes.
	* tune/Makefile.am: Corresponding changes.
	* tune/common.c: Corresponding changes.
	* tune/speed.c: Corresponding changes.
	* tune/speed.h: Corresponding changes.
	* tune/tuneup.c: Corresponding changes.
	* mpz/powm_sec.c: Update calls.
	* tests/mpn/t-div.c: Likewise.

	* mpn/generic/sec_powm.c: New name for mpn/generic/powm_sec.c.
	* mpn/generic/sec_div.c: New name for mpn/generic/sb_div_sec.c.
	* mpn/generic/sec_pi1_div.c: New name for mpn/generic/sbpi1_div_sec.c.
	* mpn/generic/sec_tabselect.c: New name for mpn/generic/tabselect.c.

	* mpn/alpha/sec_tabselect.asm: New name for tabselect.asm.
	* mpn/arm/neon/sec_tabselect.asm: New name for tabselect.asm.
	* mpn/arm/sec_tabselect.asm: New name for tabselect.asm.
	* mpn/ia64/sec_tabselect.asm: New name for tabselect.asm
	* mpn/powerpc32/sec_tabselect.asm: New name for tabselect.asm
	* mpn/powerpc64/sec_tabselect.asm: New name for tabselect.asm
	* mpn/sparc64/sec_tabselect.asm: New name for tabselect.asm
	* mpn/x86/mmx/sec_tabselect.asm: New name for tabselect.asm
	* mpn/x86/sec_tabselect.asm: New name for tabselect.asm
	* mpn/x86_64/bd1/sec_tabselect.asm: New name for tabselect.asm
	* mpn/x86_64/core2/sec_tabselect.asm: New name for tabselect.asm
	* mpn/x86_64/coreinhm/sec_tabselect.asm: New name for tabselect.asm
	* mpn/x86_64/coreisbr/sec_tabselect.asm: New name for tabselect.asm
	* mpn/x86_64/fastsse/sec_tabselect.asm: New name for tabselect.asm
	* mpn/x86_64/k10/sec_tabselect.asm: New name for tabselect.asm
	* mpn/x86_64/pentium4/sec_tabselect.asm: New name for tabselect.asm
	* mpn/x86_64/sec_tabselect.asm: New name for tabselect.asm

2013-12-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/powm_sec.c: Handle 0^e mod m specially.
	* mpn/generic/powm_sec.c: ASSERT that the base is non-zero.

2013-12-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/powm_sec.c (redcify): Use passed scratch instead of
	locally allocated.
	(mpn_powm_sec_itch): Accommodate mpn_sb_div_r_sec's scratch needs.

2013-12-20  Mark Sofroniou  <marks@wolfram.com>

	* mpn/generic/mul_fft.c: Major overhaul of types.

2013-12-18  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi (Low-level Functions): Rewrite mpn_set_str docs.

2013-12-14  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	* mpn/powerpc32/darwin.m4: Allow (and ignore) optional
	'toc' parameter to PROLOGUE_cpu.
	* mpn/powerpc32/elf.m4: Likewise.

2013-12-09  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>

	* configure.ac: Check for ELFv2 ABI on PowerPC.
	* mpn/powerpc64/elf.m4: Set assembler ABI version for ELFv2
	and use appropriate PROLOGUE_cpu/EPILOGUE_cpu sequences.
	Support optional 'toc' parameter to PROLOGUE_cpu.
	* mpn/powerpc64/aix.m4: Allow (and ignore) optional
	'toc' parameter to PROLOGUE_cpu.
	* mpn/powerpc64/darwin.m4: Likewise.

	* mpn/powerpc64/mode64/dive_1.asm (mpn_divexact_1): Add 'toc'
	parameter to PROLOGUE.
	* mpn/powerpc64/mode64/divrem_1.asm (mpn_divrem_1): Likewise.
	* mpn/powerpc64/mode64/divrem_2.asm (mpn_divrem_2): Likewise.
	* mpn/powerpc64/mode64/gcd_1.asm (mpn_gcd_1): Likewise.
	* mpn/powerpc64/mode64/invert_limb.asm (mpn_invert_limb): Likewise.
	* mpn/powerpc64/mode64/mod_1_1.asm (mpn_mod_1_1p_cps): Likewise.
	* mpn/powerpc64/mode64/mod_1_4.asm (mpn_mod_1s_4p_cps): Likewise.
	* mpn/powerpc64/mode64/mode1o.asm (mpn_modexact_1c_odd): Likewise.
	* mpn/powerpc64/mode64/p7/gcd_1.asm (mpn_gcd_1): Likewise.
	* mpn/powerpc64/p6/lshift.asm (mpn_lshift): Likewise.
	* mpn/powerpc64/p6/lshiftc.asm (mpn_lshiftc): Likewise.
	* mpn/powerpc64/p6/rshift.asm (mpn_rshift): Likewise.
	* mpn/powerpc64/vmx/popcount.asm (mpn_popcount): Likewise.

2013-12-07  Niels Möller  <nisse@lysator.liu.se>

	* configfsf.sub: Updated to version 2013-10-01, from gnulib.
	* configfsf.guess: Updated to version 2013-11-29, from gnulib.

2013-12-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/div_qr_1.c: Make constant args asm inlines become limbs.
	* mpn/generic/div_qr_1n_pi1.c: Likewise.
	* mpn/generic/div_qr_2.c: Likewise.
	* mpn/generic/div_qr_2.c: Likewise.
	* mpn/generic/mod_1_1.c: Likewise.
	* mpn/generic/mod_1_2.c: Likewise.
	* mpn/generic/mod_1_3.c: Likewise.
	* mpn/generic/mod_1_4.c: Likewise.
	* mpn/generic/mulmid_basecase.c: Likewise.
	* mpn/generic/mulmod_bnm1.c: Likewise.
	* mpn/generic/sqrmod_bnm1.c: Likewise.
	* mpn/sparc64/divrem_1.c: Likewise.
	* mpn/sparc64/mod_1_4.c: Likewise.

	* mpn/generic/toom_interpolate_7pts.c (BINVERT_15): Fix typo.

2013-11-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/dos64.m4 (CALL): Provide to override default.

2013-11-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/x86_64-defs.m4 (CALL): Swap PIC test and macro defn.

	* mpn/generic/div_qr_2.c: Test HAVE_HOST_CPU_FAMILY_x86, not i386.

	* doc/gmp.texi: Update many URLs.

2013-11-04  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac: Set symbol OPENBSD for x86-openbsd hosts.
	* mpn/x86_64/fat/fat_entry.asm (PRETEND_PIC): New name for
	PIC_OR_DARWIN.
	(PRETEND_PIC): Set also for OPENBSD.

2013-10-29  Torbjorn Granlund  <tege@gmplib.org>

	* printf/doprnt.c (__gmp_doprnt): Use memcpy instead of strcpy.

2013-10-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/div_qr_1u_pi2.c: New file.
	* mpn/generic/div_qr_1n_pi2.c: New file.

2013-10-24  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86_64/div_qr_1n_pi1.asm: Bugfixes, for case n == 1 and
	in-place operation.
	* mpn/x86_64/k8/div_qr_1n_pi1.asm: Likewise.

	* mpn/generic/div_qr_1n_pi1.c (mpn_div_qr_1n_pi1): Bug fixes,
	off-by-one MPN_INCR_U, and support for in-place operation.

2013-10-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/fat/fat.c (fake_cpuid_table): Add Haswell.

2013-10-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/x86_64-defs.m4 (oplist): New define, data from `regnum'.
	(regnum): Use x86_lookup, feed oplist.

2013-10-22  Niels Möller  <nisse@lysator.liu.se>

	* tests/devel/try.c: Support mpn_div_qr_1n_pi1.

	* mpn/x86_64/k8/div_qr_1n_pi1.asm: Moved the below k10 file here.
	Applied tweak from Torbjörn to get it to run well on k8.

	* mpn/x86_64/k10/div_qr_1n_pi1.asm: New file (renamed above).
	Differs from generic x86_64 version by using cmov.

	* mpn/x86_64/div_qr_1n_pi1.asm: Reordered arguments to second mul.
	Deleted misleading cycle annotations.

2013-10-21  Niels Möller  <nisse@lysator.liu.se>

	* configure.ac: Add HAVE_NATIVE_mpn_div_qr_1n_pi1 to config.in.

	* mpn/generic/div_qr_1n_pi1.c (mpn_div_qr_1n_pi1): Fix typos
	affecting ASSERT.

2013-10-20  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86_64/div_qr_1n_pi1.asm: New file.

	* tune/div_qr_1_tune.c (__gmpn_div_qr_1n_pi1): Check
	div_qr_1n_pi1_method only when !HAVE_NATIVE_mpn_div_qr_1n_pi1.

	* mpn/asm-defs.m4 (define_mpn): Add div_qr_1n_pi1.

	* tune/common.c (speed_mpn_div_qr_1): New function, replacing...
	(speed_mpn_div_qr_1n, speed_mpn_div_qr_1u): ... deleted functions
	(speed_mpn_div_qr_1n_pi1, speed_mpn_div_qr_1n_pi1_1)
	(speed_mpn_div_qr_1n_pi1_2): New functions.
	* gmp-impl.h [TUNE_PROGRAM_BUILD]: Declare div_qr_1-related tuning
	variables.
	* tune/tuneup.c (speed_mpn_div_qr_1_tune, tune_div_qr_1): New
	functions.
	(div_qr_1n_pi1_method, div_qr_1_norm_threshold)
	(div_qr_1_unnorm_threshold): New globals.
	* tune/speed.c (routine): Replaced mpn_div_qr_1n and mpn_div_qr_1u
	by mpn_div_qr_1, requiring ".r" parameter. Added mpn_div_qr_1n_pi1
	and variants.
	* tune/speed.h (SPEED_ROUTINE_MPN_DIV_QR_1): Use the "r" parameter
	as divisor.
	* tune/div_qr_1n_pi1_2.c: New file.
	* tune/div_qr_1n_pi1_1.c: New file.
	* tune/div_qr_1_tune.c: New file.
	* tune/Makefile.am (libspeed_la_SOURCES): Added div_qr_1n_pi1_1.c,
	div_qr_1n_pi1_2.c, and div_qr_1_tune.c.

	* tune/speed.c (routine): Added mpn_div_qr_1n and mpn_div_qr_1u.
	* tune/speed.h (SPEED_ROUTINE_MPN_DIV_QR_1): New macro.
	(speed_mpn_div_qr_1n, speed_mpn_div_qr_1u): Declare.
	* tune/common.c (speed_mpn_div_qr_1n, speed_mpn_div_qr_1u): New
	functions.

	* gmp-impl.h (mpn_div_qr_1n_pi1): Declare function.
	* gmp-h.in (mpn_div_qr_1): Declare function.
	* configure.ac (gmp_mpn_functions): Added div_qr_1 and
	div_qr_1n_pi1.
	* mpn/generic/div_qr_1.c (mpn_div_qr_1): New file and function.
	* mpn/generic/div_qr_1n_pi1.c (mpn_div_qr_1n_pi1): New file and
	function.
	* tests/mpn/t-div.c (main): Test mpn_div_qr_1.

2013-10-17  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac (alpha): Pass -mieee via gcc_cflags_maybe.

2013-10-16  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Let AMD64 cpuid bit override pessimistic cpu guesses.

	* mpn/alpha/unicos.m4 (DATASTART): Accept optional align parameter.
	* mpn/alpha/divrem_2.asm: Use provided gp mechanisms.
	* mpn/alpha/default.m4 (PROLOGUE): Provide "..ng" post-gp label.
	* mpn/alpha/invert_limb.asm: Align table to 8-byte boundary.  Make code
	work if table is not fully aligned.  Properly test for BWX.

2013-10-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/alpha/default.m4 (DATASTART): Use RODATA instead of DATA;
	accept optional align parameter.
	* mpn/alpha/invert_limb.asm: Align table.
	* mpn/alpha/ev5/diveby3.asm: Likewise.

2013-10-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/k7/mod_1_1.asm: Use 'subl' form to avoid ambiguity.
	* mpn/x86/k7/mod_1_4.asm: Likewise.

	* configure.ac (X86_64_PATTERN): Append "cc" to cclist_64 and
	cclist_x32.

2013-10-08  Torbjorn Granlund  <tege@gmplib.org>
	    Marc Glisse  <marc.glisse@inria.fr>

	* tests/mpf/reuse.c (main): Compare addresses instead of names.
	Use larger numbers for exponents.

2013-10-08  Marc Glisse  <marc.glisse@inria.fr>

	* doc/mdate-sh, doc/texinfo.tex, install-sh, missing, ylwrap: Remove.
	* .bootstrap: Use autoreconf (and in particular automake -a).

	* gmp-h.in: Remove __need_size_t. Include <stddef.h>, not <cstddef>.

	* tests/mpf/reuse.c (main): Use small numbers as exponents.

2013-10-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/atom/aorsmul_1.asm: Slight tweak.

	* doc/gmp.texi (ABI and ISA): Document x32.

	* mpn/sparc64/ultrasparct3/dive_1.asm: Use our register names.

2013-09-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/atom/redc_1.asm: New file.

2013-09-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bobcat/redc_1.asm: Make the code for 1 <= n <= 3 work.

2013-09-22  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/redc_1.asm: Slightly tweak basecase code.

	* mpn/x86_64/core2/redc_1.asm: New file.

	* mpn/x86_64/bobcat/redc_1.asm: New file.

2013-09-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreinhm/redc_1.asm: New file.

2013-09-21  Marc Glisse  <marc.glisse@inria.fr>

	* tests/mpn/t-mulmid.c: Cast arguments of printf to int to match %d.
	* tests/rand/t-urbui.c: Use 1UL for unsigned constant.
	* mpn/generic/get_str.c: Avoid temporarily pointing outside an array.

2013-09-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/redc_1.asm: New file.

	* mpn/x86_64/k8/redc_1.asm: Complete rewrite.

	* mpn/x86_64/coreisbr/mullo_basecase.asm: Postpone pushes, short-
	circuit a branch.
	* mpn/x86_64/coreihwl/mullo_basecase.asm: Short-circuit a branch.

	* mpn/x86_64/core2/mullo_basecase.asm: New file.

2013-09-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fastsse/copyi-palignr.asm: Allocate more stack under DOS.

2013-09-18  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/core2/mul_basecase.asm: New file.
	* mpn/x86_64/core2/sqr_basecase.asm: New file.

	* mpn/x86_64/coreihwl/mullo_basecase.asm: New file.
	* mpn/x86_64/coreisbr/mullo_basecase.asm: New file.

2013-09-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fastsse/copyi-palignr.asm: Preserve xmm6-xmm8 under DOS.

2013-09-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/tabselect.asm: Use R8 for bit testing.

	* mpn/x86_64/coreihwl/mul_basecase.asm: Replace mul_1 code.

	* mpn/x86_64/coreisbr/aorsmul_1.asm: Rewrite.

2013-09-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/ia64/gcd_1.asm: Use dep for combining table base and low bits.

	* mpn/x86_64/fastsse/com-palignr.asm: Implement temp fix to properly
	handle overlap.

2013-09-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fastsse/copyi-palignr.asm: Rewrite rp != up (mod 16) code
	to make it handle any allowed overlap.

2013-09-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/atom/com.asm: New file, grabbing fastsse code.

	* mpn/x86_64/bd1/copyi.asm: New file, grabbing fastsse code.
	* mpn/x86_64/bd1/copyd.asm: Likewise.
	* mpn/x86_64/bd1/com.asm: Likewise.

	* mpn/x86_64/fastavx/copyi.asm: New file.
	* mpn/x86_64/fastavx/copyd.asm: New file.

2013-09-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreihwl/aorsmul_1.asm: Streamline.

2013-09-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreihwl/sqr_basecase.asm: Implement larger "corner".
	Misc tuning.

2013-09-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreihwl/redc_1.asm: New file.

	* mpn/x86_64/x86_64-defs.m4 (mulx): Handle negative offsets.

2013-08-31  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/sqr_basecase.asm: New file.

	* mpn/x86_64/sqr_diag_addlsh1.asm: New file.

2013-08-30  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fat/mul_basecase.c: New file.
	* mpn/x86_64/fat/sqr_basecase.c: New file.
	* mpn/x86_64/fat/mullo_basecase.c: New file.
	* mpn/x86_64/fat/redc_1.c: New file.

2013-08-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/k8/mul_basecase.asm: Move top-level basecase file to k8
	subdir.
	* mpn/x86_64/k8/sqr_basecase.asm: Likewise.
	* mpn/x86_64/k8/redc_1.asm: Likewise.
	* mpn/x86_64/k8/mullo_basecase.asm: Likewise.
	* mpn/x86_64/k8/mulmid_basecase.asm: Likewise.

	* mpn/ia64/aors_n.asm: Clean up some bundlings.

	* mpn/x86_64/fat/fat.c (__gmpn_cpuvec_init): Support Haswell.
	(fake_cpuid_table): Likewise.

	* configure.ac (x86): Remove any mulx paths.  Let bwl path = hwl path.
	(fat_path): Add coreihwl.

	* mpn/x86_64/coreihwl/aorsmul_1.asm: Move from `mulx' directory, use
	mulx() macro.
	* mpn/x86_64/coreihwl/mul_1.asm: Likewise.
	* mpn/x86_64/coreihwl/mul_2.asm: Likewise.
	* mpn/x86_64/coreihwl/mul_basecase.asm: Likewise.
	* mpn/x86_64/coreihwl/sqr_basecase.asm: Likewise.

	* mpn/x86_64/x86_64-defs.m4 (mulx): New macro.
	(regnum, regnumh, ix): Supporting macros.

2013-08-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/divrem_1.asm: New file.

2013-08-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fastsse/com-palignr.asm: New file, closely based on
	copyi-palignr.asm.

	* mpn/x86_64/fastsse/copyi.asm Use "test R8(reg)" instead of "bt".
	* mpn/x86_64/fastsse/copyd-palignr.asm: Likewise.
	* mpn/x86_64/fastsse/copyi-palignr.asm: Likewise.
	* mpn/x86_64/fastsse/lshift-movdqu2.asm: Likewise.
	* mpn/x86_64/fastsse/lshiftc-movdqu2.asm: Likewise.
	* mpn/x86_64/fastsse/rshift-movdqu2.asm: Likewise.
	* mpn/x86_64/fastsse/tabselect.asm: Likewise.

	* mpn/sparc64/ultrasparct3/sqr_diag_addlsh1.asm: New file.

	* mpn/alpha/aorslsh2_n.asm: New file.
	* mpn/alpha/aorslsh1_n.asm: Rewrite.
	* mpn/alpha/ev6/aorslsh1_n.asm: New file.

2013-08-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/alpha/sqr_diag_addlsh1.asm: New file.
	* mpn/alpha/sqr_diagonal.asm: Remove.
	* mpn/alpha/ev6/sqr_diagonal.asm: Remove.

2013-08-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc32/sqr_diag_addlsh1.asm: New file.
	* mpn/powerpc32/sqr_diagonal.asm: Remove.

2013-08-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreihwl/mulx/sqr_basecase.asm: New file.

2013-08-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/aors_n.asm: Complete rewrite.

2013-08-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreihwl/mulx/mul_basecase.asm: New file.

	* mpn/x86_64/bd1/mul_2.asm: New file.

	* mpn/x86_64/coreihwl/gmp-mparam.h: New file.

2013-08-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreihwl/mulx/mul_2.asm: New file.
	* mpn/x86_64/coreihwl/mulx/addmul_2.asm: New file.

	* mpn/x86_64/coreinhm/aorsmul_1.asm: New file.

	* mpn/x86_64/coreisbr/mul_basecase.asm: Save some O(n) and O(1) cycles.

	* mpn/x86_64/coreisbr/mul_2.asm: New file.

2013-08-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/addmul_2.asm: Complete rewrite.

2013-08-01  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bd1/mul_basecase.asm: New file.

	* mpn/x86_64/coreisbr/mul_basecase.asm: New file.

	* mpn/x86_64/coreihwl/aorsmul_1.asm: New file.

2013-07-31  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/atom/mul_2.asm: New file.
	* mpn/x86_64/atom/addmul_2.asm: New file.
	* mpn/x86_64/atom/mul_1.asm: New file.
	* mpn/x86_64/atom/aorsmul_1.asm: New file.

	* mpn/x86_64/coreihwl/mul_1.asm: New file.

	* configure.ac (x86): Add Haswell-specific path.

	* configure.in (fat_functions): Add cnd_add_n, cnd_sub_n..
	* gmp-impl.h (struct cpuvec_t): Add fields for new fat functions.
	* gmp-impl.h: Adjust corresponding declarations.

	* mpn/x86_64/x86_64-defs.m4 (CPUVEC_FUNCS_LIST): Add new fat functions.
	* mpn/x86/x86-defs.m4 (CPUVEC_FUNCS_LIST): Likewise.
	* mpn/x86_64/fat/fat.c (__gmpn_cpuvec): Likewise.
	* mpn/x86/fat/fat.c (__gmpn_cpuvec): Likewise.

2013-07-30  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/popcount.asm: New file.

2013-07-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bobcat/aors_n.asm: New file.

	* mpn/x86_64/pentium4/aorslshC_n.asm: Remove a spurious emms insn.

	* mpn/x86_64/bd1/aorrlsh1_n.asm: New file.
	* mpn/x86_64/bd1/sublsh1_n.asm: New file.

2013-07-22  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/mod_1_1.asm: Handle little-endian mode.
	* mpn/powerpc64/mode64/mod_1_4.asm: Likewise.

2013-07-16  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi: Declare countless of function arguments as 'const'.

2013-07-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/core2/aors_n.asm: Rewrite.

	* mpn/generic/sb_div_sec.c: Compute inverse as floor(B^2/(dh+1)), per
	Niels' suggestion.
	* mpn/generic/sbpi1_div_sec.c: Remove inverse rounding-up code.

2013-07-14  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/divrem_1.asm: Remove explicit nop after CALL.
	* mpn/powerpc64/mode64/divrem_2.asm: Likewise.
	* mpn/powerpc64/mode64/mod_1_1.asm: Likewise.
	* mpn/powerpc64/mode64/mod_1_4.asm: Likewise.

2013-07-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/atom/cnd_add_n.asm: New file.
	* mpn/x86/atom/cnd_sub_n.asm: New file.o

2013-07-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/sbpi1_div_sec.c: Partial rewrite.

2013-07-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/cnd_aors_n.asm: Tweak for better speed on K8, bobcat, bd1,
	NHM, Atom.

2013-07-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/p7/copyi.asm: Handle n = 0.
	* mpn/powerpc64/p7/copyd.asm: Likewise.

2013-07-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/p7/aormul_2.asm: New file.

	* mpn/powerpc64/darwin.m4 (EXTRA_REGISTER): New define.
	* mpn/powerpc64/aix.m4: New define (actually undefine).
	* mpn/powerpc64/elf.m4: Likewise.

2013-07-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/com.asm: Rewrite.

	* mpn/powerpc64/p7/copyi.asm: New file.
	* mpn/powerpc64/p7/copyd.asm: New file.

2013-07-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/gcd_1.asm: New file.
	* mpn/powerpc64/mode64/p7/gcd_1.asm: New file.

2013-07-01  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac: Comment out AC_PROG_F77.

	* mpn/powerpc64/mode64/rsh1add_n.asm: Remove.
	* mpn/powerpc64/mode64/rsh1sub_n.asm: Remove.
	* mpn/powerpc64/mode64/rsh1aors_n.asm: New file, code not based on
	removed files.

2013-06-28  Marc Glisse  <marc.glisse@inria.fr>

	* cxx/ismpf.cc: Use GMP_DECIMAL_POINT.
	* cxx/osmpf.cc: Likewise.
	* tests/cxx/t-locale.cc: Likewise.

2013-06-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/p7/aorsorrlshC_n.asm: New file.
	* mpn/powerpc64/mode64/p7/aorsorrlsh1_n.asm: New file.
	* mpn/powerpc64/mode64/p7/aorsorrlsh2_n.asm: New file.

	* mpn/powerpc64/mode64/aorsorrlshC_n.asm: Use alias regname.

2013-06-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/p7/aors_n.asm: New file.

2013-06-22  Torbjorn Granlund  <tege@gmplib.org>

	* aorslshC_n.asm, aorslsh2_n.asm, aorslsh1_n.asm: Remove.
	* aorsorrlshC_n.asm, aorsorrlsh1_n.asm, aorsorrlsh2_n.asm: New files.

2013-06-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/p6/lshift.asm: Rewrite switching-into-loop code.
	* mpn/powerpc64/p6/rshift.asm: Likewise.
	* mpn/powerpc64/p6/lshiftc.asm: Likewise.

2013-06-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/p6/lshift.asm: Fix typo in label reference.
	For 32-bit mode, zero extend `n' argument and split retval.
	* mpn/powerpc64/p6/rshift.asm: Likewise.
	* mpn/powerpc64/p6/lshiftc.asm: Likewise.

2013-06-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mu_div_q.c: Remove obsolete comment.

2013-06-09  Marc Glisse  <marc.glisse@inria.fr>

	* mpn/generic/get_d.c (mpn_get_d): Avoid signed overflow.
	* mpz/kronzs.c (mpz_kronecker_si): Use ABS_CAST.

2013-05-31  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mu_div_q.c: Call mpn_mu_divappr_q for entire division,
	never just for tail.  (This fixes performance issues at the expense of
	memory needs.)

2013-05-26  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac (*sparc*-*-*): Major overhaul.

2013-05-22  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi (Reporting Bugs): Ask for configure's output.

	* mpn/ia64/divrem_2.asm: Don't clobber f16-f18.

2013-05-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/udiv.asm: Change spacing to work around binutils bug.

2013-05-16  Torbjorn Granlund  <tege@gmplib.org>

	* Makefile.am (LIBGMP_LT_*, LIBGMPXX_LT_*): Bump version info.

	* tests/misc.c (tests_hardware_getround, tests_hardware_setround):
	Avoid assembly dependency unless WANT_ASSEMBLY.

	* configure.ac (WANT_ASSEMBLY): Conditionally define.

2013-05-14  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac (arm1156): Don't fall back to plain v6 compiler option.

2013-05-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/mul_1.asm: Handle n = 1 for DOS64.  Streamline.
	* mpn/x86_64/coreisbr/aorsmul_1.asm: Streamline.

2013-05-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/aorsmul_1.asm: Fix, then enable DOS64 support.
	* mpn/x86_64/coreisbr/mul_1.asm: Enable DOS64 support.

	* mpn/x86/p6/mmx/gmp-mparam.h: Set down SQR_TOOM2_THRESHOLD to parent
	directory value.

2013-05-09  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac (--enable-fake-cpuid): New option.
	* mpn/x86_64/fat/fat.c (WANT_FAKE_CPUID): Remove defaulting.
	* mpn/x86/fat/fat.c (WANT_FAKE_CPUID): Likewise.

	* mpn/x86_64/bd1/mul_1.asm: Fix typo.

2013-05-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fat/fat.c (fake_cpuid): Handle 0x80000001 request.
	(fake_cpuid_available): Remove unused function.

	* mpn/generic/mod_1_1.c: Cast constant udiv_rnnd_preinv arguments.
	* mpn/generic/mod_1_2.c: Likewise.
	* mpn/generic/mod_1_3.c: Likewise.
	* mpn/generic/mod_1_4.c: Likewise.
	* mpn/generic/divrem_2.c: Likewise.

2013-05-06  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess (power*): Handle all ppc970 variants.

2013-05-03  David S. Miller  <davem@davemloft.net>

	* tune/common.c (speed_mpn_addlsh1_n, speed_mpn_sublsh1_n,
	speed_mpn_rsblsh1_n, speed_mpn_addlsh2_n, speed_mpn_sublsh2_n,
	speed_mpn_rsblsh2_n): Don't define if these routines are macros.
	* tune/speed.c (routine): Likewise don't table if they are macros.

	* mpn/sparc64/ultrasparct3/addmul_1.asm: Add T4 and T3 timings.
	* mpn/sparc64/ultrasparct3/aormul_4.asm: Likewise.
	* mpn/sparc64/ultrasparct3/aorslsh_n.asm: Likewise.
	* mpn/sparc64/ultrasparct3/cnd_aors_n.asm: Likewise.
	* mpn/sparc64/ultrasparct3/submul_1.asm: Likewise.

2013-05-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/ultrasparct3/aorslsh_n.asm: Invoke INITCY where it has
	effect.

	* gmp-impl.h: Amend last change.
	* tests/devel/try.c (choice_array): Don't try to table addlsh1_n etc if
	a macro.

2013-05-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/copyd.asm: Suppress dead pointer update.
	* mpn/arm/copyi.asm: Likewise.
	* mpn/arm/neon/logops_n.asm: Likewise.
	* mpn/arm/neon/tabselect.asm: Likewise.
	* mpn/arm/rshift.asm: Likewise.
	* mpn/arm/tabselect.asm: Likewise.
	* mpn/arm/v6/dive_1.asm: Likewise
	* mpn/arm/v7a/cora15/neon/copyi.asm: Likewise.

	* mpn/arm/v7a/cora15/neon/com.asm: New file.

2013-05-01  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/ultrasparct3/aormul_4.asm: New file.

	* configure.ac (GMP_MULFUNC_CHOICES): Support mul_3 + addmul_3 and
	mul_4 + addmul_4.

	* mpn/sparc64/ultrasparct3/aormul_2.asm: Optimise lead-in code.

	* mpn/sparc64/ultrasparct3/missing.m4 (addxccc): Allow g2 as input.
	(umulxhi): Save and restore o7 to allow it as in/out parameter.

2013-04-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v7a/cora15/cnd_aors_n.asm: New file, was mis-named.

	* mpn/sparc64/ultrasparct3/addmul_1.asm: Rewrite.

	* mpn/sparc64/ultrasparct3/submul_1.asm: Rewrite.

	* mpn/sparc64/ultrasparct3/cnd_aors_n.asm: New file.

	* gmp-impl.h: Override mpn_addlsh1_n, mpn_addlsh2_n, mpn_sublsh1_n, etc
	with mpn_addlsh_n, etc when !HAVE_NATIVE the former but HAVE_NATIVE the
	latter.

	* mpn/sparc64/ultrasparct3/aorslsh_n.asm: New file.

	* configure.ac (sparc-*-*): Recognise t5 along with t3 and t4.
	Remove sparc64/ultrasparct1 from path_64 for T3, T3, and T5.

2013-04-27  Mike Frysinger  <vapier@gentoo.org>

	* configure.ac (arm*-*-*): Set up path also for plainest CPU variants.

2013-04-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v6/popham.asm: New file.

	* mpn/arm/v7a/cora15/cnd-aors_n.asm: New file.

2013-04-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/mod_34lsub1.asm: Clear carry smarter.

	* mpn/arm/v7a/cora15/logops_n.asm: Conditionally suppress conditionally
	used code.

	* mpn/arm/v7a/cora15/submul_1.asm: New file.

2013-04-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v7a/cora15/com.asm: New file.

	* mpn/arm/v7a/cora15/logops_n.asm: New file.

2013-04-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v7a/cora15/aors_n.asm: New file.

	* mpn/arm/v7a/cora15/addmul_1.asm: Rewrite.

2013-04-18  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/alpha/tabselect.asm: New file.

2013-04-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc32/tabselect.asm: New file.

	* longlong.h (arm64 count_trailing_zeros): New.

	* mpn/arm64/invert_limb.asm: New file.

	* mpn/generic/dive_1.c: Rewrite to use Hensel division also for
	size = 1.

	* mpn/generic/mod_1_1.c (add_mssaaaa): Provide VIS3 variant.

	* configure.ac: Remove "missing" from extra_functions_64 for coreibwl.

	* mpn/sparc64/ultrasparct3/mul_1.asm: Decrease loop alignment.
	* mpn/sparc64/ultrasparct3/aormul_2.asm: Likewise.

2013-04-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/alpha/invert_limb.asm: Generate table.
	* mpn/powerpc64/mode64/invert_limb.asm: Likewise.
	* mpn/s390_64/invert_limb.asm: Likewise.
	* mpn/sparc64/ultrasparct3/invert_limb.asm: Likewise.
	* mpn/x86_64/invert_limb_table.asm: Likewise.

2013-04-15  David S. Miller  <davem@davemloft.net>

	* mpn/sparc32/sparc-defs.m4 (LEA64): New macro.
	* mpn/sparc64/gcd_1.asm: Use it.
	* mpn/sparc64/ultrasparct3/dive_1.asm: Likewise.
	* mpn/sparc64/ultrasparct3/invert_limb.asm: Likewise.
	* mpn/sparc64/ultrasparct3/mode1o.asm: Likewise.

	* mpn/sparc64/gcd_1.asm: Use RODATA, TYPE, and SIZE.

2013-04-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/ultrasparct3/invert_limb.asm: Avoid addend for GOT entry,
	it is not portable.

	* mpn/sparc64/tabselect.asm: New file.

	* mpn/x86/mmx/tabselect.asm: New file.
	* configure.ac (x86): Add x86/mmx to path for relevant CPUs.

	* mpn/sparc64/gcd_1.asm: Use rdpc for PIC.
	* mpn/sparc64/ultrasparct3/mode1o.asm: Use rdpc for PIC.
	* mpn/sparc64/ultrasparct3/dive_1.asm: Use rdpc for PIC.
	* mpn/sparc64/ultrasparct3/invert_limb.asm: Handle PIC, use rdpc.

	* Revert remaining parts of recent sparc LEA changes.

2013-04-14  David S. Miller  <davem@davemloft.net>

	* mpn/sparc32/v9/sqr_diagonal.asm: Revert LEA and INT32 changes.
	* mpn/sparc64/gcd_1.asm: Likewise.

2013-04-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bd1/tabselect.asm: New file.
	* mpn/x86_64/coreisbr/tabselect.asm: New file.
	* mpn/x86_64/k10/tabselect.asm: New file.
	* mpn/x86_64/coreinhm/tabselect.asm: New file.
	* mpn/x86_64/core2/tabselect.asm: New file.
	* mpn/x86_64/pentium4/tabselect.asm: New file.

	* mpn/x86_64/fastsse/tabselect.asm: New file.
	* mpn/arm/neon/tabselect.asm: Rewrite.
	* mpn/arm/tabselect.asm: Rewrite.
	* mpn/powerpc64/tabselect.asm: Rewrite.
	* mpn/x86_64/tabselect.asm: Rewrite.

	* tune/speed.h (SPEED_ROUTINE_MPN_TABSELECT): Implement special code,
	making .r argument be table width.

2013-04-11  David S. Miller  <davem@davemloft.net>

	* mpn/sparc32/sparc-defs.m4 (LEA): Remove unused local label.
	(LEA_LEAF): Likewise.

2013-04-11  Niels Möller  <nisse@lysator.liu.se>

	* mpn/arm/v6/submul_1.asm: New file, using the corresponding
	addmul_1 loop + complement trick.

2013-04-10  David S. Miller  <davem@davemloft.net>

	* acinclude.m4 (GMP_ASM_SPARC_GOTDATA,
	GMP_ASM_SPARC_SHARED_THUNKS): New feature tests.
	* configure.ac: Call GMP_ASM_SPARC_GOTDATA and
	GMP_ASM_SPARC_SHARED_THUNKS on sparc.
	* mpn/sparc32/sparc-defs.m4 (LEA, LEA_LEAF, LEA_THUNK): New macros.
	* mpn/sparc32/udiv.asm: Convert over to LEA, LEA_LEAF, and LEA_THUNK.
	* mpn/sparc32/v8/addmul_1.asm: Likewise.
	* mpn/sparc32/v8/mul_1.asm: Likewise.
	* mpn/sparc32/v8/supersparc/udiv.asm: Likewise.
	* mpn/sparc32/v8/udiv.asm: Likewise.
	* mpn/sparc64/gcd_1.asm: Likewise.
	* mpn/sparc64/ultrasparct3/dive_1.asm: Likewise.
	* mpn/sparc64/ultrasparct3/invert_limb.asm: Likewise.
	* mpn/sparc64/ultrasparct3/mode1o.asm: Likewise.
	* mpn/sparc32/v9/sqr_diagonal.asm: Likewise and use INT32.

2013-04-09  Torbjorn Granlund  <tege@gmplib.org>

	* longlong.h (sparc64): Test __VIS__ instead of __sparc_vis3.

	* config.guess (sparc*): Invoke set_cc_for_build to get $dummy.

2013-04-08  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Rework tmp file names, make sure to remove tmp files.

	* mpn/arm/dive_1.asm: Rewrite count-trailing-zeros code, using private
	table.

	* mpn/arm: Canonicalise arm assembly to use old style "mov ... lsl" for
	shift ops.

2013-04-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/ultrasparct3/mod_34lsub1.asm: New file.

	* longlong.h (sparc64): Define umul_ppmm, add_ssaaaa, and
	count_leading_zeros conditionally under the symbol __sparc_vis3.

	* mpn/arm/dive_1.asm: New file.
	* mpn/arm/v6/dive_1.asm: New file.

	* mpn/arm/v6t2/mode1o.asm: Make trivial change to avoid v6t2...
	* mpn/arm/v6/mode1o.asm: ...instruction, move file accordingly.

	* mpn/powerpc64/mode64/invert_limb.asm: Put all multiplies low-limb first.

2013-04-04  David S. Miller  <davem@davemloft.net>

	* mpn/sparc64/ultrasparct3/add_n.asm: Rewrite.
	* mpn/sparc64/ultrasparct3/sub_n.asm: Rewrite.

	* mpn/sparc64/ultrasparct3/invert_limb.asm: Align table.

2013-04-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc32/sparc-defs.m4: Provide dummy lzcnt.

	* tests/mpn/logic.c: Seed using RANDS, then use mpz_rrandomb.

	* tests/mpn/t-div.c (random_word): Remove.  Let callers invoke urandom.

	* mpn/sparc64/ultrasparct3/mul_1.asm: Rewrite.

	* mpn/sparc64/ultrasparct3/bdiv_dbm1c.asm: New file.
	* mpn/sparc64/ultrasparct3/dive_1.asm: New file.
	* mpn/sparc64/ultrasparct3/invert_limb.asm: New file.
	* mpn/sparc64/ultrasparct3/mod_1_4.asm: New file.
	* mpn/sparc64/ultrasparct3/mode1o.asm: New file.

2013-04-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/ultrasparct3/aormul_2.asm: Reschedule for better speed.

2013-04-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/ultrasparct3/missing.m4: Misc tweaks.
	 (lzcnt): New.
	* mpn/sparc64/ultrasparct3/missing.asm (__gmpn_lzcnt): New function.

	* mpn/sparc32/sparc-defs.m4: Put FAKE_T3 stuff here...
	* mpn/sparc64/ultrasparct3/aormul_2.asm: ...moved from here.

	* mpn/sparc64/ultrasparc1234/lshift.asm: Remove.
	* mpn/sparc64/ultrasparc1234/rshift.asm: Remove.

2013-04-01  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/ultrasparct3/missing.m4 (umulxhi): Don't clobber retaddr,
	allowing use in functions that does not do save/restore.

	* mpn/sparc64/gcd_1.asm: Tweak for tighter loop.

2013-03-31  David S. Miller  <davem@davemloft.net>

	* mpn/sparc64/lshift.asm: New file.
	* mpn/sparc64/rshift.asm: New file.
	* mpn/sparc64/lshiftc.asm: New file.

2013-03-31  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/ultrasparct1/lshift.asm: Remove.
	* mpn/sparc64/ultrasparct1/rshift.asm: Remove.
	* mpn/sparc64/ultrasparct1/lshiftc.asm: Remove.

2013-03-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/ultrasparct3/aormul_2.asm: Always do mulx before umulxhi.

2013-03-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/mod_1_4.c (mpn_mod_1s_4p): Make precomputed arg 'const'.
	(mpn_mod_1s_4p_cps): Update from generic code.

2013-03-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/trialdiv.c: Make variables 'const' to match tables.

	* mpn/generic/mod_1_1.c (mpn_mod_1_1p): Make precomputed arg 'const'.
	* mpn/generic/mod_1_2.c (mpn_mod_1s_2p): Likewise.
	* mpn/generic/mod_1_3.c (mpn_mod_1s_3p): Likewise.
	* mpn/generic/mod_1_4.c (mpn_mod_1s_4p): Likewise.
	* gmp-impl.h: Update prototypes.

	* mpn/x86_64/mulx/aorsmul_1.asm: New file.
	* mpn/x86_64/mulx/addmul_1.asm: Remove.

2013-03-26  Niels Möller  <nisse@lysator.liu.se>

	Make mpn_cnd_add_n and mpn_cnd_sub_n public.
	* doc/gmp.texi (Low-level Functions): Document mpn_cnd_add_n and
	mpn_cnd_sub_n.
	* gmp-h.in (mpn_cnd_add_n, mpn_cnd_sub_n): Moved prototypes
	here...
	* gmp-impl.h: ... from here.

2013-03-26  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/pentium4/sse2/cnd_add_n.asm: New file.
	* mpn/x86/pentium4/sse2/cnd_sub_n.asm: New file.
	* mpn/x86/cnd_aors_n.asm: New file.

2013-03-25  David S. Miller  <davem@davemloft.net>

	* mpn/sparc64/ultrasparct3/hamdist.asm: New file.
	* mpn/sparc64/ultrasparct3/popcount.asm: New file.

2013-03-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/ia64/aorsorrlshC_n.asm: Generalised from aorslshC_n.asm.
	* mpn/ia64/aorsorrlsh1_n.asm: Generalised from aorslsh1_n.asm.
	* mpn/ia64/aorsorrlsh2_n.asm: Generalised from aorslsh2_n.asm.

2013-03-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v7a/cora15/neon/aorsorrlshC_n.asm: New file.
	* mpn/arm/v7a/cora15/neon/aorsorrlsh2_n.asm: New file.
	* mpn/arm/v7a/cora15/neon/aorsorrlsh1_n.asm: New file.
	* mpn/arm/v7a/cora15/neon/rsh1aors_n.asm: New file.

	* configure.ac (GMP_MULFUNC_CHOICES): Support add+sub+rsb lsh files.

	* tests/refmpn.c (refmpn_addlsh_nc, refmpn_sublsh_nc): Remove silly
	assert of mp_limb being non-negative.

2013-03-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/neon/lshiftc.asm: New file.

	* mpn/arm/v6/sqr_basecase.asm: Trim 'sqr_diag_addlsh1' loop.

	* gen-trialdivtab.c: Output just raw data, remove actual variables.
	* mpn/generic/trialdiv.c: Put variables from gen-trialdivtab.c here,
	and make them 'const'.

2013-03-20  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Rework arm CPU recognition.
	* config.sub: Corresponding updates.
	* configure.ac: Likewise.

	* mpn/x86_64/mulx/adx/addmul_1.asm: Let FAKE_MULXADX be off by default.

	* mpn/arm/v7a/cora15/neon/copyi.asm: Move from "..".
	* mpn/arm/v7a/cora15/neon/copyd.asm: Likewise.

	* config.guess: Tack on "neon" for appropriate arm CPUs.
	* configure.ac (arm*-*-*): Recognise neon suffix for a8, a9, and a15.

2013-03-19 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpf/fits_u.h: Accept numbers truncating to zero before checking the
	sign.
	* tests/mpf/t-fits.c: Check new edges.

2013-03-19  Torbjorn Granlund  <tege@gmplib.org>

	* tests/arm32check.c: Get printing of clobbered register right.

	* mpn/arm/neon/popcount.asm: New file.
	* mpn/arm/neon/hamdist.asm: New file.

	* tests/Makefile.am (EXTRA_libtests_la_SOURCES): Add arm32call.asm and
	arm32check.c.

2013-03-18  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac (arm*-*-*): Define CALLING_CONVENTIONS_OBJS.

	* tests/arm32call.asm: New file.
	* tests/arm32check.c: New file.

	* mpn/arm/arm-defs.m4 (LEA): Rewrite to properly handle repeated use.
	(EPILOGUE_cpu): Define.

	* mpn/arm/v6/addmul_3.asm: Make code work for PIC.

	* tests/x86call.asm: Modernise asm syntax.
	* tests/amd64call.asm: Likewise.

	* mpn/x86/darwin.m4 (m4append): Move definition from here...
	* mpn/asm-defs.m4: ...to here.

2013-03-18 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* doc/gmp.texi (--enable-fat): No quote in concept index.

	* mpf/swap.c: Reduce the number of variables.

2012-03-17  Marc Glisse  <marc.glisse@inria.fr>

	* tests/cxx/t-do-exceptions-work-at-all-with-this-compiler.cc: New file.
	* tests/cxx/Makefile.am: Add new file. Reorder the tests.

2013-03-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mul_fft.c: Use TMP_BALLOC*, but combine several areas.

	* mpz/powm_ui.c (mod): Use TMP_BALLOC in mu code.

	* mpn/arm/v6/addmul_3.asm: New file.

	* mpn/arm/v7a/cora15/copyd.asm: Tweak.

	* mpn/arm64/copyi.asm: New file.
	* mpn/arm64/copyd.asm: New file.

2013-03-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v6/addmul_2.asm: Tweak for better A9 performance.

2013-03-14  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/ia64/cnd_aors_n.asm: New file.

	* mpn/arm64/cnd_aors_n.asm: New file.

	* mpn/arm64/aors_n.asm (ADDSUB): Remove unused definition.

	* mpn/ia64/aors_n.asm: Remove a redundant ASM_START.

	* mpn/arm/cnd_aors_n.asm: Avoid ARM conditional insn execution.

	* mpn/x86_64/missing.asm: Move from mulx/adx since we cannot currently
	prune missing.asm from path.
	* mpn/x86_64/mulx/adx/missing-call.m4: Likewise.
	* mpn/x86_64/mulx/adx/missing-inline.m4: Likewise.
	* mpn/x86_64/mulx/adx/addmul_1.asm: Update hardwired path.

2013-03-13 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/cong_2exp.c: Write loops in a cleaner way.
	* mini-gmp/mini-gmp.c: Likewise.
	* gmp-impl.h (mpz_zero_p): Likewise.

2013-03-12  Niels Möller  <nisse@lysator.liu.se>

	New names mpn_cnd_add_n and mpn_cnd_sub_n.
	* mpn/generic/cnd_add_n.c (mpn_cnd_add_n): Renamed file and
	function, from addcnd.c:mpn_addcnd_n.
	* mpn/generic/cnd_sub_n.c (mpn_cnd_sub_n): Renamed, from
	subcnd.c:mpn_subcnd_n.
	* mpn/arm/cnd_aors_n.asm: Renamed file, from aorscnd.asm, and
	renamed functions.
	* mpn/x86_64/cnd_aors_n.asm: Analogous renaming.
	* mpn/powerpc64/mode64/cnd_aors_n.asm: Analogous renaming.
	* gmp-impl.h (mpn_cnd_add_n, mpn_cnd_add_n): Updated prototypes
	with new names.
	* configure.ac: Updated for new names.
	* tests/refmpn.c (refmpn_cnd_add_n): Renamed, from refmpn_addcnd_n.
	(refmpn_cnd_sub_n): Renamed, from refmpn_subcnd_n.
	* tests/tests.h (refmpn_cnd_add_n, refmpn_cnd_sub_n): Updated
	prototypes with new names.
	* tune/common.c (speed_mpn_cnd_add_n): Renamed, from
	speed_mpn_addcnd_n, call mpn_cnd_add_n.
	(speed_mpn_cnd_sub_n): Renamed, from speed_mpn_subcnd_n, call
	mpn_cnd_sub_n.
	* tune/speed.h (speed_mpn_cnd_add_n, speed_mpn_cnd_sub_n): Updated
	prototypes with new names.
	* tune/speed.c (routine): Updated list with new names.
	* tests/devel/try.c: Updated for new mpn_cnd_* names.
	* mpn/generic/sbpi1_div_sec.c: Likewise.
	* mpn/generic/powm_sec.c: Likewise.

2013-03-12  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac: Add "missing" to extra_functions_64 for coreibwl.

	* mpn/x86_64/mulx/adx/addmul_1.asm: Simplify.  Make FAKE_MULXADX the
	default awaiting proper qemu behaviour.

2013-03-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/aorscnd_n.asm: Read 32 bits for 'n' arguments on DOS64.

	* tests/mpz/t-powm_ui.c: Test larger arguments.  General cleanup.

	* mpz/powm_ui.c (mod): Adhere to mpn_mu_div_qr's overlap requirements.

2013-03-10  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/sbpi1_div_sec.c: Update calls of mpn_addcnd_n and
	mpn_subcnd_n.
	* mpn/generic/powm_sec.c (MPN_REDC_1_SEC, MPN_REDC_2_SEC)
	(mpn_powm_sec): Update calls of mpn_subcnd_n.

	* tests/tests.h (refmpn_addcnd_n, refmpn_subcnd_n): Update
	declarations.
	* tests/refmpn.c (refmpn_addcnd_n, refmpn_subcnd_n): Similar
	reorder of arguments.
	* tests/devel/try.c (call): Pass condition first, for
	TYPE_ADDCND_N and TYPE_SUBCND_N.

	* tune/common.c (speed_mpn_addcnd_n, speed_mpn_subcnd_n): Update
	to pass condition as first argument.

	* gmp-impl.h (mpn_addcnd_n, mpn_subcnd_n): Updated declarations.

	* mpn/generic/addcnd_n.c (mpn_addcnd_n): Reordered arguments, make
	condition the first argument.
	* mpn/generic/subcnd_n.c (mpn_subcnd_n): Likewise.
	* mpn/arm/aorscnd_n.asm: Likewise.
	* mpn/x86_64/aorscnd_n.asm: Likewise.
	* mpn/powerpc64/mode64/aorscnd_n.asm: Likewise.

2013-03-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/mulx/adx/missing.asm: Simulate some mulx/adx insns.
	* mpn/x86_64/mulx/adx/missing-call.m4: Call variant.
	* mpn/x86_64/mulx/adx/missing-inline.m4: Inline variant.

	* mpn/sparc64/ultrasparct3/missing.asm: Simulate some v9-2011 insns.
	* mpn/sparc64/ultrasparct3/missing.m4: Inline or invoke missing.asm for
	v9-2011 insn.

	* configure.ac: Strip `haswell' from paths for now.

	* mpn/x86_64/mulx/addmul_1.asm: New.
	* mpn/x86_64/mulx/mul_1.asm: Rewrite file from `haswell' subdir.
	* mpn/x86_64/mulx/adx/addmul_1.asm: Likewise.
	* mpn/x86_64/haswell: Remove.

	* mpn/arm/v7a/cora15/mul_1.asm: New file.
	* mpn/arm/v7a/cora15/addmul_1.asm: New file.

2013-03-09 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpz/t-cong_2exp.c: Improve coverage.

2013-03-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/ultrasparc1234/add_n.asm: Use g5 instead of g4.
	* mpn/sparc64/ultrasparc1234/sub_n.asm: Likewise.

	* mpn/sparc64/ultrasparct3/aormul_2.asm: Fix a typo.

2013-03-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v7a/cora9/gmp-mparam.h: New file.

	* configure.ac (GMP_MULFUNC_CHOICES): Support mul_2 + addmul_2.

	* mpn/sparc64/ultrasparct3/aormul_2.asm: New file.

	* mpn/sparc64/ultrasparct3/submul_1.asm: Optimise out two carry
	propagating adds.

2013-03-06  David Miller  <davem@davemloft.net>

	* config.guess: Recognize UltraSparc T4 under Linux.
	* configure.ac: Add sparc64/ultrasparct3 to path_64 when T3 or T4.
	Append -xarch=v8plusd or -xarch=v9d to command line, as needed.
	* mpn/sparc64/ultrasparct3/mul_1.asm: New file.
	* mpn/sparc64/ultrasparct3/addmul_1.asm: New file.
	* mpn/sparc64/ultrasparct3/submul_1.asm: New file.
	* mpn/sparc64/ultrasparct3/add_n.asm: New file.
	* mpn/sparc64/ultrasparct3/sub_n.asm: New file.

	* mpn/sparc32/ultrasparct1/mul_1.asm: Unroll main loop one time, add
	T2/T3/T4 timings.
	* mpn/sparc32/ultrasparct1/addmul_1.asm: Likewise.
	* mpn/sparc32/ultrasparct1/submul_1.asm: Likewise.

2013-03-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/neon/lorrshift.asm: New file.

2013-03-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v7a/cora15/copyd.asm: New file.
	* mpn/arm/v7a/cora15/copyi.asm: New file.

	* mpn/arm64/logops_n.asm: New file.
	* mpn/arm64/gcd_1.asm: New file.
	* mpn/arm64/aorsmul_1.asm: New file.
	* mpn/arm64/addmul_1.asm: Remove.
	* mpn/arm64/aors_n.asm: Complete rewrite.

	* mpn/arm/tabselect.asm: New file.
	* mpn/arm/neon/tabselect.asm: New file.

	* mpn/arm/copyi.asm: Software pipeline.
	* mpn/arm/copyd.asm: Likewise.

	* config.guess: Rework tmp file handling to resemble configfsf.guess's.

2013-03-03  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (Integer Special Functions): Document
	mpz_limbs_read, mpz_limbs_write, mpz_limbs_modify,
	mpz_limbs_finish, mpz_roinit_n and MPZ_ROINIT_N.

	* mpz/roinit_n.c (mpz_roinit_n): Normalize the input.

2013-02-27  Niels Möller  <nisse@lysator.liu.se>

	* tune/common.c (speed_measure): Increase repetition count if we
	get a zero measurement.

2013-02-27 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.c (mpz_div_q_2exp): Adjust only if needed.
	(mpn_common_scan): New service function to unify scan loops.
	(mpz_scan0, mpz_scan1): Simplify by using mpn_common_scan.
	(mpz_make_odd): Simplify, assume in-place operation on positive.
	(mpn_scan0, mpn_scan1): New functions.
	* mini-gmp/mini-gmp.h (mpn_scan0, mpn_scan1): New declarations.
	* mini-gmp/tests/t-scan.c: Test also mpn_scan0 and mpn_scan1.

2013-02-26  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpz/t-limbs.c (check_roinit): Test MPZ_ROINIT_N only if
	compiler supports c99.

2013-02-25  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp/tests/t-double.c (testmain): Declare double variables
	as volatile, to drop extended precision.

	* mini-gmp/tests/testutils.c (testfree): New function. Use it
	everywhere where test programs deallocate storage allocated via
	the mini-gmp allocation functions, including uses of mpz_get_str
	for various test failure messages.

	* mpz/limbs_finish.c (mpz_limbs_finish): New file and function.
	* mpz/limbs_modify.c (mpz_limbs_modify): New file and function.
	* mpz/limbs_read.c (mpz_limbs_read): New file and function.
	* mpz/limbs_write.c (mpz_limbs_write): New file and function.
	* mpz/roinit_n.c (mpz_roinit_n): New file and function.
	* gmp-h.in: Declare new functions.
	(MPZ_ROINIT_N): New macro.
	* mpz/Makefile.am (libmpz_la_SOURCES): Added new files.
	* Makefile.am (MPZ_OBJECTS): Added new object files.

	* tests/mpz/t-limbs.c: New testcase.
	* tests/mpz/Makefile.am (check_PROGRAMS): Added t-limbs.

2013-02-22  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac: Fix typo in adx/mulx path stripping code.
	* config.sub: Match coreibwl.

2013-02-20  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpq/t-get_d.c (check_random): Rewrote to make test less
	dependent on float operations. Fixes problem with m68k-linux and
	extended float precision.

2013-02-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/haswell/mulx/adx/addmul_1.asm: New file.

	* configure.ac: Support coreibwl.  Use proper name for ADX extension.
	* acinclude.m4 (GMP_ASM_X86_ADX): Rename from GMP_ASM_X86_ADOX.

	* tests/tests.h (TESTS_REPS): Keep count >= 1.

2013-02-19 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.c: Move asserts to work-around a compiler bug.
	(mpz_export): Reorder branches.
	(mpz_mul_ui): Avoid temporary allocation (mpn_mul_1 can work in-place).

	* mini-gmp/tests/t-reuse.c: Fix typo causing the same negation
	condition to be applied to all operands. (See 2013-02-03, Torbjorn)

2013-02-17 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmpxx.h (mpq_class, mpf_class) [init_ui, init_si, assign_si]:
	Optimise _si using _ui for positive arguments.
	(__gmp_hypot_function): Use _mul_ui to square an ui, abs for si.

	* mini-gmp/mini-gmp.c (mpz_mul): Read sizes just once.
	(mpn_set_str_other): Remove a redundant variable.
	(mpz_abs_add): Use SWAP once, to order sizes.
	(mpz_mul_ui): Micro-optimisation.
	(mpz_rootrem): Use _init2 before _setbit.
	(mpz_set_str): Optimise-out a variable.
	(mpz_import): Normalise only if needed.
	(mpn_div_qr_1): Speed-up the d=1 case, delaying a branch.

	* rand/randmts.c: Use init2, as size of variables is known in advance.
	(mangle_seed): Get a single argument.

	* mpz/remove.c: Delay allocation in the generic case; use swap
	instead of set.
	* mpn/generic/remove.c: Delay (possibly smaller) allocation.

2013-02-17  Marc Glisse  <marc.glisse@inria.fr>

	* cxx/osdoprnti.cc: Use <stdarg.h> and <string.h> rather than <cstdarg>
	and <cstring> (revert 2002-12-21).

	* tests/cxx/Makefile.am: Link with libm.
	* tests/cxx/t-ops2.cc: Comment about more tests. Use <math.h> rather
	than <cmath> and using namespace. Don't include <iostream>.

	* gmpxx.h (__GMPXX_BITS_TO_LIMBS, __GMPQ_NUM_DBL_LIMBS,
	__GMPQ_DEN_DBL_LIMBS, __GMPXX_TMPQ_D): New macros.
	(__gmp_binary_plus, __gmp_binary_minus, __gmp_binary_multiplies,
	__gmp_binary_divides, __gmp_binary_equal, __gmp_binary_less,
	__gmp_cmp_function): Use __GMPXX_TMPQ_D.
	* tests/cxx/t-ops2.cc: Test __GMPXX_TMPQ_D on DBL_MIN, DBL_MAX.

	* gmpxx.h (__gmp_binary_multiplies, __gmp_binary_divides): Use
	__GMPXX_CONSTANT_TRUE.

2013-02-16  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h: Include <algorithm>.

2013-02-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/Makefile.am (TARG_DIST): Add arm64.

	* mpn/x86_64/x86_64-defs.m4 (PROTECT): Emit '.hidden' instead of
	'.protected" to please Sun's assembler, but also for semantic reasons.

2013-02-15  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac (arm64*-*-*): Match this.

	* mpn/arm64/aors_n.asm: New file.
	* mpn/arm64/addmul_1.asm: New file.
	* mpn/arm64/mul_1.asm: New file.

2013-02-15  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__GMPXX_DEFINE_ARITHMETIC_CONSTRUCTORS,
	__GMPXX_DEFINE_ARITHMETIC_ASSIGNMENTS): New macros.
	(mpz_class, mpq_class, mpf_class) [init_ui, init_si, init_d,
	assign_ui, assign_si, assign_d]: New functions.
	(__gmp_expr::__gmp_expr, __gmp_expr::operator=): Replace with macros.
	(__GMPXX_CONSTANT_TRUE): New macro.

2013-02-15 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (NEG_CAST, ABS_CAST): Use __GMP_CAST.
	* mpz/fits_s.h: Use NEG_CAST.

2013-02-14  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__gmp_binary_greater): Forward to __gmp_binary_less.
	(__gmp_binary_equal): Forward to itself after swapping operands.

2013-02-14 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mp_dv_tab.c (__gmp_digit_value_tab): Remove a line of unused values.
	* mpf/set_str.c: Update offset accordingly.
	* mpz/inp_str.c: Likewise.
	* mpz/set_str.c: Likewise.

	* gmp-h.in (mpq_cmp_ui): Optimise comparison with 1/1.
	* tests/mpq/t-cmp_ui.c: Test special comparisons: 0/1, 1/1.

	* mpz/clrbit.c: Reorganise branches.
	* mpz/setbit.c: Likewise.
	* mpz/combit.c: Same micro-optimisations as in set/clr.

	* mpz/aors_ui.h: No realloc if size was zero.
	* mpz/ior.c: Use macros: MPZ_REALLOC and MPN_INCR_U.

	* gmp-impl.h (NEG_CAST): New macro, used by ABS_CAST.
	* mpq/cmp_si.c: Use NEG_CAST.
	* mpz/cmp_si.c: Reorganise branches.

2013-02-13  Torbjorn Granlund  <tege@gmplib.org>

	* acinclude.m4 (GMP_ASM_X86_MULX, GMP_ASM_X86_ADOX): New feature tests.
	* configure.ac: Use new feature tests.

	* mpn/x86_64/haswell/mulx/mul_1.asm: File moved to cope with older
	assemblers.
	* configure.ac: Update haswell path to include "mulx".

2013-02-12  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac: Recognise haswell.
	* config.guess: Recognise haswell.
	* config.sub: Match haswell.

	* mpn/x86_64/haswell/mul_1.asm: New file, mainly for testing HNI.

2013-02-12 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (MPZ_PROVOKE_REALLOC): Remove unused macro.
	* gen-fac.c (gen_consts): Remove obsolete code, use swap instead of set.
	* mini-gmp/mini-gmp.c (fac_ui, bin_uiui): Use shorter and faster code.

	* mpn/generic/mulmod_bnm1.c: Reorganise branches.
	* mini-gmp/mini-gmp.c: Reduce branches.

	* mpz/bin_ui.c: Avoid a copy when n < 0.
	* mpz/mfac_uiui.c: Reduce memory usage.
	* mpz/primorial_ui.c: Use MPZ_NEWALLOC.

	* mpz/import.c: Use BITS_TO_LIMBS and MPZ_NEWALLOC.
	* mpz/inp_raw.c: Likewise.
	* mpz/rrandomb.c: Likewise.
	* mpz/urandomb.c: Likewise.
	* mpn/generic/random2.c: Likewise.

	* mpn/generic/brootinv.c: Micro-optimisation.

	* mpf/set_str.c: Don't chech base==0 when base is strictly positive.

2013-02-10  Torbjorn Granlund  <tege@gmplib.org>

	* Version 5.1.1 released.

2013-02-07 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tune/speed.h (SPEED_ROUTINE_MPN_MUL): Use operands from struct s.
	* tune/README: Document new parameter syntax mpn_mul.<#> .

2013-02-06  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpz/t-jac.c (check_large_quotients): Rewrote. Now uses a
	more efficient method for generating the test inputs.

2013-02-05  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpn/t-div.c: Limit random dbits to avoid an infinite loop.

2013-02-03  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/reuse.c: Fix typo causing the same negation condition to be
	applied to all operands.  Fix condition for when to invoke mpz_remove.
	Make different-size random operands.

2013-02-02 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/remove.c: Correct the sign in case of reuse.

2013-02-01  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (DIGITS_IN_BASE_PER_LIMB): Add a cast.
	(LIMBS_PER_DIGIT_IN_BASE): Likewise.

	* tests/refmpn.c (refmpn_mul): Use toom6h instead of toom44 for the
	largest operands.

2013-01-31  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom44_mul.c: Revert last change in favour of a simple
	change (thanks Marco!).
	* mpn/generic/toom4_sqr.c: Likewise.

2013-01-30  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom44_mul.c (MAYBE_mul_toom44): Take toom6h and toom8h
	into account, using new macro MUL_NEXTALG_THRESHOLD.
	* mpn/generic/toom4_sqr.c (MAYBE_sqr_toom4): Likewise.

2013-01-26 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/remove.c: init+set=init_set, cast before shifting.

	* mpz/cmp_si.c: Use ABS_CAST.

2013-01-26  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpn/logic.c: Set things up to always test library logops, not
	gmp-impl.h's inlined variants.  Test also mpn_com.

	* tests/mpn/t-mod_1.c: Test also mpn_mod_1s_3p.

	* mpn/generic/mod_1_3.c: Swap some lines to make it similar to mod_4.c.

	* tests/mpz/reuse.c: Fix typo in last change.

2013-01-23 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.c (mpz_cmpabs_d, mpz_cmp_d): Simplify.
	(mpz_set_str): Behaviour more adherent to the real GMP.

	* mini-gmp/tests/t-str.c: Cast size_t to unsigned long, for printf.
	* mini-gmp/tests/t-import.c: Likewise.
	* mini-gmp/tests/t-comb.c: Remove an unused var.
	* mini-gmp/tests/t-div.c: Remove unused args passed to fprintf.
	* mini-gmp/tests/t-double.c: Use float immediates with float vars.

2013-01-22  Torbjorn Granlund  <tege@gmplib.org>

	* Makefile.am (LIBGMP_LT_*, LIBGMPXX_LT_*): Bump version info.
	* gmp-h.in: Bump version.

	* tests/mpz/reuse.c: Delete always zero 'failures' and code depending
	on it.  Replace rotating progress with real measure.

	* Makefile.am (check-mini-gmp): Fix typo in last change.

2013-01-22  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp/mini-gmp.c (mpz_cmp_d): Simplified, just sort out
	signs, then call mpz_cmpabs_d.

	* mini-gmp/tests/testutils.h: Include stdio.h and stdlib.h.
	(numberof): New define.

	* mini-gmp/tests/t-cmp_d.c: New file, copied from
	tests/mpz/t-cmp_d.c with minor changes.
	* mini-gmp/tests/Makefile (CHECK_PROGRAMS): Added t-cmp_d,

	* mini-gmp/mini-gmp.c (mpz_cmpabs_d): New function.
	* mini-gmp/mini-gmp.h: Declare it.

2013-01-21  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp/tests/t-str.c (testmain): Test mpz_out_str, using
	the tmpfile function for i/o.

2013-01-20  Torbjorn Granlund  <tege@gmplib.org>

	* Makefile.am (check-mini-gmp): Set also DYLD_LIBRARY_PATH for the
	benefit of Darwin.

	* tests/mpn/t-div.c: Test mpn_sb_div_qr_sec and mpn_sb_div_r_sec.
	(main): Separate divisor into normalised (dnp) and unnormalised (dup),
	pass appropriate variant to each function.
	(main): Make negative `test' index value mean divisor bits, for better
	small operands coverage.
	(main): Put random junk at qp[] instead of zeroing.

	* tests/mpz/t-remove.c: Back out last change which left `divisor_size'
	uninitialised; achieve change's aim with a parameter tweak.

2013-01-20 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/tests/testutils.c (testhalves): New function, test default
	memory functions.
	* mini-gmp/tests/testutils.h (testhalves): Declare it
	* mini-gmp/tests/t-logops.c: Use testhalves.

	* mini-gmp/mini-gmp.c (mpz_init_set_str): New function.
	* mini-gmp/mini-gmp.h (mpz_init_set_str): Declare it.
	* mini-gmp/tests/t-str.c: Test mpz_init_set_str.

2013-01-20  Torbjorn Granlund  <tege@gmplib.org>

	* tests/memory.c (PTRLIMB): New macro, used for conformant casting.

2013-01-19 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/tests/t-double.c (testmain): Get the current free
	function using mp_get_memory_functions.
	* mini-gmp/tests/t-str.c (testmain): Likewise.

	* mini-gmp/tests/testutils.h (tu_free): Remove declaration.

	* mini-gmp/tests/testutils.c (block_check, tu_free): Mark static.

	* tests/mpz/t-set_str.c: Check also failing conditions.

	* tests/mpz/t-remove.c: Test removal of 1.

2013-01-18  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp/tests/t-str.c (test_small): New function, exercising
	parsing of whitespace and base prefixes.
	(testmain): Call it.

	* mini-gmp/tests/t-gcd.c (gcdext_valid_p): Fixed memory leak.

	* mini-gmp/tests/t-double.c (testmain): Call tu_free rather than
	free, for storage allocated by mpz_get_str.
	* mini-gmp/tests/t-str.c (testmain): Likewise.

	* mini-gmp/tests/testutils.c (block_init, block_check): New
	functions.
	(tu_alloc, tu_realloc, tu_free): New functions.
	(main): Use mp_set_memory_functions.
	* mini-gmp/tests/testutils.h (tu_free): Declare.

	* mini-gmp/tests/testutils.h: New file, declarations for test
	programs.

	* mini-gmp/tests/testutils.c (main): New file, with shared main
	function for all the test programs. Also includes mini-gmp.c.
	Calls testmain after initialization. All other test programs
	updated to define testmain rather than main.

2013-01-18 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/tests/t-signed.c: Slightly larger coverage.
	* mini-gmp/tests/t-double.c: Test also mpz_init_set_d.

2013-01-18  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/set_str.c (normalization_steps): Eliminate set-but-unused
	variable.

	* mini-gmp/tests/t-div.c: Test mpz_divisible_p and mpz_divisible_ui_p.

	* tests/tests.h (TESTS_REPS): Fix printf argument type clashes.

	* mini-gmp/tests/t-div.c: Test also mpz_mod, mpz_mod_ui.  Compare
	mpz_divisible_p just to ceil, to save time.

	* mini-gmp/mini-gmp.c: Prefix some names with GMP_.

2013-01-16 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/tests/t-double.c: Test mpz_cmp_d.
	* mini-gmp/mini-gmp.c (mpz_cmp_d): Correct multiword comparison.

	* mini-gmp/mini-gmp.c (mpz_set_str): Handle the empty string.
	* mini-gmp/tests/t-str.c: Test base <= 0.

2013-01-15  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp/tests/t-str.c (main): Use x->_mp_d rather than x[0]._mp_d.
	* mini-gmp/tests/t-invert.c (main): Likewise.

	* mini-gmp/tests/t-mul.c (main): Test mpn_mul_n and mpn_sqr.

	* mini-gmp/tests/hex-random.h (enum hex_random_op): New value
	OP_SQR.

	* mini-gmp/tests/mini-random.c (mini_random_op3): Renamed, from...
	(mini_random_op): ... old name. Updated callers.
	(mini_random_op2): New function.

	* mini-gmp/tests/hex-random.c (hex_random_op3): Renamed, from...
	(hex_random_op): ... old name. Updated callers.
	(hex_random_op2): New function.

2013-01-15 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/tests/t-logops.c: Improve popcount/hamdist testing.
	* mini-gmp/tests/t-signed.c: Test more cases.

2013-01-15  Torbjorn Granlund  <tege@gmplib.org>

	From Mike Frysinger:
	* configure.ac: Add x32 ABI for x86_64.

2013-01-14  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp/tests/t-str.c (main): Added tests for mpn_get_str and
	mpn_set_str.

2013-01-14 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* doc/gmp.texi (gmp_version): Remove "was used" repetition.
	(Upward compatibility): Mention mpn_bdivmod, GMP 4 -> GMP 5.

2013-01-13  Marc Glisse  <marc.glisse@inria.fr>

	* doc/gmp.texi: Let mpn_sqrtrem reference mpn_perfect_square_p instead
	of mpz_perfect_square_p.

2013-01-11 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/tests/t-comb.c: New test program, testing both
	mpz_fac_ui and mpz_bin_uiui.
	* mini-gmp/tests/Makefile (CHECK_PROGRAMS): Added t-comb.

	* mini-gmp/mini-gmp.c (mpz_mul_si): Simplify.
	(mpz_mul_ui, mpz_mul, mpz_div_qr): Replace init+REALLOC with init2.

	* mini-gmp/mini-gmp.c (NEG_CAST): New macro.
	(mpz_mul_si, mpz_set_si, mpz_cmp_si): Use NEG_CAST.

	* mini-gmp/mini-gmp.c (mpz_set_si, mpz_cmp_si): Simplify by using
	the _ui variant.

	* mini-gmp/tests/t-root.c: Use mpz_ui_pow_ui, when base fits an ui.

	* mini-gmp/tests/t-mul.c: Test also mpz_mul_si.
	* mini-gmp/tests/t-sub.c: Test also mpz_ui_sub.

	* mini-gmp/mini-gmp.c (mpz_fits_slong_p): Correct range.
	* mini-gmp/tests/t-signed.c: New test program, for get/set/cmp_si.
	* mini-gmp/tests/Makefile (CHECK_PROGRAMS): Added t-signed.

	* mini-gmp/mini-gmp.c (mpz_hamdist): Handle different sizes.
	* mini-gmp/tests/t-logops.c: Test also popcount and hamdist.

2013-01-10 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/export.c: Less restrictive ASSERTs.
	* mini-gmp/mini-gmp.c (mpz_export, mpz_import): Likewise.
	* mini-gmp/tests/t-import.c: Test also size=0 or count=0.

2013-01-10  Torbjorn Granlund  <tege@gmplib.org>

	* mini-gmp/tests/t-import.c (main): Don't drop off function end.

	* Makefile.am (check-mini-gmp): Set LD_LIBRARY_PATH to allow testing
	with dynamic main GMP build.

2013-01-09 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.c (mpz_export): Support op=0 countp=NULL.

2013-01-08  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp/tests/t-import.c: New test program, testing both
	mpz_import and mpz_export.
	* mini-gmp/tests/Makefile (CHECK_PROGRAMS): Added t-import.

	* mini-gmp/tests/mini-random.c (mini_rrandomb_export): New
	function.
	* mini-gmp/tests/mini-random.h: Declare it.
	* mini-gmp/tests/hex-random.c (hex_rrandomb_export): New function.
	* mini-gmp/tests/hex-random.h: Declare it.

	* mini-gmp/mini-gmp.c (mpz_export): Compute accurate word count up
	front, to avoid generating any high zero words.

2013-01-07 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/README: Document base limitation for conversions.
	* mini-gmp/mini-gmp.c (mpz_set_str): Remove goto.
	(mpz_import, mpz_export): Correctly use order/endianness.

2013-01-05  Torbjorn Granlund  <tege@gmplib.org>

	* longlong.h (aarch64): Make add_ssaaaa and sub_ddmmss actually work.

2013-01-04 Marco Bodrato <bodrato@mail.dm.unipi.it>

	From shuax:
	* mini-gmp/mini-gmp.c (mpz_import): Reset limb after storing it.

2013-01-04  Torbjorn Granlund  <tege@gmplib.org>

	From Marko Lindqvist:
	* configure.ac: Use AC_CONFIG_HEADERS instead of the obsolete
	AM_CONFIG_HEADER.

2013-01-02 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpz/bit.c: Wider testing for mpz_combit.
	* tests/mpz/logic.c: Check the -2^n case.

	* mpz/ior.c: Fixed an allocation bug in the -2^n case.

2012-12-31  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/get_d.c: Minor reorg, add vax D code.

	* gmp-impl.h (double_extract): New union type for vax D floats.

	* tests/mpq/t-get_d.c (check_random): Limit exponents on vax.

2012-12-30 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpz/bit.c (check_clr_extend): Check _set shrink.

2012-12-29  Torbjorn Granlund  <tege@gmplib.org>

	* demos/calc/calc.c: Remove generated file from repo.
	* demos/calc/calc.h: Likewise.
	* demos/calc/calclex.c: Likewise.

2012-12-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/get_d.c: Complete rewrite of non-IEEE code.

	* tests/mpq/t-get_d.c (main): Suppress check_random for vax.

2012-12-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bdiv_q_1.asm: Use LEA for binvert_limb_table.

2012-12-23  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-get_d.c (check_onebit): Decrease vax limit to avoid
	overflow in last, unused 'want' value.

	* config.guess: Recognise AMD family 22 as a future bobcat.

2012-12-21  Torbjorn Granlund  <tege@gmplib.org>

	* configure.ac: Rename configure.in.

2012-12-17  Torbjorn Granlund  <tege@gmplib.org>

	* Version 5.1.0 released.

	* configure.in (none-*-*): Allow this again, but print a warning.

2012-12-17 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/n_pow_ui.c: Fix typos in an ASSERT.

2012-12-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mu_div_qr.c (mpn_preinv_mu_div_qr): Explicitly use
	MPN_COPY_INCR for slightly overlapping copy.

2012-12-15 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpn/toom-sqr-shared.h: Skip ALLOCs if the test is skipped.

2012-12-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/dos64.m4 (PIC): Move definition early.
	(JMPENT): Remove PIC variant.

	* mpn/x86_64/darwin.m4 (JUMPTABSECT): Define to .text, instead of
	something sensible.

2012-12-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/x86_64-defs.m4 (JMPENT): New macro.
	* mpn/x86_64/dos64.m4: Likewise.
	* mpn/x86_64/darwin.m4: Likewise.
	* mpn/x86_64/mod_34lsub1.asm: Use JMPENT to properly support PIC.
	* mpn/x86_64/mullo_basecase.asm: Likewise.
	* mpn/x86_64/sqr_basecase.asm: Likewise.

2012-12-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/mod_34lsub1.asm: Try different jump table for the benefit
	of broken Apple linkers.

2012-12-09  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Make GMP_NONSTD_ABI ABI specific.

2012-12-08  Torbjorn Granlund  <tege@gmplib.org>

	* Makefile.am (LIBGMP_LT_*, LIBGMPXX_LT_*): Bump version info.
	* gmp-h.in: Bump version.

2012-12-06 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpq/reuse.c: New test (adapted from mpf/reuse.c).
	* tests/mpq/Makefile.am (check_PROGRAMS): Add reuse.

	* mpz/abs.c: Use NEWALLOC.
	* mpz/neg.c: Likewise.
	* mpz/com.c: Reduce branches.

2012-12-05  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/brootinv.c (mpn_brootinv): Make valgrind happier, at
	the cost of a redundant MPN_ZERO.

	* mpz/jacobi.c (mpz_jacobi): Check for asize == 0 or bsize == 0
	before using the low limbs.

2012-12-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/set_str.c (mpn_dc_set_str): Work around a valgrind issue.

	* mpz/powm_ui.c: Don't assume >= 2 limbs in mod argument.

	* tests/tests.h (TESTS_REPS): Handle float GMP_CHECK_REPFACTOR.

	* longlong.h: Refine cpp test for vax.
	* tests/mpn/t-get_d.c: Likewise.
	* tests/mpz/t-get_d.c: Likewise.
	* tests/mpz/t-cmp_d.c: Likewise.
	* tests/mpz/t-get_d.c: Likewise.
	* tests/mpq/t-get_d.c: Likewise.
	* tests/mpf/t-get_d.c: Likewise.

2012-11-30  Torbjorn Granlund  <tege@gmplib.org>

	* gen-fac.c (gen_consts): Correct printf types.

	* mpn/arm/v7a/cora15/gmp-mparam.h: New file.

	* configure.in (arm*-*-*): New compiler optional "tune".  Pass value for
	selected processors.  Add more specific path components.

2012-11-29  Torbjorn Granlund  <tege@gmplib.org>

	From Andoni Morales Alastruey:
	* longlong.h: Conditionalise ARM asm on !__thumb__.

2012-11-28  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess (arm*-*-*): Support specific ARM processors.
	* config.sub: Match arm CPUs.
	* configure.in (arm*-*-*): Likewise.

	* mpz/powm.c: Move new_b out since it lives on through b.

	* configure.in (arm*-*-*): Pass -marm to deal with compilers defaulting
	to thumb code.

2012-11-26  Torbjorn Granlund  <tege@gmplib.org>

	* tests/cxx/t-ops2.cc (checkz): Reduce huge numbers to avoid vax
	overflow.

2012-11-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/get_d.c: Reinsert non-IEEE code.

	* mpn/vax/add_n.asm: New file.
	* mpn/vax/add_n.s: Remove.
	* mpn/vax/addmul_1.asm: New file.
	* mpn/vax/addmul_1.s: Remove.
	* mpn/vax/lshift.asm: New file.
	* mpn/vax/lshift.s: Remove.
	* mpn/vax/mul_1.asm: New file.
	* mpn/vax/mul_1.s: Remove.
	* mpn/vax/rshift.asm: New file.
	* mpn/vax/rshift.s: Remove.
	* mpn/vax/sub_n.asm: New file.
	* mpn/vax/sub_n.s: Remove.
	* mpn/vax/submul_1.asm: New file.
	* mpn/vax/submul_1.s: Remove.

	* mpn/vax/elf.m4: New file.
	* configure.in (vax*-*-*elf*): New case, grabbing vax/elf.m4.

	* tests/mpn/t-get_d.c (check_onebit): Get vax bounds right.
	(main): Switch off check_rand for vax.

2012-11-22  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp/tests/run-tests: Copied latest version from GNU Nettle.
	Minor fix to the use of $EMULATOR, and proper copyright notice.

2012-11-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/powm_sec.c (redcify): Use mpn_sb_div_r_sec.

	* mpn/generic/sb_div_sec.c: New file.
	* mpn/generic/sbpi1_div_sec.c: New file.
	* configure.in (gmp_mpn_functions): Add new files.
	* gmp-impl.h: Declare new functions.

2012-11-12  Torbjorn Granlund  <tege@gmplib.org>

	* longlong.h: Add ARM64 support.
	* longlong.h: Add AVR support.

	* mpn/powerpc64/mode64/divrem_1.asm: Tune, simplify.

	* mpq/md_2exp.c: Use MPN_COPY_INCR, not MPN_COPY_DECR.
	* tests/mpq/t-md_2exp.c (check_random): New function.

2012-11-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/remove.c (mpn_bdiv_qr_wrap): Make static.

2012-11-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/powm_ui.c: Rewrite.

2012-11-01  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/brootinv.c (mpn_brootinv): Input size in limbs
	rather than bits. Use single-precision iterations for the first
	limb.
	* mpn/generic/perfpow.c (is_kth_power): Update mpn_brootinv call.
	* tests/mpn/t-brootinv.c (main): Likewise.
	* tune/speed.h (SPEED_ROUTINE_MPN_BROOTINV): Likewise.
	* gmp-impl.h (mpn_brootinv): Updated prototype.

	* mpn/generic/hgcd2.c (mpn_hgcd2): Removed redundant loop exit
	tests in the single-precision loop.

	* mpz/combit.c (mpz_combit): Rewrite, optimizing for the common
	case.

2012-10-31  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-brootinv.
	* tests/mpn/t-brootinv.c: New file

	* mpn/generic/broot.c (mpn_broot_invm1): Avoid a mullo_n in the
	loop, and do powering as a plain mpn_sqr followed by mpn_powlo.

	* tune/speed.c (routine): Added mpn_broot, mpn_broot_invm1,
	mpn_brootinv.

	* tune/common.c (speed_mpn_broot, speed_mpn_broot_invm1)
	(speed_mpn_brootinv): New functions.
	* tune/speed.h (SPEED_ROUTINE_MPN_BROOT)
	(SPEED_ROUTINE_MPN_BROOTINV): New macros.

	* mpn/generic/broot.c (mpn_broot_invm1): Made non-static (mainly
	for benchmarking).
	* gmp-impl.h (mpn_broot_invm1): Declare it.

2012-10-28  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (gmp_mpn_functions): Add new files.
	* gmp-impl.h: Declare new functions.
	* mpn/generic/perfpow.c: Overhaul.
	(binv_root, binv_sqroot): Remove.
	* mpn/generic/brootinv.c: New file, code from overhauled binv_root.
	* mpn/generic/bsqrtinv.c: New file, code from overhauled binv_sqroot.
	* mpn/generic/bsqrt.c: New file.

	* tests/mpn/t-broot.c: Add a forgotten TMP_MARK.

2012-10-28  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/broot.c (mpn_broot): New file and function.
	* configure.in (gmp_mpn_functions): Add broot.
	* gmp-impl.h (mpn_broot): Declare.
	* tests/mpn/t-broot.c: New testcase.
	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-broot.

2012-10-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/remove.c: Get remainder allocation right.

2012-10-25  Torbjorn Granlund  <tege@gmplib.org>

	* longlong.h: De-support old POWER asm syntax.

	* tests/mpz/t-remove.c: Run more tests, but use a tad smaller operands.

	* mpn/generic/remove.c (mpn_bdiv_qr_wrap): New function.
	(mpn_remove): Call mpn_bdiv_qr_wrap.
	* mpz/remove.c: Enable suppressed mpn_remove call.

2012-10-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/powm_ui.c (mpz_powm_ui): Deflect to mpz_powm for large exponent.

2012-09-10  Torbjorn Granlund  <tege@gmplib.org>

	* demos/factorize.c: Rewrite no more current form.  Implement Lucas
	prime proving, and make its use the default.
	* demos/primes.h: New file.

2012-08-24  Torbjorn Granlund  <tege@gmplib.org>

	* demos/factorize.c: Overhaul.

2012-08-06 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* doc/gmp.texi (mpn_neg): Correctly document returned type.

	* gmp-impl.h (_mpz_newalloc, log_n_max): mark with inline (spotted by Niels).

2012-07-28  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (std::common_type): New partial specializations with builtin
	types.
	* tests/cxx/t-cxx11.cc: Test it.

2012-07-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc32/vmx/mod_34lsub1.asm: Fix r0 clobbering issue with
	"large" code affecting elf+darwin PIC.

2012-07-21  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__GMPXX_CONSTANT): Disable for g++-3.4.

2012-06-26  Torbjorn Granlund  <tege@gmplib.org>

	* Makefile.am (LIBMP_LT_*): Remove these.

2012-06-26  Marc Glisse  <marc.glisse@inria.fr>

	* Makefile.am (LIBGMP_LT_*, LIBGMPXX_LT_*): Update comment for 5.1.0.

2012-06-24 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* configure.in (CALLING_CONVENTIONS_OBJS): Disable any use of
	assembly code with the --disable-assembly option.
	* mpz/oddfac_1.c: Use the ASSERT_CODE macro.
	* gen-trialdivtab.c (mpz_log2): Use mpz_sizeinbase (., 2).

	* gmp-impl.h (MPN_SIZEINBASE_16): Replace with MPN_SIZEINBASE_2EXP
	from mpz/export.c .
	* mpz/export.c (MPN_SIZEINBASE_2EXP): Removed.
	* mpn/generic/sizeinbase.c: Use MPN_SIZEINBASE.

	* mpz/nextprime.c: Use MPN_SIZEINBASE_2EXP to count bits.
	* mpn/generic/perfpow.c: Likewise.
	* mpn/generic/rootrem.c: Likewise.
	* mpz/get_d_2exp.c: Likewise.
	* mpn/generic/powm_sec.c: Likewise, nailify.
	* mpn/generic/powlo.c: Likewise.
	* mpn/generic/powm.c: Likewise.

	* mini-gmp/mini-gmp.c (mpz_div_r_2exp, mpz_div_q_2exp): Improve
	adjustment condition.

2012-06-23  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (numeric_limits): Make content public.
	* cxx/limits.cc: New file, proper declarations.
	* Makefile.am: List new file.
	* cxx/Makefile.am: Likewise.
	* cxx/t-misc.cc: Add minimal test for numeric_limits.

2012-06-09  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__gmp_resolve_expr::srcptr_type): New typedef.
	(__gmp_temp): Wrapper for mp*_class, the constructor copies the
	precision of its second argument for mpf_t.
	(__gmp_expr::eval(p, prec)): Remove.
	(__gmp_expr::eval(p)): Use __gmp_temp.
	(__gmp_set_expr): Never pass prec to eval().

2012-06-08 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (__GMP_WITHIN_CONFIGURE): Use the same #if as in gmp-h.in.
	(MPN_NORMALIZE_NOT_ZERO): Tighter ASSERT.
	(MPZ_NEWALLOC): New macro.
	* mpq: Use the new macro when possible.
	* mpz/bin_uiui.c: Likewise.
	* mpz/oddfac_1.c: Likewise.
	* mpz/prodlimbs.c: Likewise.

	* mini-gmp/mini-gmp.c (mpz_realloc): remove a branch.

2012-06-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/aix.m4 (ASM_START): Claim machine type "any".

2012-06-03  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcdext.c (mpn_gcdext): Deleted code for handling
	impossible case u1 == 0, Simplified test for unlikely case u0 == 0.

2012-06-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/lshiftc.asm: New file.

2012-06-01  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/aorslsh1_n.asm: Use cmp/cmn instead of subs/adds in more
	places.

	* mpz/get_str.c: Don't strip leading zeros since current mpn_get_str
	won't generate any.  Misc streamlining.
	* mpz/out_str.c: Analogous changes.

	* tests/mpz/io.c: Use a wider range of bases.

	* tests/mpz/t-cong.c (check_random): Rewrite random generation for
	exponentially distributed operand sizes.

2012-06-01 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpq: Use more macros and MPZ_REALLOC return value when possible.

	* gmp-impl.h (LIMBS): Removed, was an alias for PTR.
	* mpz/combit.c: Use PTR and CNST_LIMB.

	* tests/mpn/t-bdiv.c: Test also mpn_bdiv_qr.
	* mpn/generic/bdiv_qr.c: Add an ASSERT.

	* mpn/generic/remove.c: Add a zero limb to use bdiv_qr...

2012-05-31  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (mpq_class::mpq_class): Handle mpq_class(0,1).
	* tests/cxx/t-constr.cc: Test it.

2012-05-30  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64 (FUNC_ENTRY): New name for DOS64_ENTRY.
	* mpn/x86_64 (FUNC_EXIT): New name for DOS64_EXIT.

2012-05-29 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/remove.c: Optimise branches.

	* mpn/generic/toom6h_mul.c: less branches in the LIKELY balanced path.
	* mpn/generic/toom8h_mul.c: Likewise.

2012-05-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v5/mod_1_1.asm: New file.

2012-05-28  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcdext.c (compute_v): Simplified carry handling a
	bit, reduced stated scratch need from 2n+1 to 2n. Also comment and
	ASSERT improvements.

2012-05-27  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Add new x86 CPUs.
	* mpn/x86/fat/fat.c: Likewise.
	* mpn/x86_64/fat/fat.c: Likewise.

2012-05-27 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86_64/fat/fat.c: abort iff longmode-capable-bit is turned off.

	* mpn/generic/toom8h_mul.c: mark UNLIKELY branches.

2012-05-26  Torbjorn Granlund  <tege@gmplib.org>

	* mpz: Use MPZ_REALLOC return value when possible.

2012-05-25 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/tests/t-div.c: Test all _qr, _q, _r variants.
	* mini-gmp/tests/t-lcm.c: Test the _ui variant.

	* mini-gmp/mini-gmp.c (mpz_mod, mpz_mod_ui): New functions.
	* mini-gmp/mini-gmp.h (mpz_mod, mpz_mod_ui): Prototypes.

	* mpz/scan1.c: Simplify, and add a shortcut for scan1(z, 0).

2012-05-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/n_pow_ui.c: Cast non-limb count_leading_zeros argument.

2012-05-24 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/remove.c: Support negative divisor.
	* tests/mpz/t-remove.c: Test negative divisor.

2012-05-23  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/reuse.c: Major rewrite.

2012-05-23 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/sqrt.c: Further simplify.
	* mpz/sqrtrem.c: Likewise.

	* Mark failing branches with UNLIKELY. Many files affected.

2012-05-22  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/sqrt.c: Allocate less for overlapping operands, simplify.
	* mpz/sqrtrem.c: Likewise.

2012-05-21 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom8_sqr.c: Reduce branches for recursion.
	* mpn/generic/toom8h_mul.c: Likewise.

	* tests/mpn/t-toom8h.c: Don't use GMP_NUMB_BITS when not yet defined.

2012-05-20  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-gcd.c: Rewrite.

2012-05-19  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-gcd.c: Generate larger operands for better gcd code
	coverage; distribute size exponentially.

2012-05-17 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpf/pow_ui.c: Simplify.
	* tests/mpf/reuse.c (dsi_func): Exercise pow_ui.

	* tests/mpf/t-set_ui.c (check_data): LONG_HIGHBIT -> ULONG_HIGHBIT.
	* tests/mpf/t-set.c (check_random): New check, both set and init_set.

	* tests/cxx/t-ops.cc (check_mpq): Check squaring.
	* tests/mpq/t-equal.c (check_various): Check different den-size.

	* mpn/generic/mullo_n.c: Disable MAYBE_ if WANT_FAT_BINARY.
	* mpz/cmpabs_d.c: Remove an unused branch.

	* tests/mpz/t-get_d_2exp.c (check_zero): New check.
	* tests/mpz/t-inp_str.c: A few more cases.
	* tests/mpz/t-cmp_d.c: More bases and symbols, a few cases.

	* mpz/rootrem.c: Correctly handle odd roots of negatives.
	* tests/mpz/t-root.c: Test it.

2012-05-16  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpf/t-eq.c (check_random): New function, meat from old main().
	(check_data): New function.

2012-05-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/rsh1aors_n.asm: New file.
	* mpn/arm/v5/mod_1_2.asm: New file.

2012-05-11  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (explicit operator bool): New functions.
	* tests/cxx/t-cxx11.cc: Test the above.

2012-05-10 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (__gmpn_cpuvec_initialized): Was __gmpn_cpuvec.initialized
	* mpn/x86/fat/fat.c: Use separated _initialized variable.
	* mpn/x86_64/fat/fat.c: Likewise.
	* tests/mpn/t-fat.c: Likewise.

	* mpn/generic/toom2_sqr.c: Override global __gmpn_cpuvec_initialized.
	* mpn/generic/toom22_mul.c: Likewise.
	* mpn/generic/toom3_sqr.c: Likewise.
	* mpn/generic/toom33_mul.c: Likewise.

2012-05-09 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.c: merge mpz_rootrem and mpz_sqrtrem.

	* mpn/generic/sqrtrem.c (invsqrttab): Reduce size removing common byte.

	* mpz/bin_uiui.c (mul3, mul4, mul8): Remove unneeded shifts.
	(MAXFACS): Redefine, using the shared (safer) log_n_max.

2012-05-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/minithres/gmp-mparam.h (REDC_1_TO_REDC_N_THRESHOLD): Up to 9, for
	coherency with ASSERT in mpn/generic/redc_n.c.

2012-05-07 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/minithres/gmp-mparam.h: Updated TOOM6 and FAC_DSC.
	* tests/mpn/toom-sqr-shared.h: Don't test if no range.

	* mpz/oddfac_1.c: Add ASSERTs to warn about small threshold.
	* tune/tuneup.c: Update minimal threshold for FAC_DSC.

2012-05-06  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v6/sqr_basecase.asm: Simplify n=4 code.

2012-05-05 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/invert.c: Mark a branch UNLIKELY.
	* tune/tuneup.c (tune_fac_u): Update DSC_THRESHOLD minimum.
	* gmp-impl.h (FAC_???_THRESHOLD): Update default values.
	(ABOVE_THRESHOLD): New definition with __builtin_constant_p.

	* mpn/generic/toom22_mul.c: Disable MAYBE_ if WANT_FAT_BINARY.
	* mpn/generic/toom33_mul.c: Likewise.
	* mpn/generic/toom2_sqr.c: Likewise.
	* mpn/generic/toom3_sqr.c: Likewise.

2012-05-04  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c: Measure POWM_SEC_TABLE after the REDC thresholds.

2012-05-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/powm_sec.c: Use redc_2.
	(INNERLOOP): Use this mechanism, like plain powm.c.
	(WANT_CACHE_SECURITY): Remove, feature now unconditional.

2012-05-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/bin_uiui.c: Make use of CNST_LIMB.

2012-05-02 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/mfac_uiui.c: Support limb != ui.

2012-05-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/logops_n.asm: Work around register clobbering issue.

	* mpn/arm/aorscnd_n.asm: New file.

2012-05-01  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Put arm dirs in path in proper prio order.

	* mpn/arm/logops_n.asm: New file.

	* mpz/2fac_ui.c: Fix assumed typo.

	* mpn/arm/v6/gmp-mparam.h: New file.

	* mpn/arm/v5/gcd_1.asm: Hack for undefined BMOD_1_TO_MOD_1_THRESHOLD.
	* mpn/arm/v6t2/gcd_1.asm: Likewise.

2012-04-30  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v6/sqr_basecase.asm: New file.

2012-04-30 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/comb_tables.c: New file.
	* configure.in: Add it.
	* gen-fac.c: Define table limits.
	* gmp-impl.h: Declare tables.
	(log_n_max): New static function.
	* mpz/2fac_ui.c: Use shared tables.
	* mpz/bin_uiui.c: Likewise.
	* mpz/oddfac_1.c: Likewise.
	* mpz/primorial_ui.c: Likewise.

	* mpz/mfac_uiui.c: New file.
	* Makefile.am: Compile it.
	* mpz/Makefile.am (libmpz_la_SOURCES): Add mpz_mfac_uiui.c
	* gmp-h.in (mpz_mfac_uiui): Declare.

	* tests/mpz/t-mfac_uiui.c: New file.
	* tests/mpz/Makefile.am: Run it.

	* doc/gmp.texi: Document mpz_mfac_uiui, collapsing with other factorial functions.

	* tests/mpz/t-lcm.c: Test zero too.

	* mpz/prodlimbs.c: Simplify threshold (should be tuned, not guessed).

2012-04-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/aors_n.asm: Tune for more stable performance.

	* mpn/arm/aorslsh1_n.asm: New file.

	* mpn/arm/mod_34lsub1.asm: New file.

	* mpn/arm/v6t2/divrem_1.asm: New file.

2012-04-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/thumb/add_n.asm: New file.
	* mpn/thumb/sub_n.asm: New file.
	* mpn/thumb/add_n.s: Remove broken code.
	* mpn/thumb/sub_n.s: Likewise.

	* mpn/arm/v6/addmul_1.asm: Rewrite for stable speed, smaller size.
	* mpn/arm/v6/mul_1.asm: Likewise.

2012-04-27  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Search arm/v6t2 for arm7.

	* mpn/arm/v5/gcd_1.asm: New file.
	* mpn/arm/v6t2/gcd_1.asm: New file.

	* mpn/arm/mode1o.asm: New file.
	* mpn/arm/v6t2/mode1o.asm: New file.

	* mpn/arm/arm-defs.m4 (LEA): New define.
	* mpn/arm/invert_limb.asm: Use LEA.

2012-04-26 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/bin_uiui.c (bc_bin_uiui): Nail support.
	* tests/cxx/t-ops2.cc: Test 0/3.
	* oddfac_1.c: assume n > 26.
	* tests/mpz/t-jac.c (mpn_jacobi_n): Enlarge tested sizes.

2012-04-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/v6/addmul_2.asm: New file.
	* mpn/arm/v6/mul_2.asm: New file.

2012-04-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/aorsmul_1.asm: Tweak loop control for a 6% speed increase.

2012-04-22  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Recognise ARM sub-architectures.

	* configfsf.guess: Update to current FSF version.
	* configfsf.sub: Likewise.

	* mpn/arm/bdiv_dbm1c.asm: New file.

	* mpn/arm/v6/mul_1.asm: New file.
	* mpn/arm/v6/addmul_1.asm: New file.

2012-04-22 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gen-fac.c: Renamed, was gen-fac_ui.c .
	* Makefile.am: Renamed gen-fac.c and fac_table.h .
	* gmp-impl.h: #include "fac_table.h".
	* mpz/oddfac_1.c: Use generated constant.
	* mpz/bin_ui.c: Small optimisations.

	* tune/common.c (speed_mpz_bin_ui): New function.
	* tune/speed.h: Declare it.
	* tune/speed.c: Use it.

2012-04-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/mul_1.asm: Cleanup.
	* mpn/arm/copyi.asm: Cleanup, assume allocate-on-write cache.
	* mpn/arm/copyd.asm: Likewise.

	* mpn/arm/add_n.asm: Delete.
	* mpn/arm/sub_n.asm: Delete.
	* mpn/arm/aors_n.asm: New file, made from old files.

	* mpn/arm/addmul_1.asm: Delete.
	* mpn/arm/submul_1.asm: Delete.
	* mpn/arm/aorsmul_1.asm: New file, made from old files.

	* mpn/arm/com.asm: New file.
	* mpn/arm/lshift.asm: New file.
	* mpn/arm/rshift.asm: New file.

2012-04-20  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpq/io.c: New file.
	* tests/mpq/Makefile.am: Run it.

	* mpz/clrbit.c: Simplify along the lines of setbit.c.

2012-04-20 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/setbit.c: Simplify.

	* gmp-impl.h (LOG2C): Define.
	* mpz/fac_ui.c (LOG2C): Remove.
	* mpz/2fac_ui.c (LOG2C): Remove.
	* mpz/oddfac_1.c (LOG2C): Remove.
	* mpn/generic/binvert.c (LOG2C): Remove.
	* mpn/generic/invertappr.c (LOG2C): Remove.

	* mpz/bin_uiui.c (mpz_goetgheluck_bin_uiui): Move declarations,
	and assume that n and k are not small.

2012-04-19  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/Makefile.am (check_PROGRAMS): Add t-remove.

	* tests/mpz/t-remove.c: Clear out mpz variables.

	* tests/mpz/t-cong.c (check_random): Use much larger numbers.
	(check_data): Check congruences mod 0.

	* tests/mpz/t-divis.c: Test divisibility by zero.

	* tests/mpz/reuse.c: Test mpz_mod.

	* mpz/setbit.c: Remove dead code.  Use CNST_LIMB.
	* mpz/clrbit.c: Use CNST_LIMB.

2012-04-19 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* primesieve.c: New file, with functions from mpz/oddfac_1.c .
	* mpz/oddfac_1.c (bitwise_primesieve): Re-moved.
	* Makefile.am (libgmp_la_SOURCES): Add primesieve.c .
	* gmp-impl.h (gmp_primesieve): Declare.

	* mpz/bin_uiui.c (mpz_goetgheluck_bin_uiui): New, factor-based
	implementation.
	* tests/mpz/t-bin.c: Extend tests, to cover _goetgheluck.

	* mpz/primorial_ui.c: New file.
	* mpz/Makefile.am (libmpz_la_SOURCES): Add mpz/primorial_ui.c
	* Makefile.am (MPZ_OBJECTS): Add mpz/primorial_ui$U.lo
	* gmp-h.in (mpz_primorial_ui): Declare.
	* tests/mpz/t-primorial_ui.c: New test for the new function.
	* tests/mpz/Makefile.am (check_PROGRAMS): Add t-primorial_ui.
	* doc/gmp.texi: Short documentation for the new function.

2012-04-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/aorsmul_1.asm: Fix some DOS64 issues.
	* mpn/x86_64/coreisbr/mul_1.asm: Likewise.

	* mpn/x86_64/fastsse/lshiftc-movdqu2.asm: Adhere to DOS64 register
	partitioning rules.

	* mpn/x86_64/fastsse/copyi-palignr.asm: Implement temporary workaround
	to overlap issue.

2012-04-17 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/bin_uiui.c: Support small limbs (fallback on bin_ui).

	* tests/mpn/toom-sqr-shared.h: Use a restricted range.
	* tests/mpn/t-toom2-sqr.c: Specify correct range.
	* tests/mpn/t-toom3-sqr.c: Likewise.
	* tests/mpn/t-toom4-sqr.c: Likewise.
	* tests/mpn/t-toom6-sqr.c: Likewise.
	* tests/mpn/t-toom8-sqr.c: Likewise, but extended.
	* tests/mpn/Makefile.am (check_PROGRAMS): Add t-toom?-sqr tests.

	* mpn/generic/sbpi1_bdiv_q.c: Move ASSERTs, to support qp = np.

2012-04-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/copyd.asm: Rewrite.
	* mpn/x86_64/copyi.asm: Rewrite.

2012-04-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fastsse/lshift-movdqu2.asm: Add DOS entry/exit sequences.
	* mpn/x86_64/fastsse/rshift-movdqu2.asm: Likewise.
	* mpn/x86_64/fastsse/lshiftc-movdqu2.asm: Likewise.

	* mpn/x86_64/x86_64-defs.m4 (palignr): New macro.
	(x86_opcode_regxmm, x86_opcode_regxmm_list): New, made from x86 mmx
	counterparts.
	(x86_lookup): Copy from x86/x86-defs.m4.
	* mpn/x86_64/fastsse/copyd-palignr.asm: Use palignr macro.
	* mpn/x86_64/fastsse/copyi-palignr.asm: Likewise.

2012-04-15 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpz/t-bin.c: Add more tests on small values.
	* mpz/bin_uiui.c (mpz_bdiv_bin_uiui): Smaller temporary areas.

2012-04-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fastsse/copyd-palignr.asm: New file.
	* mpn/x86_64/fastsse/copyi-palignr.asm: New file.
	* mpn/x86_64/core2/copyd.asm: New file.
	* mpn/x86_64/core2/copyi.asm: New file.
	* mpn/x86_64/nano/copyd.asm: New file.
	* mpn/x86_64/nano/copyi.asm: New file.
	* mpn/x86_64/atom/copyd.asm: New file.
	* mpn/x86_64/atom/copyi.asm: New file.

2012-04-13 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/bin_uiui.c: Rewrite (some parts are Torbjorn's).
	* gen-fac_ui.c: Generate new constants for bin_uiui.

	* mini-gmp/mini-gmp.h (mpz_fac_ui, mpz_bin_uiui): New definitions.
	* mini-gmp/mini-gmp.c (mpz_fac_ui, mpz_bin_uiui): Trivial
	implementation.

	* tests/mpz/t-fac_ui.c: Check Wilson's theorem on a big value.

	* mpn/generic/invert.c: Remove support for scratch == NULL.
	* tune/speed.h (SPEED_ROUTINE_MPN_MUPI_DIV_QR): Allocate scratch
	space for mpn_invert.

	* mpz/mul_i.h: Small clean-up.

	* tests/mpn/toom-sqr-shared.h: New file.
	* tests/mpn/t-toom2-sqr.c: New file.
	* tests/mpn/t-toom3-sqr.c: New file.
	* tests/mpn/t-toom4-sqr.c: New file.
	* tests/mpn/t-toom6-sqr.c: New file.
	* tests/mpn/t-toom8-sqr.c: New file.
	* tests/mpn/Makefile.am (EXTRA_DIST): Add toom-sqr-shared.h .

	* mpn/generic/toom62_mul.c: Use add_n, sub_n, when possible.

2012-04-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fastsse/lshift-movdqu2.asm: New file.
	* mpn/x86_64/fastsse/rshift-movdqu2.asm: New file.
	* mpn/x86_64/fastsse/lshiftc-movdqu2.asm: New file.
	* mpn/x86_64/coreisbr/lshift.asm: New file.
	* mpn/x86_64/coreisbr/rshift.asm: New file.
	* mpn/x86_64/coreisbr/lshiftc.asm: New file.
	* mpn/x86_64/k10/lshift.asm: New file.
	* mpn/x86_64/k10/rshift.asm: New file.
	* mpn/x86_64/k10/lshiftc.asm: New file.

	* mpn/x86_64/fastsse/lshift.asm: Simplify to very basic form.

2012-04-11  Niels Möller  <nisse@lysator.liu.se>

	* Makefile.am (check-mini-gmp): Pass -I../.. in EXTRA_CFLAGS, to
	locate gmp.h.

2012-04-11 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mini-gmp/mini-gmp.h (mpz_root, mpz_rootrem): define (correctly).
	* mini-gmp/mini-gmp.c (mpz_rootrem): Extended code from _root.
	(mpz_root): Use mpz_rootrem.
	(mpz_mul_ui): Correctly handle negative operands.

	* mini-gmp/tests/Makefile (CHECK_PROGRAMS): add t-root.
	* mini-gmp/tests/t-root.c: New file.
	* mini-gmp/tests/t-reuse.c: Enable root{,rem} tests.

2012-04-10 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gen-fac_ui.c (mpz_root): Remove.
	* mini-gmp/mini-gmp.c (mpz_root): New, support negative operands.
	* mini-gmp/mini-gmp.h (mpz_root): define.
	(mpz_out_str): Test also __STDIO_LOADED (for VMS).
	* mpz/2fac_ui.c: Cosmetic change.

2012-04-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/ia64/gcd_1.asm: Rewrite inner loop to use ctz table.

2012-04-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/p7/popcount.asm: Properly extend arg n for mode32.
	* mpn/powerpc64/p7/hamdist.asm: Likewise.

2012-04-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/p7/popcount.asm: New file.
	* mpn/powerpc64/p7/hamdist.asm: New file.

	* longlong.h (ARM count_leading_zeros): Enable for more arch versions.

	* mpn/x86_64/gcd_1.asm: Make room for DOS64 regparm shadow area.
	* mpn/x86_64/core2/gcd_1.asm: Likewise.

2012-04-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/aorrlsh_n.asm: Make it actually work for DOS64.

2012-04-02 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/oddfac_1.c: Initialize size for ASSERT.

2012-04-02  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-h.in (_GMP_H_HAVE_FILE): Test also __STDIO_LOADED (for VMS).

	* gmp-impl.h (doprnt_format_t, etc): Remove bogus __GMP_DECLSPECs.

2012-03-30 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86_64/sqr_basecase.asm: Speed-up for small cases.

2012-03-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/gcd_1.asm: New file.

2012-03-27  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Fix typo in coreisbr recognition.

2012-03-26 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86_64/gcd_1.asm: Reduce latency.
	* mpn/x86_64/mul_basecase.asm: Save one jump.

	* mpz/iset_ui.c: Don't realloc.

2012-03-20 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mp_clz_tab.c: Add __clz_tab[128].
	* longlong.h (count_trailing_zeros): Use it in pure C variant.

2012-03-20  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (x86 fat_path): Add many missing directories.
	* mpn/x86/fat/fat.c (__gmpn_cpuvec_init): Rewrite.
	(fake_cpuid_table): Add many more CPUs.

	* mpn/x86_64/fat/fat.c (__gmpn_cpuvec_init): Minor spacing cleanup.

2012-03-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/x86-defs.m4 (CALL, PIC_WITH_EBX): New macros.
	* mpn/x86/darwin.m4: Likewise.
	* mpn/x86/k7/gcd_1.asm: Use new macros to support PIC.
	* mpn/x86/p6/gcd_1.asm: Likewise.

2012-03-19 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gen-fac_ui.c: Generate more constants (possible mini-mpz_root).
	* mpz/oddfac_1.c: Improve ASSERTs.
	(log_n_max): Use precomputed table.

	* longlong.h (_PROTO): Remove.

2012-03-18  Torbjorn Granlund  <tege@gmplib.org>

	* longlong.h (count_trailing_zeros): Write better pure C default
	variant.

	* mpn/x86/p6/gcd_1.asm: Remove forgotten x86_64 reference.

	* mpn/x86/p6/gmp-mparam.h: Update, to get BMOD_1_TO_MOD_1_THRESHOLD
	defined for fat binaries.

2012-03-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/k7/gcd_1.asm: Rewrite.
	* mpn/x86/p6/gcd_1.asm: New file.

	* mpn/x86_64/core2/gcd_1.asm: Conditionally suppress reduction calls.
	* mpn/x86_64/gcd_1.asm: Rewrite.

2012-03-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/gcd_1.c: Parameterise zerotab code.

	* mpn/x86_64/nano/gcd_1.asm: New file, grabbing core2 asm file.

	* mpn/x86_64/core2/gcd_1.asm: Speed up loop code, simplify non-loop
	code.

2012-03-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/core2/gcd_1.asm: Add hack to support fat builds.

	* mpn/x86_64/core2/gcd_1.asm: Shorten critical path.

2012-03-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/core2/gcd_1.asm: New file.
	* mpn/x86_64/k10/gcd_1.asm: New file, grabbing core2 asm file.
	* mpn/x86_64/bd1/gcd_1.asm: Likewise.

	* mpn/x86_64/bobcat/sqr_basecase.asm: New file.
	* mpn/x86_64/bobcat/mul_basecase.asm: Minor tuning.

2012-03-10  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (fat_functions): Add addlsh1_n, addlsh2_n, addmul_2,
	mullo_basecase, redc_1, redc_2, sublsh1_n.

	* gmp-impl.h (struct cpuvec_t): Add fields for new fat functions.
	* gmp-impl.h: Adjust corresponding declarations.

	* mpn/generic/redc_2.c (mpn_addmul_2): Make static.

	* mpn/x86_64/fat/fat_entry.asm (FAT_INIT): Expand before fat_init to
	reduce branch offsets.  Pass plain 0,1,3... in %al since we'd else run
	out of 8-bit range.

	* mpn/x86_64/fat/fat_entry.asm (fat_init): Scale passed index value.
	* mpn/x86/fat/fat_entry.asm (fat_init): Use movzbl for expanding index
	value.

	* mpn/x86_64/x86_64-defs.m4 (CPUVEC_FUNCS_LIST): Add new fat functions.
	* mpn/x86/x86-defs.m4 (CPUVEC_FUNCS_LIST): Likewise.
	* mpn/x86_64/fat/fat.c (__gmpn_cpuvec): Likewise.
	* mpn/x86/fat/fat.c (__gmpn_cpuvec): Likewise.

	* mpn/x86_64/fat/redc_2.c: New file.
	* mpn/x86/fat/mullo_basecase.c: New file.
	* mpn/x86/fat/redc_1.c: New file.
	* mpn/x86/fat/redc_2.c: New file.

	* tests/mpn/t-fat.c: Test mullo_basecase.

2012-03-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/addmul_2.asm: Port to DOS64.

2012-02-29  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h: Ignore partial C++11 support in g++-4.6.
	* tests/cxx/t-cxx11.cc: Likewise.

	* gmpxx.h (operator""): New functions.
	* tests/cxx/t-cxx11.cc: Test the above.
	* doc/gmp.texi: Document the above.

2012-03-08 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* acinclude.m4 (GMP_H_ANSI): Remove.
	* configure.in: Don't use GMP_H_ANSI.
	* gmp-h.in (__GMP_HAVE_PROTOTYPES): Remove.

2012-03-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fat/fat.c (fake_cpuid_table): Recognise "bulldozer".
	(__gmpn_cpuvec_init): Overhaul to match configure.in.

	* configure.in: Adjust bulldozer path_64.

2012-03-07  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (x86_64 fat_path): List recently added AMD directories.

	* mpn/x86_64/bobcat/copyi.asm: New file.
	* mpn/x86_64/bobcat/copyd.asm: New file.

	* config.guess: Handle AMD 11h correctly.

	* tune/tuneup.c (tune_redc): Better handle situation where redc_2 is
	never faster.

2012-03-06  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bobcat/mul_basecase.asm: New file.

2012-03-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bobcat/mul_1.asm: New file.
	* mpn/x86_64/bobcat/aorsmul_1.asm: New file.

2012-03-04 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/invert.c: Remove mod 0 branch.
	* tests/mpz/t-invert.c: Avoid testing mod 0.
	* doc/gmp.texi (mpz_invert): Specify mod 0 is not handled.

	* gmp-h.in (__gmp_signed, __gmp_const): Remove.
	(__GMP_HAVE_TOKEN_PASTE, __GMP_HAVE_CONST): Remove.
	* gmp-impl.h: Strip __GMP_HAVE_TOKEN_PASTE and __GMP_HAVE_CONST.
	* demos/expr/: Strip __gmp_const usage from all files.

	* tests/mpz/t-powm.c (allsizes_seen): Require unsigned*.

2012-03-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/k8/gmp-mparam.h: New file.
	* mpn/x86_64/k10/gmp-mparam.h: New file.

	* mpn/generic/hgcd_step.c (mpn_hgcd_step): Remove unused variables.
	* mpn/generic/hgcd_jacobi.c (hgcd_jacobi_step): Likewise.
	* mpn/generic/hgcd_reduce.c (hgcd_matrix_apply): Likewise.
	* mpn/generic/mu_bdiv_qr.c: Likewise.
	* mpz/jacobi.c: Likewise.
	* mpz/mod.c: Likewise.

	* mpn/generic/toom42_mul.c: Remove unread variable.
	* mpn/generic/set_str.c (mpn_set_str_compute_powtab): Likewise.
	* mpn/generic/rootrem.c (mpn_rootrem_internal): Likewise.
	* tests/refmpn.c (refmpn_mul): Likewise.
	* mpn/generic/hgcd_appr.c (mpn_hgcd_appr): Propagate mask computation
	into ASSERT, remove variable.

	* gmp-h.in (__GMP_PROTO): Remove.
	* Strip __GMP_PROTO usage from all files.
	* Strip prototype parameter names from all files.

2012-03-01 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* doc/gmp.texi (mpz_invert): Correctly document result range.
	* tests/mpz/t-invert.c: Small range correction.

2012-03-01  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/mullo_basecase.asm: New file.

2012-02-29  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (std::numeric_limits): New partial specialization.

2012-02-29  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp/tests/t-reuse.c: New test case, based on
	tests/mpz/reuse.c.

	* mini-gmp/mini-gmp.c (mpz_cdiv_r_ui): New function.
	(mpz_fdiv_r_ui): New function.
	(mpz_tdiv_r_ui): New function.
	(mpz_powm_ui): New function.
	(mpz_pow_ui): New function.
	(mpz_ui_pow_ui): Use mpz_pow_ui.
	(mpz_gcdext): Fixed input/output overlap, for the case of one
	input being zero.
	(mpz_sqrtrem): Fix for the case r NULL, U zero.

	* Makefile.am (check-mini-gmp): Use $(MAKE).
	(clean-mini-gmp): New target.
	(clean-local, distclean-local): New automake targets. Depend on
	clean-mini-gmp.

2012-02-28  Niels Möller  <nisse@lysator.liu.se>

	* Makefile.am (check-mini-gmp): New target, for running the
	mini-gmp testsuite.

	* mini-gmp/tests/Makefile (srcdir, MINI_GMP_DIR): New make
	variables. These can be overridden when using a separate build
	directory.
	(EXTRA_CFLAGS): Renamed, was OPTFLAGS.

	* mini-gmp/mini-gmp.c (mpz_abs_add): Don't cache limb pointers
	over MPZ_REALLOC, since that breaks in-place operation. Bug
	spotted by Torbjörn.
	(mpz_and, mpz_ior, mpz_xor): Likewise.
	(mpz_cmp): Fixed comparison of negative numbers.

2012-02-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fastsse/lshiftc.asm: New file.
	* mpn/x86_64/fastsse/com.asm: New file.

	* mpn/x86_64/bd1/popcount.asm: New file.
	* mpn/x86_64/bd1/hamdist.asm: New file.

	* mpn/x86_64/fastsse/copyi.asm: New file.
	* mpn/x86_64/fastsse/copyd.asm: New file.
	* mpn/x86_64/fastsse/lshift.asm: New file.

2012-02-26  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/addmul_2.asm: New file.

	* tests/devel/try.c (param_init): Don't require addmul_N to handle
	overlap.

	* mpn/x86_64/bd1/mul_1.asm: New file.
	* mpn/x86_64/bd1/aorsmul_1.asm: New file.

2012-02-26 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/2fac_ui.c: New file: implements n!!.
	* Makefile.am (MPZ_OBJECTS): Add mpz/2fac_ui.
	* gmp-h.in: Declare mpz_2fac_ui.
	* tests/mpz/t-fac.c: Test mpz_2fac_ui.
	* doc/gmp.texi: Document mpz_2fac_ui.
	* mpz/Makefile.am (libmpz_la_SOURCES): Add 2fac_ui.c.

	* mpz/oddfac_1.c (mpz_oddfac_1): Use umul_ppmm when size = 2.

2012-02-26  Niels Möller  <nisse@lysator.liu.se>

	* mini-gmp: New subdirectory. For use by GMP bootstrap, and as a
	fallback for applications needing bignums but not high
	performance.

	* bootstrap.c: New file, replacing dumbmp.c. Uses mini-gmp for the
	standard GMP functions, and then defines the few functions
	particular for the bootstrap.
	* dumbmp.c: Deleted file. A few functions moved to bootstrap.c.

	* gen-bases.c: Include bootstrap.c, not dumbmp.c.
	* gen-fac_ui.c: Likewise.
	* gen-trialdivtab.c: Likewise.
	* gen-fib.c: Include bootstrap.c, not dumbmp.c. Use assert rather
	than ASSERT. Deleted casts of xmalloc return value.
	* gen-psqr.c: Likewise.
	(COLLAPSE_ELEMENT): Use memmove rather than mem_copyi.

	* Makefile.am: Replaced all uses of dumbmp.c by bootstrap.c.
	(EXTRA_DIST, dist-hook): Arrange for distribution of the mini-gmp
	files.

2012-02-24 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/invert.c: Use ABSIZ, MPZ_EQUAL_1_P.
	* mpz/abs.c: Collapse MPZ_REALLOC(x,.) and PTR(x).
	* mpz/aors_ui.h: Likewise.
	* mpz/com.c: Likewise.
	* mpz/neg.c: Likewise.

	* mpz/invert.c: Reply "no-inverse" when modulus is zero.
	* tests/mpz/t-invert.c: Add more checks.
	* doc/gmp.texi (mpz_invert): Inverse can not be zero.

2012-02-24  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpn/logic.c: New file.
	* tests/mpn/Makefile.am (check_PROGRAMS): Add logic.

	* tests/mpz/t-invert.c: New file.
	* tests/mpz/Makefile.am (check_PROGRAMS): Add t-invert.

2012-02-24  Marc Glisse  <marc.glisse@inria.fr>

	* tests/mpq/t-cmp.c: Move NUM and DEN macros...
	* tests/mpq/t-cmp_ui.c: Likewise...
	* gmp-impl.h: ... to here.

	* mpq/abs.c: Use NUM, DEN, SIZ, ALLOC, PTR, MPZ_REALLOC.
	* mpq/aors.c: Likewise.
	* mpq/canonicalize.c: Likewise.
	* mpq/clear.c: Likewise.
	* mpq/cmp.c: Likewise.
	* mpq/cmp_si.c: Likewise.
	* mpq/cmp_ui.c: Likewise.
	* mpq/div.c: Likewise.
	* mpq/equal.c: Likewise.
	* mpq/get_d.c: Likewise.
	* mpq/get_den.c: Likewise.
	* mpq/get_num.c: Likewise.
	* mpq/get_str.c: Likewise.
	* mpq/init.c: Likewise.
	* mpq/inp_str.c: Likewise.
	* mpq/inv.c: Likewise.
	* mpq/md_2exp.c: Likewise.
	* mpq/mul.c: Likewise.
	* mpq/neg.c: Likewise.
	* mpq/set.c: Likewise.
	* mpq/set_d.c: Likewise.
	* mpq/set_den.c: Likewise.
	* mpq/set_f.c: Likewise.
	* mpq/set_num.c: Likewise.
	* mpq/set_si.c: Likewise.
	* mpq/set_str.c: Likewise.
	* mpq/set_ui.c: Likewise.
	* mpq/set_z.c: Likewise.
	* mpq/swap.c: Likewise.

	* tests/mpq/t-inv.c: New test file.
	* tests/mpq/Makefile.am: Add the above.

	* gmpxx.h (__gmp_set_expr): Use mpq_set_z.

	* mpq/md_2exp.c: Collapse MPZ_REALLOC(x,.) and PTR(x).
	* mpq/set_d.c: Likewise.
	* mpq/set_f.c: Likewise.

2012-02-24  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86_64/core2/aorsmul_1.asm: Added mpn_addmul_1c and
	mpn_submul_1c entry points.

2012-02-23  Marc Glisse  <marc.glisse@inria.fr>

	* mpz/abs.c: Use ALLOC, SIZ, ABSIZ, PTR, MPZ_REALLOC.
	* mpz/aors_ui.h: Likewise.
	* mpz/array_init.c: Likewise.
	* mpz/cdiv_q.c: Likewise.
	* mpz/cdiv_qr.c: Likewise.
	* mpz/cdiv_r.c: Likewise.
	* mpz/clear.c: Likewise.
	* mpz/clrbit.c: Likewise.
	* mpz/cmp_si.c: Likewise.
	* mpz/com.c: Likewise.
	* mpz/fdiv_q.c: Likewise.
	* mpz/fdiv_qr.c: Likewise.
	* mpz/fdiv_r.c: Likewise.
	* mpz/get_si.c: Likewise.
	* mpz/get_str.c: Likewise.
	* mpz/init.c: Likewise.
	* mpz/inp_str.c: Likewise.
	* mpz/iset.c: Likewise.
	* mpz/iset_d.c: Likewise.
	* mpz/iset_si.c: Likewise.
	* mpz/iset_str.c: Likewise.
	* mpz/iset_ui.c: Likewise.
	* mpz/mod.c: Likewise.
	* mpz/neg.c: Likewise.
	* mpz/out_str.c: Likewise.
	* mpz/random2.c: Likewise.
	* mpz/set_si.c: Likewise.
	* mpz/set_str.c: Likewise.
	* mpz/set_ui.c: Likewise.
	* mpz/setbit.c: Likewise.
	* mpz/sqrt.c: Likewise.
	* mpz/swap.c: Likewise.
	* mpz/tdiv_r_2exp.c: Likewise.

	* tests/cxx/t-ops.cc: Test mpz_abs reallocation.

2012-02-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/core2/rsh1aors_n.asm: Complete rewrite.
	* mpn/x86_64/coreisbr/rsh1aors_n.asm: Move old core2 code here.

	* mpn/x86_64/redc_1.asm: Make it work for DOS64 (broken in last edit).

2012-02-20 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom_interpolate_8pts.c: Compute carry iif non-trivial.

	* mpz/gcdext.c: Adapt to relaxed mpn_gcdext's input requirements.

	* mpz/and.c: Use mpn_ logic everywhere. Reduce branches.
	* mpz/ior.c: Likewise.
	* mpz/xor.c: Likewise.

2012-02-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreisbr/mul_1.asm: New file.

	* mpn/x86_64/coreisbr/aorsmul_1.asm: New file.

	* mpn/x86_64/mod_34lsub1.asm: Avoid ",pt" branch hint since many
	assemblers don't support it.

2012-02-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/redc_1.c: Put back mpn_add_n call, return its carry.
	Reintroduce previously removed RP argument.
	* mpn/x86_64/redc_1.asm: Likewise.

	* mpn/generic/redc_2.c: Remove mpn_sub_n call, return carry from
	mpn_add_n call.

	* gmp-impl.h (mpn_redc_1, mpn_redc_2): Now return an mp_limb_t.

	* tune/speed.h (SPEED_ROUTINE_REDC_1): Adopt to pass RP argument.

	* tests/refmpn.c (refmpn_redc_1): Adopt to new redc_1 interface.

	* mpn/generic/powm.c (MPN_REDC_1): Pass rp parameter to mpn_redc_1.
	* mpn/generic/powm_sec.c (MPN_REDC_1_SEC): Likewise.
	* mpn/generic/powm.c (MPN_REDC_2): New macro, use for mpn_redc_2.

2012-02-18  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (std::common_type): New partial specialization in C++11.
	* tests/cxx/t-cxx11.cc: Test it.

	* gmpxx.h: Don't declare long double functions that are never defined.

	* gmpxx.h (__gmp_binary_expr): Let things happen in place: q=q*q+z*z
	becomes tmp=z*z, q=q*q, q+=tmp.
	* tests/cxx/t-binary.cc: More variable reuse tests.

2012-02-17  Marc Glisse  <marc.glisse@inria.fr>

	* gmp-h.in (__GMP_WITHIN_GMP): Test with #ifdef instead of #if, for
	the benefit of applications using gcc -Wundef.
	(__GMP_WITHIN_GMPXX): Likewise.

2012-02-16  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__gmp_binary_expr): Let things happen in place: e=a*b-c*d
	becomes tmp=c*d, e=a*b, e-=tmp.
	* tests/cxx/t-binary.cc: More variable reuse tests.

2012-02-15  Niels Möller  <nisse@lysator.liu.se>

	* tune/tuneup.c (mul_toom43_to_toom54_threshold): New global.
	(tune_mul): Added tuning of MUL_TOOM43_TO_TOOM54_THRESHOLD.
	* tune/speed.h (SPEED_ROUTINE_MPN_TOOM43_FOR_TOOM54_MUL): New macro.
	(SPEED_ROUTINE_MPN_TOOM54_FOR_TOOM43_MUL): New macro.
	Prototypes for corresponding functions.
	* tune/common.c (speed_mpn_toom43_for_toom54_mul): New function.
	(speed_mpn_toom54_for_toom43_mul): New function.

	* gmp-impl.h (MPN_TOOM43_MUL_MINSIZE): Corrected constant.
	(MPN_TOOM53_MUL_MINSIZE): Likewise.
	(MPN_TOOM54_MUL_MINSIZE): New constant.
	(mpn_toom54_mul): Added prototype.
	(MUL_TOOM43_TO_TOOM54_THRESHOLD): New threshold. Default value and
	tuning setup.

2012-02-14  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/toom54_mul.c: New file, originally contributed by
	Marco.
	* gmp-impl.h (mpn_toom54_mul_itch): New function.
	* configure.in (gmp_mpn_functions): Added toom54_mul.
	* tests/mpn/t-toom54.c: New file.
	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-toom54.

2012-02-13  Niels Möller  <nisse@lysator.liu.se>

	* configure.in: Display summary of options.

2012-02-11  Torbjorn Granlund  <tege@gmplib.org>

	* tests/tests.h (TESTS_REPS): Print any non-standard repetitions.

2012-02-11 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* doc/gmp.texi (Factorial): Shortly describe current algorithm.
	(Multiplication Algorithms): Add Toom[68]'n'half, (too) shortly.
	* gmp-impl.h (ASSERT_ALWAYS): Consider failures UNLIKELY.

2012-02-10  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpz/t-gcd.c (gcdext_valid_p): Enforce slightly stricter
	bound for cofactors.

	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_hook): Corrected
	handling of unlikely (maybe impossible?) case u1n < un. Related to
	the 2012-02-05 bugfix of gcdext_subdiv_step.c in the gmp-5.0 repo.

2012-02-09 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (mpn_toom3*_itch): Support any recursion depth.
	* tests/refmpn.c (refmpn_mul): Restore tight allocations.

	* mpz/oddfac_1.c (mpz_oddfac_1): Get ready for n!!
	* gmp-impl.h (mpz_oddfac_1): Update signature.
	* mpz/fac_ui.c (mpz_fac_ui): Update call to mpz_oddfac_1.

2012-02-09  Marc Glisse  <marc.glisse@inria.fr>

	* gmp-impl.h (ABS_CAST): New macro.
	* mpf/cmp_si.c: Use ABS_CAST.
	* mpf/get_si.c: Use ABS_CAST.
	* mpf/iset_si.c: Use ABS_CAST.
	* mpf/set_si.c: Use ABS_CAST.
	* mpq/set_si.c: Use ABS_CAST.
	* mpz/cmp_si.c: Use ABS_CAST.
	* mpz/get_si.c: Use ABS_CAST.
	* mpz/iset_si.c: Use ABS_CAST.
	* mpz/mul_i.h: Use ABS_CAST.
	* mpz/set_si.c: Use ABS_CAST.

2012-02-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc32/divrem_2.asm: Fix off-by-one condition in invert_limb
	code.

2012-02-08  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (mpz_gcdext): Clarified corner cases in cofactor
	canonicalization.

2012-02-07  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcdext.c (mpn_gcdext): Fixed assert, related to the
	special case A = (2k+1) G, B = 2 G. Fix copied from gmp-5.0 repo.

2012-02-06  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd_matrix.c (hgcd_matrix_update_q): Fixed carry
	handling bug. Fix copied from gmp-5.0 repo, where the function is
	found in hgcd.c.

	* tests/mpz/t-gcd.c (main): Use mpz_rrandomb for test operands,
	not mpz_urandomb. Change copied from gmp-5.0 repo.
	* tests/mpn/t-hgcd.c (main): Likewise.

2012-02-04 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/refmpn.c (refmpn_mul): More conservative allocations.

2012-02-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bd1/gmp-mparam.h: New file.

	* longlong.h (udiv_qrnnd from sdiv_qrnnd): Declare udiv_w_sdiv.

	* mpn/generic/udiv_w_sdiv.c: Use c89 function header.

2012-02-03 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/fac_ui.c: mpz_oddfac_1 removed, with many related functions.
	* mpz/oddfac_1.c: New file, mpz_oddfac_1 implementation.
	* gmp-impl.h: mpz_oddfac_1 declaration.
	* Makefile.am (MPZ_OBJECTS): add mpz/oddfac_1$U.lo .
	* mpz/Makefile.am (libmpz_la_SOURCES): add oddfac_1.c .
	* tune/Makefile.am (fac_ui.c): include mpz/oddfac_1.c .

2012-02-02 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom_interpolate_16pts.c: Correct an unlikely 32-bit bug.

2012-02-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom63_mul.c: Allow s+t==n by adjusting an ASSERT.
	* mpn/generic/toom_interpolate_8pts.c: Perform final incr iff s+t!=n.

	* tests/mpn/t-toom6h.c (MIN_BN): Make more consistent with ASSERT in
	tested function.

2012-02-01  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpn/t-mul.c: New file.
	* tests/mpn/Makefile.am: Compile it.

2012-02-01  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h: Remove check for g++ older than 2.91.

2012-02-01  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/mul.c: Added diagram on where toom functions can be
	called.

2012-02-01  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__gmp_unary_expr): Make the constructor explicit.
	(__gmp_expr(__gmp_expr&&)): New move constructors.
	(__gmp_expr::operator=(__gmp_expr&&)): New move assignments.
	(swap): Mark as noexcept.
	(__GMPXX_USE_CXX11): New macro.
	(__GMPXX_NOEXCEPT): New macro.
	* tests/cxx/t-cxx11.cc: New file.
	* tests/cxx/Makefile.am: Added t-cxx11.

2012-01-31  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/powm_sec.c (SQR_BASECASE_LIM): New name for
	SQR_BASECASE_MAX.
	(SQR_BASECASE_LIM, fat variant): Define to read __gmpn_cpuvec.
	(SQR_BASECASE_LIM, native variant): Define to SQR_TOOM2_THRESHOLD
	straight, without arithmetic.
	(mpn_local_sqr): Use BELOW_THRESHOLD as per Marco's suggestion.

2012-01-30  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-powm.c: Ensure all sizes are seen.

2012-01-30  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__gmp_binary_expr): Let things happen in place: d=a+b+c
	when d != c.
	* tests/cxx/t-binary.cc: Test variable reuse: c=a+b+c.

2012-01-28  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h: Don't compute -LONG_MIN.

	* doc/gmp.texi (gmp_randclass::get_z_bits): Use mp_bitcnt_t.
	* gmpxx.h: Replace unsigned long with mp_bitcnt_t.

2012-01-27  Torbjorn Granlund  <tege@gmplib.org>

	* Upgrade to libtool 2.4.2.

2012-01-26 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpz/t-fac_ui.c: Increase default test cases.

	* mpz/prodlimbs.c: New file, mpz_prodlimbs implementation.
	* gmp-impl.h: mpz_prodlimbs declaration.
	* Makefile.am (MPZ_OBJECTS): add mpz/prodlimbs$U.lo .
	* mpz/Makefile.am (libmpz_la_SOURCES): add prodlimbs.c .
	(fac_ui.h): remove target (moved up one directory).
	* mpz/fac_ui.c: mpz_prodlimbs removed, micro-optimisations.

2012-01-25  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c: Remove unused tuneup variables.

2012-01-20 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/fac_ui.c: Reduce branches in basecases.

2012-01-18  Marc Glisse  <marc.glisse@inria.fr>

	* doc/gmp.texi (mpf_class::mpf_class): Use mp_bitcnt_t.

2012-01-17  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Add ultrasparc T4 support.

	* demos/isprime.c (main): Run 25 millerrabin tests.

2012-01-16 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/fac_ui.c (SIEVE_SEED): Define value for small limb size.
	(mpz_oddswing_1): Reduce the number of divisions.
	(mpz_oddfac_1): Reduce memory usage.
	* mpn/minithres/gmp-mparam.h: Correct minimum for FAC_DSC_.
	* tune/tuneup.c (tune_fac_ui): Likewise.

2012-01-15  Niels Möller  <nisse@lysator.liu.se>

	* mpz/scan0.c (mpz_scan0): Use ~(mp_bitcnt_t) 0, rather than
	ULONG_MAX, when returning "infinity".
	* mpz/scan1.c (mpz_scan1): Likewise.

2012-01-12  Torbjorn Granlund  <tege@gmplib.org>

	* tests/t-popc.c: Test longer bit strings.

2012-01-12 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/divexact.c: Tight realloc, delayed if variables are reused.
	* mpz/lcm.c: Smaller temp space, avoid goto.
	* gmp-impl.h (popc_limb): avoid double & (for 8-bits limb).

2012-01-10 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/minithres/gmp-mparam.h: New FAC_ODD_ and FAC_DSC_ thresholds.
	* tune/tuneup.c (tune_fac_ui): Correct minimum for FAC_DSC_.

2012-01-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/mul_2exp.c: Rewrite.
	* mpz/tdiv_q_2exp.c: Rewrite.

2012-01-05 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gen-fac_ui.c: Remove currently unused constants; add new odd
	double factorial table.
	* mpz/fac_ui.c (RECURSIVE_PROD_THRESHOLD): Increase default.
	(mpz_oddfac_1): New function: a merge of _bc_odd and _dsc_odd.
	(mpz_prodlimbs): More in-place computations.

	* tune/tuneup.c (tune_fac_ui): min_is_always for FAC_ODD_.

2012-01-02 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tune/tuneup.c (tune_fac_ui): Compute FAC_DSC before FAC_ODD.

2011-12-31  Torbjorn Granlund  <tege@gmplib.org>

	* Makefile.am (fac_ui.h): Put file in top-level dir, not in mpz.

2011-12-31 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tune/Makefile.am (fac_ui.c): New target.
	(nodist_tuneup_SOURCES,CLEANFILES): Add fac_ui.c.
	* tune/tuneup.c (mpz_fac_ui_tune): Declare prototype.
	(fac_odd_threshold,fac_dsc_threshold): New global variables.
	(speed_mpz_fac_ui_tune,tune_fac_ui): New functions.
	(all): Call tune_fac_ui.
	* gmp-impl.h (FAC_ODD_THRESHOLD,FAC_DSC_THRESHOLD):
	New thresholds: default values, and setup for tuning.
	(FAC_DSC_THRESHOLD_LIMIT): Define (when tuning).
	* mpz/fac_ui.c (FAC_ODD_THRESHOLD,FAC_DSC_THRESHOLD):
	Default values removed.

2011-12-30  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/hamdist.c: Fix typo in a return statement.

	* mpn/generic/powm_sec.c (SQR_BASECASE_MAX): Set safely from
	SQR_TOOM2_THRESHOLD.

2011-12-17  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-perfpow.c: Decrease default # of tests.

2011-12-16  Torbjorn Granlund  <tege@gmplib.org>

	* tests/refmpn.c (AORS_1): Fix typo in variable type.

2011-12-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/sbpi1_bdiv_q.c: Delay quotient limb stores in order to
	allow quotient and dividend to completely overlap.
	* mpn/generic/sbpi1_bdiv_qr.c: Likewise.

2011-12-10 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/fac_ui.c: fac_bc_ui inlined in fac_ui.

2011-12-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/powm_sec.c: Handle fat binaries better.

	* mpz/fac_ui.c (mpz_bc_fac_1): Fix typo in allocation size.

	* mpn/x86/fat/com.c: New file.

	* mpn/x86_64/pentium4/aors_n.asm: Make it actually work for DOS64.
	* mpn/x86_64/pentium4/rsh1aors_n.asm: Conditionalise jump on DOS64
	to avoid overhead for standard ABIs.

	* mpn/x86_64/gcd_1.asm: Support DOS64.

2011-12-07  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Fix typo making HAVE_NATIVE_mpn_X fail for fat
	functions.

	* mpn/x86_64/fat/fat.c (__gmpn_cpuvec_init): Add a missing break.

2011-12-07 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gen-fac_ui.c: Generate two more tables: odd factorial, swing.

	* mpz/fac_ui.c: Rewrite.

2011-12-06  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (mpn_hgcd): Use hgcd_reduce for first
	recursive call.

2011-12-06  Torbjorn Granlund  <tege@gmplib.org>

	* tune/mod_1_1-1.c: Redefine the mpn_ functions, not __gmpn_ (for the
	benefit of fat builds).
	* tune/mod_1_1-2.c: Likewise.

2011-12-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/fat/lshiftc.c: New file.
	* mpn/x86/fat/mod_1_1.c: New file.
	* mpn/x86/fat/mod_1_2.c: New file.
	* mpn/x86/fat/mod_1_4.c: New file.

	* mpn/x86/fat/diveby3.c: Remove no longer fat function.
	* mpn/x86_64/fat/diveby3.c: Likewise.

	* mpn/x86_64/fat/gcd_1.c: Remove since always provided as asm.
	* mpn/x86_64/fat/mode1o.c: Likewise.

	* configure.in (fat_functions): Update to more relevant function set.
	Add special handling for mod_1_N_cps functions.
	* gmp-impl.h (struct cpuvec_t) : Corresponding changes.  Also add
	vrious declarations for new functions.
	* mpn/x86/x86-defs.m4 (CPUVEC_FUNCS_LIST): Corresponding changes.
	* mpn/x86_64/x86_64-defs.m4 (CPUVEC_FUNCS_LIST): Corresponding changes.
	* mpn/x86/fat/fat.c (__gmpn_cpuvec): Corresponding changes.
	* mpn/x86_64/fat/fat.c (__gmpn_cpuvec): Corresponding changes.

	* mpn/x86_64: Port most remaining x86_64 files to DOS64.

	* mpn/x86_64/coreisbr/aors_n.asm: Add forgotten DOS64_EXIT.

	* mpn/x86_64/x86_64-defs.m4 (LEA): Handle non-PIC code.
	* mpn/x86_64/darwin.m4 (LEA): Likewise.

2011-12-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fat/fat.c (MAKE_FMS): Rewrite to handle modern CPUs.
	* mpn/x86/fat/fat.c (MAKE_FMS): Likewise.

	* mpn/x86_64/darwin.m4 (PROTECT): Define to potentially useful value.

2011-12-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/invert_limb_table.asm: Use PROTECT.
	* mpn/x86_64/invert_limb.asm: Likewise.

	* mpn/x86_64/darwin.m4 (PROTECT, IFELF): New defines.
	* mpn/x86_64/dos64.m4 (PROTECT, IFELF): New defines.
	* mpn/x86_64/x86_64-defs.m4 (PROTECT, IFELF): New defines.

2011-12-01  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fat/fat.c: Copy fake cpuid code from x86/fat/fat.c.

	* mpn/x86_64 (STD64, IFSTD): New names for ELF64, IFELF (since these
	denote all standard calling conventions).

	* mpn/x86_64: Add DOS64 ABI support to more files.

	* mpn/x86_64/mod_1_1.asm: Finish DOS64 support.
	* mpn/x86_64/mod_1_2.asm: Likewise.
	* mpn/x86_64/mod_1_4.asm: Likewise.

	* configure.in: Add GMP_NONSTD_ABI also for fat builds.

	* mpn/x86_64/fat/fat_entry.asm: Rewrite to support DOS64.

	* mpn/x86_64/dos64.m4 (IFDOS, IFSTD): New defines.
	* mpn/x86_64/x86_64-defs (IFDOS, IFSTD): New defines.

	* mpn/x86_64/dive_1.asm: Add DOS64 ABI support.
	* mpn/x86_64/mode1o.asm: Likewise.

	* mpn/x86_64/mod_34lsub1.asm: Enable for DOS64.

	* mpn/x86_64/invert_limb.asm: Wrap .protected decl.

	* gmp-impl.h (DECL_divexact_1): Fix typo in return type.

	* mpn/x86_64/dos64.m4 (LEA): New define.
	(PIC): Define.

2011-11-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64: Add DOS64 ABI support to most files.

2011-11-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/mul_basecase.asm: Support ABI DOS64.
	* mpn/x86_64/sqr_basecase.asm: Support ABI DOS64.
	* mpn/x86_64/aorsmul_1.asm: Support ABI DOS64.
	* mpn/x86_64/mul_1.asm: Support ABI DOS64.

	* mpn/x86_64/x86_64-defs.m4 (DOS64_ENTRY, DOS64_EXIT): New, empty defs.

	* mpn/x86_64/dos64.m4: New file.

	* mpn/asm-defs.m4 (ABI_SUPPORT): New dummy macro.

	* configure.in (64-bit mingw/cygwin): Define HOST_DOS64,GMP_NONSTD_ABI.
	No longer clear out path_64.
	(mpn code selection loop): Handle GMP_NONSTD_ABI.

	* mpn/generic/udiv_w_sdiv.c: Use CNST_LIMB for some constants.

2011-11-25  Torbjorn Granlund  <tege@gmplib.org>

	* x86/*: Many new gmp-mparam.h file for 64-bit CPUs in 32-bit mode.

	* configure.in: Overhaul x86/x86_64 support, merging three case
	statements into one.

2011-11-24  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi (Formatted Output Strings): Clarify rules for mpf_t
	precision.

	* mpn/powerpc32/p7/gmp-mparam.h: New file.

	* tune/tuneup.c (tune_mu_div, tune_mu_bdiv): Up min_size to karatsuba's
	threshold.

2011-11-22  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/p6/aorsmul_1.asm: New file.

	* configure.in: Don't fail fat builds under 64-bit DOS.

	* mpn/powerpc64/mode64/aors_n.asm: Align loop for slightly better
	power5 performance.

2011-11-21  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-h.in (__GNU_MP_RELEASE): Renamed from typo name.

2011-11-20  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Split x86 CPUs into more subtypes for more accurate
	passing of gcc flags.

	* mpn/powerpc32/p3-p7/aors_n.asm: New file.

	* configure.in: Pass -m32 for powerpc64 with abi=32, using via _maybe
	mechanism.

	* configure.in: Support powerpc32/p3-p7 directory for affected CPUs.

2011-11-17  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.c (routine): Add mpn_tabselect.
	* tune/common.c (speed_mpn_tabselect): New function.
	* tune/speed.h (SPEED_ROUTINE_MPN_COPY_CALL): New macro, made from
	old SPEED_ROUTINE_MPN_COPY.
	(SPEED_ROUTINE_MPN_COPY): Just invoke SPEED_ROUTINE_MPN_COPY_CALL.
	(SPEED_ROUTINE_MPN_TABSELECT): New macro.

2011-11-17  Niels Möller  <nisse@lysator.liu.se>

	* tune/tuneup.c (tune_hgcd_appr): Increase stop_since_change.

2011-11-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc32/tabselect.asm: New file.

	* mpn/powerpc64/mode64/aorscnd_n.asm: New file.

2011-11-15  Niels Möller  <nisse@lysator.liu.se>

	* tune/speed.h (speed_mpn_hgcd_appr_lehmer): New prototype.
	(mpn_hgcd_lehmer_itch): Likewise.
	(mpn_hgcd_appr_lehmer): Likewise.
	(mpn_hgcd_appr_lehmer_itch): Likewise.
	(MPN_HGCD_LEHMER_ITCH): Deleted macro.

	* tune/speed.c (routine): Added mpn_hgcd_appr_lehmer.

	* tune/common.c (speed_mpn_hgcd_lehmer): Use mpn_hgcd_lehmer_itch
	rather than similarly named macro.
	(speed_mpn_hgcd_appr_lehmer): New function.

	* tune/Makefile.am (libspeed_la_SOURCES): Added
	hgcd_appr_lehmer.c.

	* tune/hgcd_appr_lehmer.c: New file.

	* tune/tuneup.c (tune_hgcd_appr): Increased min_size to 50; some
	machines got small thresholds which appear to be bogus.

2011-11-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/powm_sec.c (mpn_local_sqr): Remove forgotten TMP_* calls.
	(redcify): Likewise.
	(mpn_powm_sec): Likewise.

	* mpn/generic/powm_sec.c (mpn_powm_sec): Rework scratch usage
	(mpn_powm_sec_itch): Rewrite.

	* mpn/generic/powm_sec.c (mpn_powm_sec): Use mpn_tabselect also in
	initialisation.

	* configure.in: Amend 2011-11-03 gcc_cflags change.

	* mpn/powerpc64/tabselect.asm: New file.
	* mpn/x86_64/tabselect.asm: New file.
	* mpn/x86/tabselect.asm: New file.
	* mpn/ia64/tabselect.asm: New file.

	* mpn/asm-defs.m4 (define_mpn): Add tabselect.

	* configure.in (gmp_mpn_functions): Add tabselect.
	(HAVE_NATIVE): Add entries for addncd_n, subcnd_n, tabselect.

	* mpn/generic/powm_sec.c: Remove mpn_tabselect implementation.
	* mpn/generic/tabselect.c: New file with removed code.

2011-11-13  Torbjorn Granlund  <tege@gmplib.org>

	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add powm_sec.c.

	* mpn/generic/powm_sec.c (win_size): Use POWM_SEC_TABLE
	(POWM_SEC_TABLE): Define default.

	* tune/tuneup.c (tune_powm_sec): New function computing POWM_SEC_TABLE.
	(all): Call new function.

	* mpn/generic/powm_sec.c (win_size): Define only when
	TUNE_PROGRAM_BUILD is not set.

2011-11-13  Niels Möller  <nisse@lysator.liu.se>

	* tune/tuneup.c (tune_hgcd_appr): Use default min_size.
	(tune_hgcd_reduce): Increase max_size and step_factor, to 7000
	and 0.04, respectively.

2011-11-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/sqr_diag_addlsh1.asm: Remove.

2011-11-11  Niels Möller  <nisse@lysator.liu.se>

	* tune/hgcd_reduce_2.c: New file.
	* tune/hgcd_reduce_1.c: New file.

	* tune/tuneup.c (hgcd_appr_threshold): New threshold variable.
	(hgcd_reduce_threshold): Likewise.
	(tune_hgcd_appr): New function.
	(tune_hgcd_reduce): New function.
	(all): Call tune_hgcd_appr and tune_hgcd_reduce.

	* tune/speed.h (speed_mpn_hgcd_reduce): Declaration.
	(speed_mpn_hgcd_reduce_[12]): Likewise.
	(mpn_hgcd_reduce_[12]): Likewise.
	(SPEED_ROUTINE_MPN_HGCD_REDUCE_CALL): New macro.

	* tune/speed.c (routine): Added mpn_hgcd_reduce,
	mpn_hgcd_reduce_1, and mpn_hgcd_reduce_2.

	* tune/common.c (speed_mpn_hgcd_reduce): New function.
	(speed_mpn_hgcd_reduce_[12]): Likewise.

	* tune/Makefile.am (libspeed_la_SOURCES): Added hgcd_reduce_1.c
	hgcd_reduce_2.c.
	(TUNE_MPN_SRCS_BASIC): Added hgcd_appr.c and hgcd_reduce.c.

	* mpn/generic/hgcd_appr.c (submul, hgcd_matrix_apply): Deleted
	functions, earlier copied to hgcd_reduce.c.
	(mpn_hgcd_appr): Use hgcd_reduce.

2011-11-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/sqr_basecase.asm: New file.

	* mpn/x86_64/aorscnd_n.asm: New file.

	* tune/speed.c (routine): Add measuring of mpn_addcnd_n, mpn_subcnd_n.
	* tune/common.c (speed_mpn_addcnd_n,speed_mpn_subcnd_n): New functions.
	* tune/speed.h: Declare them.

	* tests/devel/try.c: Add tests for mpn_addcnd_n and mpn_subcnd_n.
	* tests/refmpn.c (refmpn_addcnd_n, refmpn_subcnd_n): New functions.
	* tests/tests.h: Declare them.

	* configure.in (gmp_mpn_functions): Add addcnd_n and subcnd_n.

2011-11-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/redc_1.c: Just reduce U operand using Hensel norm, but
	not fully canonically; leave add_n and conditional sub_n to caller.
	Therefore omit R argument.

	* mpn/generic/redc_1_sec.c: Remove.

	* gmp-impl.h (mpn_redc_1): Update declaration.
	(mpn_redc_1_sec): Remove declaration.

	* configure.in (gmp_mpn_functions): Remove redc_1.

	* mpn/x86_64/redc_1.asm: Adopt to new defined functionality/interface.
	* tune/speed.h (SPEED_ROUTINE_REDC_1): Likewise.

	* tests/refmpn.c (refmpn_redc_1): Likewise; also call refmpn_addmul_1
	instead of mpn_addmul_1.

	* mpn/generic/powm.c (MPN_REDC_1): New macro, use for mpn_redc_1.
	* mpn/generic/powm_sec.c (MPN_REDC_1_SEC): New macro, use for
	mpn_redc_1_sec.

2011-11-03  Torbjorn Granlund  <tege@gmplib.org>

	* dumbmp.c (mpz_sub): Abort for non-handled case.

	* mpn/powerpc64/mode64/lshiftc.asm: Move file from here...
	* mpn/powerpc64/lshiftc.asm: ...to here, with trivial modifications.

	* configure.in: Pass -m32 in more cases, using _maybe mechanism.
	Inherit default gcc_cflags in more places.

	* mpn/powerpc64/mode64/p7/gmp-mparam.h: New file.

2011-11-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_64/invert_limb.asm: Slight optimisation.

	* configure.in (s390): Set gcc_32_cflags_maybe.

	* mpn/s390_32/gmp-mparam.h: Put in proper data.
	* mpn/s390_32/esame/gmp-mparam.h: New file.

	* mpn/x86_64/bobcat/gmp-mparam.h: New file.

	* mpn/s390_32/lshift.asm: New file.
	* mpn/s390_32/rshift.asm: New file.
	* mpn/s390_32/lshiftc.asm: New file.

2011-10-31  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/sqr_diagonal.asm: Move from here...
	* mpn/powerpc64/mode32/sqr_diagonal.asm: ...to here.

	* mpn/powerpc64/mode64/sqr_diag_addlsh1.asm: New file.

	* mpn/s390_64/sqr_basecase.asm: Rewrite sqr_diag_addlsh1 code.
	* mpn/s390_32/esame/sqr_basecase.asm: Likewise.

2011-10-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_64/lshift.asm: Complete rewrite.
	* mpn/s390_64/rshift.asm: Likewise.

	* mpn/s390_64/lshiftc.asm: New file.

2011-10-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_32/esame/aors_n.asm: New file, with rewritten add/sub code.

2011-10-27  Torbjorn Granlund  <tege@gmplib.org>

	From Per Olofsson:
	* gmp-impl.h (BSWAP_LIMB): Rename variable to avoid BSWAP_LIMB_FETCH
	clash.

	* mpn/s390_32/esame/mul_basecase.asm: New file.

	* mpn/s390_32/esame/sqr_basecase.asm: New file.

	* mpn/s390_32/logops_n.asm: New file.

	* mpn/s390_64/logops_n.asm: Fix rp=up code.  Remove a leftover insn.

2011-10-26  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h (mpn_hgcd_reduce, mpn_hgcd_reduce_itch): Added
	prototypes.
	(HGCD_APPR_THRESHOLD): Set up threshold for tuning.
	(HGCD_REDUCE_THRESHOLD): Likewise.

	* configure.in (gmp_mpn_functions): Added hgcd_reduce.

	* mpn/generic/hgcd_reduce.c: New file.

2011-10-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/sqr_basecase.asm: Put intermediate result into R, don't
	allocate any stack space.

2011-10-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_64/logops_n.asm: Use nc, oc, xc when possible.

	* tune/common.c (speed_mpn_and_n, speed_mpn_andn_n, etc):
	Pass correct input args.

	* mpn/s390_64/mod_34lsub1.asm: Use llgfr for zero extensions.

	* mpn/s390_64/mul_basecase.asm: New file.

	* mpn/s390_64/sqr_basecase.asm: New file.
	* mpn/s390_64/sqr_diag_addlsh1.asm: Removed, lives on in sqr_basecase.

	* mpn/s390_64/bdiv_dbm1c.asm: Shave off 1 c/l.

	* mpn/s390_64/aorrlsh1_n.asm: New file, developed from aorslsh1_n.asm.
	* mpn/s390_64/sublsh1_n.asm: New file.
	* mpn/s390_64/aorslsh1_n.asm: Remove file.

2011-10-22  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_64/logops_n.asm: New file.

	* mpn/s390_64/aors_n.asm: New file, with rewritten add/sub code.

2011-10-20  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.h (SPEED_ROUTINE_MPN_SQR_DIAL_ADDLSH1_CALL): New macro.
	* tune/common.c (speed_mpn_sqr_diag_addlsh1): New function.
	* tune/speed.c (routine): Measure mpn_sqr_diag_addlsh1.

	* mpn/s390_64/sqr_diag_addlsh1.asm: Rewrite like s390_32/esame code.

	* mpn/s390_32/esame/sqr_diag_addlsh1.asm: Save just needed registers.

2011-10-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_32/esame/add_n.asm: Rewrite, similar to s390_64 code.
	* mpn/s390_32/esame/add_n.asm: Likewise.

2011-10-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_32/esame/aorslsh1_n.asm: New file.

2011-10-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_32/esame/sqr_diag_addlsh1.asm: New file.

	* mpn/s390_32/copyi.asm: New file.
	* mpn/s390_32/copyd.asm: New file.

	* mpn/s390_64/copyd.asm: Optimise.

	* mpn/s390_64/copyi.asm: Rewrite along the lines of glibc memcpy.

	* mpn/s390_64/aorslsh1_n.asm: New file.

	* mpn/s390_64/mod_34lsub1.asm: New file.

	* mpn/s390_64/sqr_diag_addlsh1.asm: New file.

2011-10-15  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (s390): Rewrite support to handle known CPUs.
	* config.guess: Recognise s390 CPUs.
	* config.sub: Match s390 CPUs.
	* acinclude.m4 (S390_PATTERN, S390X_PATTERN): New defines.

2011-10-14  Torbjorn Granlund  <tege@gmplib.org>

	From Per Olofsson:
	* mpn/generic/popham.c: Add __GMP_NOTHROW to make it match gmp.h.
	* mpn/generic/gcd_1.c: Separate declarations and initialisers for the
	benefit of C++.

	* configure.in: AC_DEFINE HAVE_HOST_CPU_s390_zarch.
	* longlong.h (s390): Use it.
	(s390 umul_ppmm): Fix typo in pure C variant.

2011-10-13  Torbjorn Granlund  <tege@gmplib.org>

	* longlong.h (s390): Put back an accidentally deleted #else.

	* configure.in (s390): Unset extra_functions for s390x.

2011-10-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_64/lshift.asm: Reduce register usage.
	* mpn/s390_64/rshift.asm: Likewise.

	* longlong.h (s390 umul_ppmm): With new-enough gcc, avoid asm.

	From Andreas Krebbel:
	* longlong.h (s390 umul_ppmm): Support 32-bit limbs with gcc using
	64-bit registers.
	(s390 udiv_qrnnd): Likewise.

2011-10-11  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (s390x): Pass -mzarch to gcc in 32-bit mode.

	* longlong.h (s390x): Add __CLOBBER_CC for relevant asm patterns.
	* mpn/generic/mod_1_1.c (s390x add_mssaaaa): Likewise.

	* mpn/s390_64/copyd.asm: New file.

2011-10-10  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd_appr.c: Deleted debugging code.

	* tests/mpn/t-hgcd_appr.c (main): Added -v flag.
	(hgcd_appr_valid_p): Increased margin of non-minimality for
	divide-and-conquer algorithm. Display bit counts only if
	-v is used.

	* mpn/generic/hgcd_appr.c (submul): New (static) function.
	(hgcd_matrix_apply): New function.
	(mpn_hgcd_appr_itch): Account for divide-and-conquer algorithm.
	(mpn_hgcd_appr): Implemented divide-and-conquer.

2011-10-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mod_1_1.c (add_mssaaaa): Add s390x variant.  Put arm code
	inside __GNUC__.

	* tune/time.c (STCK): Use proper memory constraint.

	From Marco Trudel:
	* tests/mpz/t-scan.c (check_ref): Fix loop end bound.

2011-10-10  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h: (HGCD_APPR_THRESHOLD): New threshold.

	* mpn/generic/hgcd_appr.c (mpn_hgcd_appr): Interface change.
	Destroy inputs, let caller make working copies if needed.
	(mpn_hgcd_appr_itch): Reduced scratch need.
	* gmp-impl.h: Updated mpn_hgcd_appr prototype.
	* tests/mpn/t-hgcd_appr.c (one_test): Make working copies for
	hgcd_appr.
	* tune/common.c (speed_mpn_hgcd_appr): Use SPEED_ROUTINE_MPN_HGCD_CALL.
	* tune/speed.h (SPEED_ROUTINE_MPN_HGCD_APPR_CALL): Deleted.

2011-10-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_64/copyi.asm: New file.
	* mpn/s390_64/lshift.asm: New file.
	* mpn/s390_64/rshift.asm: New file.

	* mpn/s390_64/add_n.asm: Rewrite using lmg/stmg.
	* mpn/s390_64/sub_n.asm: Likewise.

	* mpn/s390_64/invert_limb.asm: Save a callee-saves register less.

	* tune/time.c (getrusage_backwards_p): Properly cast printed values.

	* longlong.h (s390x): Put back UDItype casts to make gcc reloading use
	right more for constants.
	(s390x count_leading_zeros): Disable until we support z10 specifically.
	(s390x add_ssaaaa): Remove algsi/slgsi until we support z10.

2011-10-09  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd_matrix.c (mpn_hgcd_matrix_adjust): Declare
	matrix argument const.

2011-10-08  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/t-hgcd_appr.c (hgcd_appr_valid_p): Adjusted the
	allowed margin of non-minimality for hgcd_appr.

	* mpn/generic/hgcd_appr.c (mpn_hgcd_appr): Fixed handling of
	extra_bits, starting at zero, to ensure that we don't produce too
	small remainders. Added a final reduction loop when we we
	otherwise terminate with extra_bits > 0, to make the returned
	remainders closer to minimal.

2011-10-07  Torbjorn Granlund  <tege@gmplib.org>

	* longlong.h (s390): Add 32-bit zarch umul_ppmm and udiv_qrnnd.
	(s390): Overhaul 32-bit and 64-bit code.

2011-10-07  Niels Möller  <nisse@lysator.liu.se>

	* tune/speed.h (speed_mpn_hgcd_appr): New prototype.
	(SPEED_ROUTINE_MPN_HGCD_APPR_CALL): New macro.
	* tune/common.c (speed_mpn_hgcd_appr): New function.
	* tune/speed.c (routine): Added mpn_hgcd_appr.

	* tests/mpn/t-hgcd_appr.c: New file.
	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-hgcd_appr.

	* configure.in (gmp_mpn_functions): Added hgcd_step and hgcd_appr.

	* gmp-impl.h: Added prototypes for mpn_hgcd_step,
	mpn_hgcd_appr_itch and mpn_hgcd_appr.

	* mpn/generic/hgcd_appr.c: New file.

	* mpn/generic/hgcd_step.c: New file, extracted from hgcd.c.
	(mpn_hgcd_step): Renamed, from...
	* mpn/generic/hgcd.c (hgcd_step): ...old name. Renamed and moved
	to hgcd_step.c.
	(hgcd_hook): Also moved to hgcd_step.c.
	(mpn_hgcd): Updated for hgcd_step renaming.

2011-10-06  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_64/invert_limb.asm: New file.

2011-10-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/s390_64/submul_1.asm: New file.
	* mpn/s390_32/esame/submul_1.asm: New file.

	* mpn/generic/mulmid.c (mpn_mulmid): Move a TMP_DECL to block start.

	* mpn/Makefile.am (TARG_DIST): Add s390_32 and s390_64, remove s390 and
	z8000x.

	* doc/gmp.texi (Custom Allocation): Rephrase a paragraph.

	* demos/factorize.c: Run 25 Miller-Rabin tests.

	* mpz/nextprime.c: Run 25 mpz_millerrabin tests (was 10).

2011-10-03  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Support s390x.

	* longlong.h: Add support for 64-bit s390x.

	* mpn/s390_64: New directory.
	* mpn/s390_64/add_n.asm: New file.
	* mpn/s390_64/sub_n.asm: New file.
	* mpn/s390_64/mul_1.asm: New file.
	* mpn/s390_64/addmul_1.asm: New file.
	* mpn/s390_64/bdiv_dbm1c.asm: New file.
	* mpn/s390_64/gmp-mparam.h: New file, taken from x86_64.

	* mpn/s390_32: Directory renamed from mpn/s390.
	* mpn/s390_32/gmp-mparam.h: New file, taken from x86_64.
	* mpn/s390_32/esame/add_n.asm: New file.
	* mpn/s390_32/esame/sub_n.asm: New file.
	* mpn/s390_32/esame/mul_1.asm: New file.
	* mpn/s390_32/esame/addmul_1.asm: New file.
	* mpn/s390_32/esame/bdiv_dbm1c.asm: New file.

2011-10-03  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-mulmid.
	* tests/mpn/t-mulmid.c: New file.

	mulmid-related assembly for x86_64, from David Harvey:
	* mpn/asm-defs.m4 (define_mpn): Added [add,sub]_err[1,2,3]_n and
	mulmid_basecase. Also use m4_not_for_expansion on the
	corresponding OPERATION_* symbols.
	* mpn/x86_64/aors_err1_n.asm: New file.
	* mpn/x86_64/aors_err2_n.asm: Likewise.
	* mpn/x86_64/aors_err3_n.asm: Likewise.
	* mpn/x86_64/mulmid_basecase.asm: Likewise.
	* mpn/x86_64/core2/aors_err1_n.asm: Likewise.
	* mpn/x86_64/gmp-mparam.h (MULMID_TOOM42_THRESHOLD): New value.
	* mpn/x86_64/core2/gmp-mparam.h (MULMID_TOOM42_THRESHOLD): Likewise.

	Tuning of mulmid, from David Harvey:
	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Added mulmid.c
	mulmid_n.c toom42_mulmid.c.
	* tune/speed.h: Prototypes for mulmid-related functions.
	(struct speed_params): Increased max number of sources to 5.
	(SPEED_ROUTINE_MPN_BINARY_ERR_N_CALL): New macro.
	(SPEED_ROUTINE_MPN_BINARY_ERR1_N): Likewise.
	(SPEED_ROUTINE_MPN_BINARY_ERR2_N): Likewise.
	(SPEED_ROUTINE_MPN_BINARY_ERR3_N): Likewise.
	(SPEED_ROUTINE_MPN_MULMID): Likewise.
	(SPEED_ROUTINE_MPN_MULMID_N): Likewise.
	(SPEED_ROUTINE_MPN_TOOM42_MULMID): Likewise.
	* tune/common.c (mpn_[add,sub]_err[1,2,3]_n): New functions.
	(speed_mpn_mulmid_basecase): New function.
	(speed_mpn_mulmid): New function.
	(speed_mpn_mulmid_n): New function.
	(speed_mpn_toom42_mulmid): New function.
	* tune/speed.c (routine): Added mpn_[add,sub]_err[1,2,3]_n,
	mpn_mulmid_basecase, mpn_toom42_mulmid, mpn_mulmid_n, and
	mpn_mulmid.
	* tune/tuneup.c (mulmid_toom42_threshold): New threshold variable.
	(tune_mulmid): New function.
	(all): Call tune_mulmid.

	Testing of mulmid, from David Harvey:
	* tests/refmpn.c (AORS_ERR1_N): New macro.
	(refmpn_add_err1_n, refmpn_sub_err1_n): New functions.
	(AORS_ERR2_N): New macro.
	(refmpn_add_err2_n, refmpn_sub_err2_n): New functions.
	(AORS_ERR3_N): New macro.
	(refmpn_add_err3_n, refmpn_sub_err3_n): New functions.
	(refmpn_mulmid_basecase): New function.
	(refmpn_toom42_mulmid): New function, wrapper for
	refmpn_mulmid_basecase.
	(refmpn_mulmid_n): Likewise.
	(refmpn_mulmid): Likewise.
	* tests/tests.h: Prototypes for new functions.
	* tests/devel/try.c (NUM_SOURCES): Increased to 5.
	(struct try_t): Use NUM_SOURCES and NUM_DESTS constants.
	(SIZE_4, SIZE_6, SIZE_DIFF_PLUS_3, SIZE_ODD): New constants.
	(OVERLAP_NOT_DST2): New flag.
	(param_init): New mulmid-related operation types.
	(mpn_toom42_mulmid_fun): New function.
	(choice_array): Added mulmid-related entries.
	(overlap_array): Extended for larger NUM_SOURCES.
	(OVERLAP_COUNT): Handle OVERLAP_NOT_DST2.
	(call): Support mulmid-related functions.
	(pointer_setup): Handle SIZE_4, SIZE_6, and SIZE_DIFF_PLUS_3.
	(SIZE_ITERATION): Handle SIZE_ODD.
	(SIZE2_FIRST): Handle SIZE_CEIL_HALF.
	(SIZE2_LAST): Likewise.

	Implementation of mulmid, from David Harvey:
	* mpn/generic/add_err1_n.c (mpn_add_err1_n): New file and function.
	* mpn/generic/add_err2_n.c (mpn_add_err2_n): Likewise.
	* mpn/generic/add_err3_n.c (mpn_add_err3_n): Likewise.
	* mpn/generic/sub_err1_n.c (mpn_sub_err1_n): Likewise.
	* mpn/generic/sub_err2_n.c (mpn_sub_err2_n): Likewise.
	* mpn/generic/sub_err3_n.c (mpn_sub_err3_n): Likewise.
	* mpn/generic/mulmid_basecase.c (mpn_mulmid_basecase): Likewise.
	* mpn/generic/mulmid_n.c (mpn_mulmid_n): Likewise.
	* mpn/generic/toom42_mulmid.c (mpn_toom42_mulmid): Likewise.
	* configure.in (gmp_mpn_functions): Added mulmid-related
	functions.
	(GMP_MULFUNC_CHOICES): Handle aors_err1_n, aors_err2_n, and
	aors_err3_n.
	* gmp-impl.h: Added prototypes for mulmid functions.
	(MPN_TOOM42_MULMID_MINSIZE): New constant.
	(MULMID_TOOM42_THRESHOLD): New threshold.
	(mpn_toom42_mulmid_itch): New macro.

2011-10-03  Niels Möller  <nisse@lysator.liu.se>

	* tune/tune-gcd-p.c (main): Fixed broken loop conditions.

2011-09-26  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sh/sh2/submul_1.asm: Make this old submul_1 implementation
	actually compute intended function.

	* longlong.h (SH): Recognise predefs for all SH processors as defined
	by current gcc versions.

2011-09-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sh: Migrate files to '.asm'.
	* configure.in: Recognise sh3 and sh4.

2011-09-21  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (mpz_class::swap): New function.
	(mpq_class::swap): Likewise.
	(mpf_class::swap): Likewise.
	(swap): New function.
	* tests/cxx/t-assign.cc: Test the above.
	* doc/gmp.texi (swap): Document the above.

2011-08-21  Marc Glisse  <marc.glisse@inria.fr>

	* tests/cxx/t-ops2.cc: check mul-div by 2.

	* gmpxx.h (__GMPXX_CONSTANT): New macro (__builtin_constant_p).
	(__gmp_binary_lshift): Move before multiplication. Optimize x << 0.
	(__gmp_binary_rshift): Move before division. Optimize x >> 0.
	(__gmp_binary_plus): Optimize x + 0. Rewrite rational + integer.
	(__gmp_binary_minus): Optimize x - 0 and 0 - x.
	Rewrite rational - integer.
	(__gmp_binary_multiplies): Optimize x * 2^n.
	(__gmp_binary_divides): Optimize x / 2^n.
	(__gmp_binary_*): Deduplicate code for symmetric operations.

2011-08-18  Torbjorn Granlund  <tege@gmplib.org>

	* printf/doprntf.c (__gmp_doprnt_mpf): For DOPRNT_CONV_FIXED, ask for
	one more digit.

2011-08-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpf/sub.c: Fix typo in copy condition.  Delay an allocation.

2011-08-12  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (LIMBS_PER_DIGIT_IN_BASE): Fix typo.

2011-08-10  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (DIGITS_IN_BASEGT2_FROM_BITS): New.
	(DIGITS_IN_BASE_FROM_BITS): Compute more accurate result.
	(MPN_SIZEINBASE): Use DIGITS_IN_BASEGT2_FROM_BITS.

	* tests/rand/t-lc2exp.c (check_bigc): Call abort after reporting error.

2011-08-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/out_str.c (mpz_out_str): Reinsert accidentally deleted str_size
	adjustment.

	* gmp-impl.h (DIGITS_IN_BASE_FROM_BITS): Simplify, also avoiding
	overflow for base 2.

2011-08-07  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (struct bases): Add log2b and logb2 field, remove
	chars_per_limb_exactly field.
	(DIGITS_IN_BASE_FROM_BITS): New.
	(DIGITS_IN_BASE_PER_LIMB): New.
	(LIMBS_PER_DIGIT_IN_BASE): New.
	* gen-bases.c: Generate log2b and logb2 fields; do not generate
	chars_per_limb_exactly field.
	* mpf/get_str.c mpf/out_str.c mpf/set_str.c mpn/generic/get_str.c
	  mpn/generic/sizeinbase.c mpq/get_str.c mpz/inp_str.c mpz/out_str.c
	  mpz/set_str.c printf/doprntf.c tune/speed.h tune/tuneup.c:
	Use new macros.

2011-08-04  Torbjorn Granlund  <tege@gmplib.org>

	* dumbmp.c (mpz_root): Reinsert accidentally removed line.

2011-08-03  Torbjorn Granlund  <tege@gmplib.org>

	* dumbmp.c (mpz_tdiv_qr): Correctly handle dividend value being equal
	to divisor value.
	(mpz_root): Create reasonable starting approximation.
	(mpz_sqrt): New function.
	(mpz_mul_2exp): Add faster block shifting code, disabled for now.

2011-07-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/arm/invert_limb.asm: Swap around some registers to silence 'as'
	warnings.

2011-07-14  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/dcpi1_bdiv_q.c (mpn_dcpi1_bdiv_q): Get mpn_sub_1 size
	argument right.

2011-07-04  Torbjorn Granlund  <tege@gmplib.org>

	* tests/misc/t-locale.c: Disable test for mingw.

	* configure.in (x86_64 *-*-mingw*): Handle also cygwin here; clear out
	extra_functions_64.

2011-07-02  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Don't print newline in x86 cpuid function.
	Rewrite x86-64 cpu recognition asm code to work under Windoze.

2011-06-16  Torbjorn Granlund  <tege@gmplib.org>

	* acinclude.m4 (GMP_ASM_RODATA): Fix typo in 2011-04-20 change.

	* configure.in: Surround tr ranges with [] for portability.

2011-05-25  Niels Möller  <nisse@lysator.liu.se>

	* tune/tune-gcd-p.c (search): New function to search for minimum.
	(main): Replaced slow linear search.

2011-05-24  Niels Möller  <nisse@lysator.liu.se>

	* tune/Makefile.am (EXTRA_PROGRAMS): Added tune-gcd-p. Also added
	related automake variables.

	* mpn/Makefile.am (tune-gcd-p): Deleted target.

	* tune/tune-gcd-p.c: New file, extracted from mpn/generic/gcd.c
	and updated.
	* mpn/generic/gcd.c: Deleted the corresponding code, including
	main function.

2011-05-23  Niels Möller  <nisse@lysator.liu.se>

	* mpz/jacobi.c (mpz_jacobi): Simplified by swapping operands when
	needed, to get asize >= bsize. Use the reciprocity law generalized
	to work when one operand is even.

2011-05-22  Niels Möller  <nisse@lysator.liu.se>

	* mpz/jacobi.c (mpz_jacobi): Another bugfix for the asize == 1
	case. Sometimes, powers of two in b were taken into account twice.

2011-05-21  Niels Möller  <nisse@lysator.liu.se>

	* mpz/jacobi.c (mpz_jacobi): The handling of asize == 1 was
	broken. Rewrote it.

	* tests/mpz/t-jac.c (mpz_nextprime_step): Sanity check that prime
	candidate and step has no common factor.
	(check_data): Added some test cases related to the asize == 1 case
	in mpz_jacobi.

2011-05-20  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h: Jacobi-related prototypes.

	* configure.in (gmp_mpn_functions): Added jacobi_2, jacobi,
	hgcd2_jacobi, hgcd_jacobi, and removed jacobi_lehmer.

	* mpz/jacobi.c (STRIP_TWOS): Deleted macro.
	(mpz_jacobi): Partially rewritten, to no longer makes the A
	operand odd. Use new mpn_jacobi_n.

	* mpn/generic/jacobi_lehmer.c: Deleted file.

	* mpn/generic/jacobi.c (mpn_jacobi_n): New subquadratic jacobi
	implementation. Supersedes jacobi_lehmer.c.

	* mpn/generic/hgcd_jacobi.c (mpn_hgcd_jacobi): New file and
	function. A copy of mpn_hgcd, using mpn_hgcd2_jacobi, and with calls to
	mpn_jacobi_update when appropriate.

	* mpn/generic/jacobi_2.c (mpn_jacobi_2): New file. Extracted from
	jacobi_lehmer.c.
	* mpn/generic/hgcd2_jacobi.c (mpn_hgcd2_jacobi): Likewise.

	* mpn/generic/hgcd.c (hgcd_hook): Avoid using NULL.

2011-05-19  Niels Möller  <nisse@lysator.liu.se>

	* tune/hgcd_lehmer.c (__gmpn_hgcd_itch): Don't rename symbols for
	the functions moved to hgcd_matrix.c.

	* configure.in (gmp_mpn_functions): Added hgcd_matrix.

	* mpn/generic/hgcd.c (hgcd_matrix_update_1): Deleted. Several other
	helper functions moved to hgcd_matrix.c, see below.
	(hgcd_hook): New function.
	(hgcd_step): Simplified, using mpn_gcd_subdiv_step and hgcd_hook.

	* mpn/generic/hgcd_matrix.c: New file.
	(mpn_hgcd_matrix_init): Moved here, from hgcd.c.
	(mpn_hgcd_matrix_update_q): Likewise.
	(mpn_hgcd_matrix_mul_1): Likewise.
	(mpn_hgcd_matrix_mul): Likewise.
	(mpn_hgcd_matrix_adjust): Likewise.

	* mpn/generic/gcd_subdiv_step.c (mpn_gcd_subdiv_step): New
	argument s, for use by hgcd.
	* gmp-impl.h (mpn_gcd_subdiv_step): Update declaration.

	* mpn/generic/gcd.c (mpn_gcd): Pass s = 0 to mpn_gcd_subdiv_step.
	* mpn/generic/gcdext.c (mpn_gcdext): Likewise. Also added an ASSERT.
	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Likewise.
	(mpn_gcdext_hook): Added some ASSERTs.
	* mpn/generic/jacobi_lehmer.c (mpn_jacobi_lehmer): Likewise.

2011-05-17  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (mpn_gcd, mpn_gcdext): Document input requirements:
	Must have un >= vn > 0, and V normalized.
	* mpn/generic/gcdext.c (mpn_gcdext): Added ASSERT for input
	normalization.
	* mpn/generic/gcd.c (mpn_gcd): Added ASSERTs for input
	requirements.

2011-05-15  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (operator<<): Dedup.
	* tests/cxx/t-iostream.cc: Test on compound types.

	* gmpxx.h (__gmp_binary_expr): Let things happen in place: c=(a+b)/2.

2011-05-10  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__gmp_unary_expr): Let things happen in place: c=-(a+b).
	(operator>>): Clean the commenting out.
	* tests/cxx/t-iostream.cc: New file.
	* tests/cxx/Makefile.am: Added t-iostream.

2011-05-10  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (mpz_gcd): Document that gcd(0,0) = 0.
	(mpz_gcdext): Document range for cofactors.

2011-05-09  Niels Möller  <nisse@lysator.liu.se>

	* mpz/gcdext.c (mpz_gcdext): Increased sp allocation to bsize+1 limbs.
	* doc/gmp.texi (mpn_gcdext): Fixed documentation of allocation
	requirements; one extra limb is still needed for S.

2011-05-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/fat/gmp-mparam.h (BMOD_1_TO_MOD_1_THRESHOLD): Define.
	* mpn/x86_64/fat/gmp-mparam.h (BMOD_1_TO_MOD_1_THRESHOLD): Define.

2011-05-08  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h: Replace unsigned long with mp_bitcnt_t in many places.
	* doc/gmp.texi: Likewise.

2011-05-06  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (mpz_class): Make constructor from mp[qf]_class explicit.
	(mpq_class): Make constructor from mpf_class explicit.
	* doc/gmp.texi: Document the above.
	* NEWS: Likewise, and mention the EOF istream fix.
	* tests/cxx/t-mix.cc: New file.
	* tests/cxx/Makefile.am: Added t-mix.

	* tests/cxx/t-assign.cc: Minor tweak.
	* tests/cxx/t-misc.cc: Likewise.

	* gmpxx.h (__gmp_resolve_temp): Remove.
	(__gmp_set_expr): Remove some overloads.
	(mpq_class): mpz_init_set the numerator and denominator instead of
	mpq_init + mpq_set.
	(mpz_class): Dedup the string constructors.
	(mpq_class): Likewise.

	* tests/cxx/t-ops3.cc: New file.
	* tests/cxx/Makefile.am: Added t-ops3.

2011-05-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/gcdext.c: Correct sgn computation.
	Use MPZ_REALLOC.

2011-05-05  Marc Glisse  <marc.glisse@inria.fr>

	* mpn/x86_64/fat/fat.c: Update for Sandy Bridge.
	* config.guess: warning to keep it in sync with fat.c.

2011-05-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fat/fat_entry.asm (PIC_OR_DARWIN): New symbol.  Use it to
	work around Darwin problems.

2011-05-04  Niels Möller  <nisse@lysator.liu.se>

	* mpz/gcdext.c (mpz_gcdext): Reduced temporary allocations. Use
	mpz_divexact when computing the second cofactor.

2011-05-03  David Harvey  <dmharvey@cims.nyu.edu>

	* configure.in: make invert_limb_table work correctly with
	--disable-assembly (from Niels Möller)

2011-05-02  Marc Glisse  <marc.glisse@inria.fr>

	* .bootstrap: libtoolize doesn't need -c.

	* configfsf.guess: Update to version of 2011-02-02.
	* configfsf.sub: Update to version of 2011-03-23.

2011-05-02  Niels Möller  <nisse@lysator.liu.se>

	* mpz/gcdext.c (mpz_gcdext): Don't allocate extra limbs at the end
	of mpn_gcdext parameters.

	* doc/gmp.texi (mpn_gcdext): Updated doc.

2011-05-01  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/div_qr_2u_pi1.c (mpn_div_qr_2u_pi1): Fixed ASSERT.

2011-04-30  Marc Glisse  <marc.glisse@inria.fr>

	* gmp-h.in (mpz_cdiv_q_2exp): Use mp_bitcnt_t to match the definition
	and the documentation.
	(mpz_remove): Likewise.
	(mpf_eq): Likewise.

	* ltmain.sh: Remove.
	* .bootstrap: Let libtoolize generate ltmain.sh.

	* tests/cxx/t-ops2.cc: Add a couple tests.
	* tests/cxx/t-rand.cc: Likewise.

	* doc/gmp.texi (mpf_urandomb): Explicit the fact that it does not
	change the precision.

	* gmp-h.in (__GMP_EXTERN_INLINE): Recent g++ uses gnu_inline.

2011-04-28  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (x86_64): Support bobcat specifically.
	(x86): Match bobcat and bulldozer, handle like k10.

2011-04-28  David Harvey  <dmharvey@cims.nyu.edu>

	* README.HG: update autotools version numbers.

2011-04-27  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.h (speed_cyclecounter): Always use PIC variant when
	compiled with Apple's GCC.

	* mpn/x86/darwin.m4 (LEA): Complete rewrite.
	(m4append): New macro.

2011-04-26  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc32/sparc-defs.m4 (changecom): Don't redefine '!' as it
	interferes with expressions.

2011-04-20  Torbjorn Granlund  <tege@gmplib.org>

	* acinclude.m4 (GMP_ASM_RODATA): Make 'foo' larger to avoid clang
	problems.

2011-04-12  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86_64/invert_limb.asm [PIC]: Declare mpn_invert_limb_table
	as .protected.

2011-04-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/k7/invert_limb.asm: Use deflit for Darwin bug workaround.
	Undo 2011-03-28 change.

	* mpn/asm-defs.m4 (define_mpn): Use deflit.

2011-04-10  Niels Möller  <nisse@lysator.liu.se>

	* mpn/asm-defs.m4 (define_mpn): Added invert_limb_table.

	* configure.in: Add invert_limb_table to extra_functions_64 on
	x86_64.

	* mpn/x86_64/invert_limb.asm: Changed references from approx_tab
	mpn_invert_limb_table.

	* mpn/x86_64/invert_limb_table.asm (mpn_invert_limb_table): New
	file. Extracted approximation table from invert_limb.asm, renamed
	and made global.

2011-03-30  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86_64/div_qr_2u_pi1.asm: New file.

	* configure.in (gmp_mpn_functions): Add div_qr_2u_pi1.

	* gmp-impl.h (mpn_div_qr_2u_pi1): Declare.

	* mpn/generic/div_qr_2u_pi1.c (mpn_div_qr_2u_pi1): Moved to
	separate file, from...
	* mpn/generic/div_qr_2.c: ... old location.

	* mpn/generic/div_qr_2n_pi1.c: Renamed file, from...
	* mpn/generic/div_qr_2_pi1_norm.c: ...old name.
	* mpn/x86_64/div_qr_2n_pi1.asm: Renamed file, from...
	* mpn/x86_64/div_qr_2_pi1_norm.asm: ...old name.

	* gmp-impl.h (mpn_div_qr_2n_pi1): Use new name in declaration.
	* tune/speed.h (speed_mpn_div_qr_2n): Likewise.
	(speed_mpn_div_qr_2u): Likewise.

	* tune/tuneup.c (tune_div_qr_2): Use new name speed_mpn_div_qr_2n.

	* tune/speed.c (routine): Use new names mpn_div_qr_2n and
	mpn_div_qr_2u, also on the command line.

	* tune/common.c (speed_mpn_div_qr_2n): Renamed, from...
	(speed_mpn_div_qr_2_norm): ... old name.
	(speed_mpn_div_qr_2u): Renamed, from...
	(speed_mpn_div_qr_2_unnorm): ... old name.

	* mpn/generic/div_qr_2_pi1_norm.c (mpn_div_qr_2n_pi1): Renamed,
	from...
	(mpn_div_qr_2_pi1_norm): ...old name.
	* mpn/x86_64/div_qr_2_pi1_norm.asm: Likewise.

	* mpn/generic/div_qr_2.c (mpn_div_qr_2n_pi2): Renamed, from...
	(mpn_div_qr_2_pi2_norm): ... old name.
	(mpn_div_qr_2u_pi1): Renamed, from...
	(mpn_div_qr_2_pi1_unnorm): ... old name.
	(mpn_div_qr_2): Call functions using new names.

	* mpn/asm-defs.m4: Renamed div_qr_2-functions to new names.

2011-03-29  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86_64/div_qr_2_pi1_norm.asm: Updated to use a separate rp
	argument.

	* gmp-impl.h (mpn_div_qr_2_pi1_norm): Updated declaration.
	* gmp-h.in (mpn_div_qr_2): Likewise.

	* tests/mpn/t-div.c (main): Adapted to new mpn_div_qr2 interface.
	* tune/speed.h (SPEED_ROUTINE_MPN_DIV_QR_2): Likewise.

	* mpn/generic/div_qr_2.c (mpn_div_qr_2_pi2_norm): Added rp
	argument. Don't clobber the input dividend.
	(mpn_div_qr_2_pi1_unnorm): Likewise.
	(mpn_div_qr_2): Likewise.
	* mpn/generic/div_qr_2_pi1_norm.c (mpn_div_qr_2_pi1_norm): Likewise.

2011-03-29  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86/k7/invert_limb.asm: Use mov rather than push and pop.
	Earlier load of divisor from stack.

2011-03-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/k7/invert_limb.asm: Protect movzwl register parameters from
	being interpreted as m4 macro parameters.

2011-03-22  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86_64/div_qr_2_pi1_norm.asm: Copied optimized inner loop
	from divrem_2.asm.

	* mpn/x86_64/div_qr_2_pi1_norm.asm: First working, but poorly
	optimized, implementation.

	* mpn/asm-defs.m4 (define_mpn): Added div_qr_2_pi[12]_*norm.

	* mpn/generic/div_qr_2_pi1_norm.c (mpn_div_qr_2_pi1_norm): Moved
	to separate file, from...
	* mpn/generic/div_qr_2.c: ... old location.

	* gmp-impl.h (mpn_div_qr_2_pi1_norm): Declare.

	* configure.in (gmp_mpn_functions): Added div_qr_2_pi1_norm.

2011-03-22  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (powerpc): Reinsert lost AIX cpu_path 32-bit handling.
	Reinsert lost linux/bsd cpu_path handling.

	* mpn/generic/mod_1_1.c: Disable powerpc asm for _LONG_LONG_LIMB.
	* mpn/generic/div_qr_2.c: Likewise.

	* mpn/generic/div_qr_2.c: Use asm just for gcc.
	Make powerpc add_sssaaaa work for 32-bit case, and use less strict
	constraints.

2011-03-21  Niels Möller  <nisse@lysator.liu.se>

	* tune/tuneup.c (div_qr_2_pi2_threshold): New global variable.
	(tune_div_qr_2): New function.
	(all): Call tune_div_qr_2.

	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Added div_qr_2.c.

	* gmp-impl.h (DIV_QR_2_PI2_THRESHOLD): Setup for tuning.

	New 4/2 division loop, based on Torbjörn's work:
	* mpn/generic/div_qr_2.c (add_sssaaaa, add_csaac): New macros.
	(udiv_qr_4by2): New macro.
	(invert_4by2): New function.
	(mpn_div_qr_2_pi2_norm): New function.
	(DIV_QR_2_PI2_THRESHOLD): New threshold.
	(mpn_div_qr_2_pi1_norm): Renamed, from...
	(mpn_div_qr_2_norm): ... old name.
	(mpn_div_qr_2_pi1_unnorm): Renamed, from...
	(mpn_div_qr_2_unnorm): ... old name.
	(mpn_div_qr_2): Use mpn_div_qr_2_pi2_norm for large enough
	normalized divisors.

	* gmp-impl.h (udiv_qr_3by2): Avoid a copy.

2011-03-21  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (hppa): Under linux, treat 64-bit processors as if they
	were 32-bit processors.

	* mpn/generic/addcnd_n.c: New file.
	* mpn/asm-defs.m4 (define_mpn): Add addcnd_n and subcnd_n.
	* configure.in (gmp_mpn_functions): Add addcnd_n.
	* gmp-impl.h (mpn_addcnd_n): Declare.

	* mpn/generic/subcnd_n.c: Combine nails and non-nails functions.

	* gmp-impl.h (invert_pi1): Prepend _ to local variables, protect
	parameters within () where necessary.

	* mpn/asm-defs.m4 (define_mpn): Add div_qr_2.
	* configure.in (gmp_mpn_functions): Reinsert mercurial-bug-removed
	line.

2011-03-20  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (powerpc): Add cpu_path for all three ABIs.
	Rename "aix64" to "mode64" for consistency.

2011-03-16  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__gmp_binary_not_equal): Remove, use !__gmp_binary_equal.
	(__gmp_binary_less_equal): Remove, use !__gmp_binary_greater.
	(__gmp_binary_greater_equal): Remove, use !__gmp_binary_less.
	* tests/cxx/t-ops2.cc: Typo.

2011-03-20  Niels Möller  <nisse@lysator.liu.se>

	* tune/common.c (speed_mpn_div_qr_2_norm): New function.
	(speed_mpn_div_qr_2_unnorm): New function.
	* tune/speed.c (routine): Recognize above functions.
	* tune/speed.h: Declarations for above functions.
	(SPEED_ROUTINE_MPN_DIV_QR_2): New macro.

	* tests/mpn/t-div.c (main): Added tests for mpn_divrem_2 and
	mpn_div_qr_2.

	* mpn/generic/div_qr_2.c (mpn_div_qr_2): New file and function.
	Intended to eventually replace divrem_2.
	* configure.in (gmp_mpn_functions): Add div_qr_2.

2011-03-16  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__gmp_set_expr): Remove broken declarations.

2011-03-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/fac_ui.c (mpz_fac_ui): Use MPZ_REALLOC for standard, conditional
	reallocation.

2011-03-19  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/divrem_2.c (mpn_divrem_2): Fixed comment and assert
	regarding q and n overlap.

2011-03-16  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__mpz_set_ui_safe): New inline function.
	(__mpz_set_si_safe): Likewise.
	(__GMPXX_TMPZ_UI): Use the new function.
	(__GMPXX_TMPZ_SI): Likewise.
	(__GMPXX_TMPQ_UI): Likewise.
	(__GMPXX_TMPQ_SI): Likewise.
	* tests/cxx/t-ops2.cc: test converting 0 to stack mpq_t.

2011-03-15  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h (__GMPXX_TMPQ_UI): New macro.
	(__GMPXX_TMPQ_SI): New macro.
	(struct __gmp_binary_multiplies): Rewrite, using the new macros.
	(struct __gmp_binary_divides): Likewise.

	* gmpxx.h (__GMPZ_ULI_LIMBS): Rewrite.
	* tests/cxx/t-ops2.cc: test converting ULONG_MIN to stack mpq_t.

2011-03-15 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom_interpolate_16pts.c: Remove ambiguity.

2011-03-14  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_mul): Set tuning min size considering print skew.

	* doc/gmp.texi: Make reference to "Formatted I/O" chapters from type
	specific I/O sections.

	* mpn/alpha/add_n.asm: Add _nc entry point.
	* mpn/alpha/sub_n.asm: Likewise.
	* mpn/mips64/add_n.asm: Likewise.
	* mpn/mips64/sub_n.asm: Likewise.
	* mpn/sparc64/ultrasparc1234/add_n.asm: Likewise.
	* mpn/sparc64/ultrasparc1234/sub_n: Likewise.

2011-03-13  Marc Glisse  <marc.glisse@inria.fr>

	* tests/cxx/t-ops2.cc: New file.
	* tests/cxx/Makefile.am: Added t-ops2.

2011-03-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom32_mul.c (mpn_toom32_mul): Make 'hi' be limb-sized
	for better code.

	* gmp-impl.h (MPN_IORD_U): Handle x86_64 as well as x86_32.  Generate
	no code for incrementing by constant 0.

2011-03-12  Marc Glisse  <marc.glisse@inria.fr>

	* gmpxx.h: Rename __GMPXX_TMP_* to __GMPXX_TMPZ_*. Use in more places.

2011-03-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/rshift.asm: Accept/return values correctly also for
	32-bit ABI.
	* mpn/powerpc64/lshift.asm: Likewise.

	* tune/powerpc.asm: Use powerpc syntax, not power syntax.

	* tune/common.c (speed_udiv_qrnnd_preinv1, etc): Remove.
	* tune/speed.c (routine): Remove udiv_qrnnd_preinv1, etc.

2011-03-12  Marc Glisse  <marc.glisse@inria.fr>

	* tests/cxx/t-istream.cc: Restrict mpq test in t-istream -s.

	* gmpxx.h: Remove leftover #undefs.

2011-03-11  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (udiv_qrnnd_preinv1, udiv_qrnnd_preinv2,
	udiv_qrnnd_preinv2gen): Remove obsolete macros.
	(udiv_qrnnd_preinv): New name for udiv_qrnnd_preinv3.

2011-03-11 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h: Declare many mpn_{sub,add}lsh*_n_ip[12] functions/macros.
	* mpn/generic/toom_interpolate_5pts.c: Use mpn_sublsh1_n_ip1.

	* tests/devel/try.c: Tests for {add,sub}lsh*_n_ip[12].
	* tests/refmpn.c: New reference for mpn_{add,sub}lsh*_n_ip[12].
	* tests/tests.h: Declarations for reference functions above.

	* tune/common.c: New speed_mpn_{add,sub}lsh*_n_ip[12] functions.
	* tune/speed.h: Prototypes for functions above.
	* tune/speed.c: Support for mpn_{add,sub}lsh*_n_ip[12].

	* mpn/x86/k7/sublsh1_n.asm: Replaced generic sublsh1 code with faster _ip1.
	* mpn/x86/atom/sublsh1_n.asm: Changed PROLOGUE accordingly.

	* configure.in: Define HAVE_NATIVE_mpn_addlsh*_n*_ip[12].
	* mpn/asm-defs.m4: Declare mpn_addlsh*_n*_ip[12].

2011-03-10  Marc Glisse  <marc.glisse@inria.fr>

	* tests/cxx/t-istream.cc: Explicit conversion to streampos.

2011-03-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/atom/sse2/mul_basecase.asm: Suppress wind-down rp updates.

	* Move new aorrlsh_n.asm to new k8 dir.  Revert
	mpn/x86_64/aorrlsh_n.asm.
	* configure.in: Setup path for new k8 directory.

2011-03-10 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/pentium4/sse2/bdiv_dbm1c.asm: New file, was in atom.
	* mpn/x86/atom/sse2/bdiv_dbm1c.asm: Grab file above.

2011-03-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/aorrlsh_n.asm: Complete rewrite.

	* mpn/x86_64/core2/aorrlsh_n.asm: New file, grabbing another asm file.

2011-03-09  Marc Glisse  <marc.glisse@inria.fr>

	* tests/cxx/t-ostream.cc: Use bool instead of int.
	* tests/cxx/t-istream.cc: Likewise.
	* tests/cxx/t-misc.cc: Likewise.

	* cxx/ismpznw.cc: Don't clear eofbit.
	* cxx/ismpq.cc: Likewise.
	* cxx/ismpf.cc: Likewise.
	* tests/cxx/t-istream.cc: Test accordingly.

2011-03-09 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/sse2/bdiv_dbm1c.asm: New file.

2011-03-09  Marc Glisse  <marc.glisse@inria.fr>

	* doc/gmp.texi: Remove void return type from constructors. Document
	explicit constructors. Document mpf_class::mpf_class(mpf_t).

2011-03-07 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/sse2/sqr_basecase.asm: Postponed pushes. Cleaned
	outer loop exit.

2011-03-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/gcd_1.asm: Workaround Oracle assembler bug.

	* mpn/x86/atom/sse2/mul_basecase.asm: Replace addmul_1 loops.
	Tweak outer loop rp updates.

2011-03-06  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/atom/sse2/sqr_basecase.asm: New file.

2011-03-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bdiv_dbm1c.asm: Write proper feed-in code.

2011-03-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/addmul_2.asm: Rewrite for linear performance.

2011-03-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mod_1_1.c (add_mssaaaa): Canonicalise layout.  Add arm
	variant.  Enable sparc64 code and powerpc code (the latter for 32-bit
	and 64-bit).

	* mpn/generic/sqrtrem.c (mpn_dc_sqrtrem): Use mpn_addlsh1_n.

	* gmp-impl.h (mpn_addlsh_nc, mpn_rsblsh_nc): Declare.
	* mpn/asm-defs.m4: Likewise.

	* mpn/x86_64/coreisbr/aorrlsh_n.asm: Disable mpn_rsblsh_n due to
	carry-in issues.
	* mpn/x86_64/coreinhm/aorrlsh_n.asm: Likewise.
	* mpn/x86_64/coreisbr/aorrlsh2_n.asm: Likewise.

2011-03-03  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/mod_1_1.c (add_mssaaaa): For x86 and x86_64, treat m
	as in output operand only. Added sparc32 implementation. Also
	added #if:ed out attempts at sparc64 and powerpc64.

	* tune/tuneup.c (tune_mod_1): Record result of MOD_1_1P_METHOD
	measurement for use by mpn_mod_1_tune. And omit measurement if
	mpn_mod_1_1p is native assembly code.

	* mpn/generic/mod_1.c (mpn_mod_1_1p) [TUNE_PROGRAM_BUILD]: Macro
	to check mod_1_1p_method and call the right function.
	(mpn_mod_1_1p_cps) [TUNE_PROGRAM_BUILD]: Likewise.

	* gmp-impl.h (MOD_1_1P_METHOD) [TUNE_PROGRAM_BUILD]: Define macro.
	(mod_1_1p_method) [TUNE_PROGRAM_BUILD]: Declare variable.

2011-03-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/coreinhm/aorrlsh_n.asm: New file.
	* mpn/x86_64/coreisbr/aorrlsh_n.asm: New file.

2011-03-01  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86_64/mod_1_1.asm (mpn_mod_1_1p_cps): Eliminated a neg and
	two mov instructions.

	* mpn/x86/k7/mod_1_1.asm (mpn_mod_1_1p_cps): Simplified
	computation, analogous to recent x86_64/mod_1_1.asm changes.
	(mpn_mod_1_1p): Corresponding changes. Don't shift b.

	* mpn/sparc64/mod_1_4.c (mpn_mod_1s_4p_cps): Use udiv_rnnd_preinv
	rather than udiv_rnd_preinv.
	(mpn_mod_1s_4p): Likewise.

2011-03-01  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/pentium4/sse2/mul_1.asm: Swap entry insns to share more code
	between entry points.
	* mpn/x86/pentium4/sse2/addmul_1.asm: Likewise.

	* mpz/divegcd.c: Rewrite, as per Marc Glisse's suggestion.  Also fix
	problem with passing a longlong limb to a _ui function.

	* gmp-impl.h (udiv_qrnnd_preinv3): Cast truth value to mask's type.
	(udiv_rnnd_preinv): Likewise.
	* mpn/generic/mod_1_1.c (mpn_mod_1_1p): Likewise.

2011-02-28  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/mod_1_1.c (add_mssaaaa): Typo fix, define
	add_mssaaaa, not add_sssaaaa.

	* tune/tuneup.c (tune_mod_1): Measure mpn_mod_1_1_1 and
	mpn_mod_1_1_2, to set MOD_1_1P_METHOD.

	* tune/speed.c (routine): Added mpn_mod_1_1_1 and mpn_mod_1_1_2.

	* tune/speed.h: Declare speed_mpn_mod_1_1_1, speed_mpn_mod_1_1_2,
	mpn_mod_1_1p_1, mpn_mod_1_1p_2, mpn_mod_1_1p_cps_1, and
	mpn_mod_1_1p_cps_2.

	* tune/common.c (speed_mpn_mod_1_1_1): New function.
	(speed_mpn_mod_1_1_2): New function.

	* tune/Makefile.am (libspeed_la_SOURCES): Added mod_1_1-1.c
	mod_1_1-2.c.

	* tune/mod_1_1-1.c: New file.
	* tune/mod_1_1-2.c: New file.

	* mpn/generic/mod_1_1.c: Implemented an algorithm with fewer
	multiplications, configured via MOD_1_1P_METHOD.

	* mpn/x86_64/mod_1_1.asm (mpn_mod_1_1p_cps): Simplified
	computation of B2modb, use B^2 mod (normalized b).
	(mpn_mod_1_1p): Corresponding changes. Don't shift b.

	* mpn/generic/mod_1_1.c (mpn_mod_1_1p_cps): Use udiv_rnnd_preinv rather
	than udiv_rnd_preinv.
	(mpn_mod_1_1p): Likewise.
	* mpn/generic/mod_1_4.c: Analogous changes.
	* mpn/generic/mod_1_3.c: Analogous changes.
	* mpn/generic/mod_1_2.c: Analogous changes.
	* mpn/generic/mod_1.c: Analogous changes.
	* mpn/generic/pre_mod_1.c: Analogous changes.

	* gmp-impl.h (udiv_qrnnd_preinv3): Eliminated unpredictable branch
	using masking logic. Further optimization of the nl == constant 0
	case, similar to udiv_rnd_preinv.
	(udiv_rnnd_preinv): Likewise.
	(udiv_rnd_preinv): Deleted, use udiv_rnnd_preinv with nl == 0
	instead.

	* tests/mpn/t-divrem_1.c (check_data): Added testcase to exercise
	the nl == constant 0 special case in udiv_qrnnd_preinv3.

2011-02-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/rootrem.c (mpn_rootrem): Combine two similar scalar
	divisions.  Misc minor cleanup.

	* mpn/x86/atom/sse2/aorsmul_1.asm: Shorten software pipeline.

	* mpn/x86/atom/mul_basecase.asm: Remove file no longer used.

	* mpn/generic/rootrem.c (mpn_rootrem_internal): Delay O(log(U))
	allocations until they are known to be needed.

2011-02-27 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/sse2/mul_1.asm: New code.

2011-02-27  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h (udiv_rnnd_preinv): New macro.

2011-02-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/atom/sse2/mul_basecase.asm: New file.

2011-02-26 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/sse2/aorsmul_1.asm: Optimise non-loop code.

2011-02-26  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/aorsmul_1.asm: Add MULFUNC_PROLOGUE.
	* mpn/m68k/mc68020/aorsmul_1.asm: Likewise.

2011-02-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/atom/sse2/aorsmul_1.asm: New file.
	* mpn/x86/atom/aorsmul_1.asm: File removed.

2011-02-25 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/sse2/divrem_1.asm: New file (was in x86/atom).
	* mpn/x86/atom/sse2/mul_1.asm: Likewise.
	* mpn/x86/atom/sse2/popcount.asm: Likewise.
	* mpn/x86/atom/divrem_1.asm: ReMoved (in sse2/ now).
	* mpn/x86/atom/mul_1.asm: Likewise.
	* mpn/x86/atom/popcount.asm: Likewise.

	* configure.in: Set up mmx path for atom.
	* mpn/x86/atom/mmx/copyd.asm: New file (was in x86/atom).
	* mpn/x86/atom/mmx/copyi.asm: Likewise.
	* mpn/x86/atom/mmx/hamdist.asm: Likewise.
	* mpn/x86/atom/copyd.asm: ReMoved (in mmx/ now).
	* mpn/x86/atom/copyi.asm: Likewise.
	* mpn/x86/atom/hamdist.asm: Likewise.

2011-02-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/atom/sse2/mod_1_1.asm: New file.
	* mpn/x86/atom/sse2/mod_1_4.asm: New file.
	* configure.in: Set up sse2 path for atom.

	* mpn/x86/p6/sse2/mod_1_1.asm: New file.
	* mpn/x86/p6/sse2/mod_1_4.asm: Fix typo in MULFUNC_PROLOGUE.

2011-02-24  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86/k7/mod_1_1.asm (mpn_mod_1_1p): Rewrite using the same
	algorithm as the x86_64 version.

2011-02-23 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/logops_n.asm: New file (same loop as aors_n).

2011-02-23  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86_64/mod_1_1.asm (mpn_mod_1_1p): Shaved off one
	instruction and one register in the inner loop. Rearranged
	registers slightly, and no longer needs the callee-save register
	%r12.

2011-02-22  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Export SHLD_SLOW and SHRD_SLOW to config.m4, also
	fixing typo in exporting code.

	* mpn/x86_64/nano/gmp-mparam.h (SHLD_SLOW, SHRD_SLOW): Define.
	* mpn/x86_64/atom/gmp-mparam.h (SHLD_SLOW, SHRD_SLOW): Define.

2011-02-22  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86_64/mod_1_1.asm (mpn_mod_1_1p): Rewrite.

2011-02-22 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/lshiftc.asm: New file (a copy of lshift.asm with a handful of neg added).

2011-02-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/aors_n.asm: Move _nc entry to after main code.  Align loop
	and _n entry for claimed performance.  Normalise mnemonic usage.

	* mpn/x86/atom/aorrlsh1_n.asm: New file (code from rsblsh_1, slightly
	slower for addlsh_1 for large operands, but much faster for small).
	* mpn/x86/atom/addlsh1_n.asm: Remove.
	* mpn/x86/atom/rsblsh1_n.asm: Remove.

2011-02-20  Marc Glisse  <marc.glisse@inria.fr>

	* mpq/aors.c: Rewrite to remove redundant division.

2011-02-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/atom/lshift.asm: New file.
	* mpn/x86/atom/rshift.asm: Normalise mnemonic usage.

	* gmp-impl.h (mpn_divexact_by7): Relax inclusion condition.

	* mpz/divegcd.c (mpz_divexact_by5): New conditionally enabled function.
	(mpz_divexact_by3): Wrap inside appropriate conditions.
	(mpz_divexact_gcd): Rewrite.

	* mpn/x86/bdiv_dbm1c.asm: Save a jump.

2011-02-20 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/aorslshC_n.asm: New file.
	* mpn/x86/atom/sublsh2_n.asm: New file.

	* mpn/x86/atom/aors_n.asm: New code.
	* mpn/x86/atom/rshift.asm: Atom64 code adapted to 32-bit.
	* mpn/x86/atom/lshift.asm: Likewise.

2011-02-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/atom/rsh1aors_n.asm: New file.

	* mpn/x86_64/atom/lshift.asm: New file.
	* mpn/x86_64/atom/rshift.asm: New file.
	* mpn/x86_64/atom/lshiftc.asm: New file.

2011-02-17 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/aorsmul_1.asm: Small improvements for small sizes.
	* mpn/x86/atom/aorrlshC_n.asm: Tiny size improvements.

2011-02-16  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Fix k8/k10 32-bit path setup problem.

2011-02-16 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/aorsmul_1.asm: Revive an old k7/aorsmul.

2011-02-14 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (mpn_sublsh_n): Declare.
	* mpn/asm-defs.m4: Likewise.

	* mpn/x86/atom/aorrlshC_n.asm: New file (was k7).
	* mpn/x86/k7/aorrlshC_n.asm: ReMoved.
	* mpn/x86/atom/aorrlsh2_n.asm: Grab atom/aorrlshC_n.asm.
	* mpn/x86/atom/rsblsh1_n.asm: Grab atom/aorrlshC_n.asm.

2011-02-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/atom/aorrlsh2_n.asm: New file.

2011-02-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/aorrlsh_n.asm: Minor tweaks, update c/l numbers.

	* mpn/x86_64/atom/sublsh1_n.asm: New file.

	* mpn/x86_64/atom/aorrlsh1_n.asm: New file.

2011-02-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/mod_1_1.asm: Fix Darwin syntax issues.

2011-02-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/mod_1_4.asm: Tune away a cycle for 970.

2011-02-11 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/k7/addlsh1_n.asm: Faster core loop (Torbjorn's).

	* configure.in: Add HAVE_NATIVE_{add,sub,rsb}lsh{,1,2}_nc.
	* tests/tests.h: refmpn_{add,sub,rsb}lsh{,1,2}_nc prototypes.
	* tests/refmpn.c: New refmpn_{add,sub,rsb}lsh{,1,2}_nc.
	* tests/devel/try.c: Tests for mpn_{add,sub,rsb}lsh{,1,2}_nc.

	* mpn/x86/k7/aorrlshC_n.asm: New file.
	* mpn/x86/atom/aorrlsh2_n.asm: Grab k7/aorrlshC_n.asm.
	* mpn/x86/atom/rsblsh1_n.asm: Grab k7/aorrlshC_n.asm.

2011-02-06 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/k7/addlsh1_n.asm: New file.
	* mpn/x86/k7/sublsh1_n.asm: New file.
	* mpn/x86/atom/addlsh1_n.asm: Grab k7/addlsh1_n.asm.
	* mpn/x86/atom/sublsh1_n.asm: Grab k7/sublsh1_n.asm.

2011-02-05  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (mpn_addlsh1_nc, mpn_addlsh2_nc, mpn_sublsh1_nc,
	mpn_sublsh2_nc, mpn_rsblsh1_nc, mpn_rsblsh2_nc): Declare.
	* mpn/asm-defs.m4: Likewise.

	* mpn/x86_64/coreisbr/aorrlshC_n.asm: New file.
	* mpn/x86_64/coreisbr/aorrlsh1_n.asm: New file.
	* mpn/x86_64/coreisbr/aorrlsh2_n.asm: New file.

	* mpn/x86_64/coreisbr/aors_n.asm: New file, based on old
	atom/aors_n.asm.
	* mpn/x86_64/atom/aors_n.asm: Grab coreisbr/aors_n.asm.

2011-02-05 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (mpn_toom6_mul_n_itch): Handle threshold == zero.
	(mpn_toom8_mul_n_itch): Likewise.
	(MPN_TOOM6H_MIN, MPN_TOOM8H_MIN): Define.
	* tests/mpn/t-toom6h.c: No tests below MPN_TOOM6H_MIN.
	* tests/mpn/t-toom8h.c: No tests below MPN_TOOM8H_MIN.

	* mpz/lucnum_ui.c: Use mpn_addlsh2_n.

2011-02-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/atom/rsh1aors_n.asm: Add a MULFUNC_PROLOGUE.
	* mpn/x86_64/atom/dive_1.asm: Likewise.
	* mpn/x86_64/atom/popcount.asm: Likewise.
	* mpn/x86_64/core2/popcount.asm: Likewise.
	* mpn/x86_64/coreinhm/hamdist.asm: Likewise.
	* mpn/x86_64/coreinhm/popcount.asm: Likewise.
	* mpn/x86_64/nano/popcount.asm: Likewise.
	* mpn/x86_64/pentium4/popcount.asm: Likewise.

2011-02-04 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/mode1o.asm: New file, grabbing another asm file.
	* mpn/x86/atom/mul_1.asm: Claim mul_1c.

2011-02-02  Niels Möller  <nisse@lysator.liu.se>

	* tune/speed.h (SPEED_ROUTINE_MPN_HGCD_CALL): Fixed one
	speed_operand_dst call.

2011-02-01  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.h (struct speed_params): Allow for 4 dst operands.
	* tune/common.c (TOLERANCE): Increase from 0.5% to 1%.

	* tune/speed.h (SPEED_ROUTINE_MPN_HGCD_CALL): New macro, mainly based
	on old speed_mpn_hgcd, but with speed_operand_src calls (as suggested
	by Niels).
	* tune/common.c (speed_mpn_hgcd): Invoke SPEED_ROUTINE_MPN_HGCD_CALL.
	(speed_mpn_hgcd_lehmer): Likewise.

	* configure.in: Set up 32-bit x86 paths for new corei* CPU strings.

2011-01-31  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Recognise new Intel processors.

	* config.guess: Support 'coreinhm' and 'coreisbr'.
	* config.sub: Likewise.
	* configure.in: Likewise.

2011-01-30  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Support x86/geode.
	* mpn/x86/geode/gmp-mparam.h: New file.

2011-01-29 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/addlsh1_n.asm: Removed.
	* mpn/x86/atom/rsh1add_n.asm: Likewise.

2011-01-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/alpha/ev6/slot.pl: Add some missing insns.

2011-01-28 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/atom/copyd.asm: New file, grabbing another asm file.
	* mpn/x86/atom/copyi.asm: Likewise.
	* mpn/x86/atom/aors_n.asm: Likewise.
	* mpn/x86/atom/addlsh1_n.asm: Likewise.
	* mpn/x86/atom/aorsmul_1.asm: Likewise.
	* mpn/x86/atom/bdiv_q_1.asm: Likewise.
	* mpn/x86/atom/dive_1.asm: Likewise.
	* mpn/x86/atom/divrem_1.asm: Likewise.
	* mpn/x86/atom/hamdist.asm: Likewise.
	* mpn/x86/atom/logops_n.asm: Likewise.
	* mpn/x86/atom/lshift.asm: Likewise.
	* mpn/x86/atom/mod_34lsub1.asm: Likewise.
	* mpn/x86/atom/mul_1.asm: Likewise.
	* mpn/x86/atom/mul_basecase.asm: Likewise.
	* mpn/x86/atom/popcount.asm: Likewise.
	* mpn/x86/atom/rsh1add_n.asm: Likewise.
	* mpn/x86/atom/rshift.asm: Likewise.
	* mpn/x86/atom/sqr_basecase.asm: Likewise.

2011-01-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/atom/rsh1aors_n.asm: New file, grabbing another asm file.
	* mpn/x86_64/atom/popcount.asm: Likewise.
	* mpn/x86_64/atom/dive_1.asm: Likewise.
	* mpn/x86_64/nano/popcount.asm: Likewise.

2011-01-26  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/alpha/invert_limb.asm: Complete rewrite.

2011-01-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc32/invert_limb.asm: New file.

2011-01-25 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/pentium4/sse2/bdiv_q_1.asm: New file.
	* mpn/x86/k7/bdiv_q_1.asm: New file.

2011-01-24  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_mul_n, tune_sqr): Loop, re-measuring thresholds
	until no tiny ranges remain.

2011-01-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/ia64/mul_2.asm: Tweak to 1.5 c/l, less overhead.

	* mpn/ia64/addmul_2.asm: Rewrite, adding mpn_addmul_2s entry point.

2011-01-22  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/ia64/aors_n.asm: Fix some incorrect bundle types.

	* mpn/ia64/sqr_diagonal.asm: Remove.

	* mpn/ia64/sqr_diag_addlsh1.asm: New file.

	* mpn/ia64/ia64-defs.m4: Define some shorter convenience mnemonics.

	* mpn/generic/sqr_basecase.c (MPN_SQR_DIAG_ADDLSH1): New macro, using
	new function mpn_sqr_diag_addlsh1 or defining its equivalent.

	* gmp-impl.h (mpn_addmul_2s): Declare.
	(mpn_sqr_diag_addlsh1): Declare.
	* mpn/asm-defs.m4 (define_mpn): Add addmul_2s and sqr_diag_addlsh1.

	* configure.in: Add HAVE_NATIVEs for mpn_sqr_diag_addlsh1 and
	mpn_addmul_2s.
	(gmp_mpn_functions_optional): Add sqr_diag_addlsh1.

2011-01-21 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/devel/try.c: Initial support for mpn_bdiv_q_1.
	* mpn/x86/pentium/bdiv_q_1.asm: New file.
	* mpn/x86/p6/bdiv_q_1.asm: New file.

2011-01-20  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.c (run_gnuplot): Update to current gnuplot syntax.

	* mpn/powerpc64/mode64/aorsmul_1.asm: Trim away 0.5 c/l for submul_1
	for POWER5.

2011-01-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/core2/rsh1aors_n.asm: New file.

2011-01-18 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/x86/bdiv_q_1.asm: New file (same core alg. as dive_1).

2011-01-15 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/divexact.c: Avoid COPY if not needed.

2011-01-14  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (struct cpuvec_t): Add field bmod_1_to_mod_1_threshold.
	* configure.in (fat_thresholds): Add BMOD_1_TO_MOD_1_THRESHOLD.

2011-01-13 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/mul.c: Remove redundant size computation.

2011-01-08  Torbjorn Granlund  <tege@gmplib.org>

	* tests/devel/try.c (types enum): Add TYPE_MUL_5 and TYPE_MUL_6.
	(param_init): Support new types.
	(choice_array): Support testing of mpn_mul_5 and mpn_mul_6.
	(call): Support new routines.

	* tests/refmpn.c (refmpn_mul_5, refmpn_mul_6): New functions.
	* tests/tests.h (refmpn_mul_5, refmpn_mul_6): Declare.
	Remove parameter names from some other functions.

	* gmp-impl.h (mpn_mul_5, mpn_mul_6): Declare.
	* mpn/asm-defs.m4: Likewise, also declare mpn_addmul_5, mpn_addmul_6,
	mpn_addmul_7, and mpn_addmul_8.

	* configure.in (gmp_mpn_functions_optional): Add mul_5 and mul_6.

	* tune/speed.c (routine): Add measuring of mpn_mul_5 and mpn_mul_6.
	* tune/common.c (speed_mpn_mul_5, speed_mpn_mul_6): New functions.
	* tune/speed.h: Declare new functions.

2011-01-03 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpz/aors.h: Remove #ifdef BERKELEY_MP, and cleanup.
	* mpz/cmp.c: Likewise.
	* mpz/gcd.c: Likewise.
	* mpz/mul.c: Likewise.
	* mpz/powm.c: Likewise.
	* mpz/set.c: Likewise.
	* mpz/sqrtrem.c: Likewise.
	* mpz/tdiv_qr.c: Likewise.

2010-12-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/minithres/gmp-mparam.h: Update with several recent thresholds.

2010-12-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/k7/mod_1_1.asm: Canonicalise cmov forms.
	* mpn/x86/k7/mod_1_4.asm: Likewise.
	* mpn/x86/pentium4/sse2/mod_1_1.asm: Likewise.
	* mpn/x86/pentium4/sse2/mod_1_4.asm: Likewise.
	* mpn/x86_64/core2/divrem_1.asm: Likewise.
	* mpn/x86_64/divrem_1.asm: Likewise.
	* mpn/x86_64/mod_1_1.asm: Likewise.
	* mpn/x86_64/mod_1_2.asm: Likewise.
	* mpn/x86_64/mod_1_4.asm: Likewise.

	* mpn/x86/k7/gcd_1.asm: Rewrite.  Remove slow 'div' loop.  Call
	mpn_mod_1 for operands with mode than BMOD_1_TO_MOD_1_THRESHOLD limbs.
	Misc cleanups.

2010-12-18  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/gcd_1.asm: Call mpn_mod_1 for operands with mode than
	BMOD_1_TO_MOD_1_THRESHOLD limbs.

	* configure.in: Generalise code for putting THRESHOLDs in config.m4.
	Add BMOD_1_TO_MOD_1_THRESHOLD to list.

	* mpn/x86_64/core2/divrem_1.asm: Tweak slightly, correct cycle counts.

	* mpn/x86_64/addmul_2.asm: Remove constant index.
	* mpn/x86_64/lshiftc.asm: Likewise.
	* mpn/x86_64/pentium4/lshift.asm: Likewise.
	* mpn/x86_64/pentium4/lshiftc.asm: Likewise.
	* mpn/x86_64/pentium4/rshift.asm: Likewise.

2010-12-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/mod_34lsub1.asm: Complete rewrite.
	* mpn/x86_64/pentium4/mod_34lsub1.asm: New file, old
	mpn/x86_64/mod_34lsub1.asm.

2010-12-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/vmx/popcount.asm: Rewrite to use vperm count table.

2010-12-14  Torbjorn Granlund  <tege@gmplib.org>

	* mp-h.in: Remove.
	* configure.in: Remove mp-h.in from AC_OUTPUT invocation.

2010-12-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/mod.c: Rewrite.

	* mpn/x86_64/corei/popcount.asm: New file.
	* mpn/x86_64/corei/hamdist.asm: New file.

	* mpn/x86_64/k10/hamdist.asm: New file.

	* configure.in: Amend last change for lame /bin/sh.

2010-12-12  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Comment out M4=m4-not-needed.

	* mpn/x86_64/k10/popcount.asm: New file.
	* configure.in: Setup special path for k10 and later AMD CPUs.
	Remove special x86_64'k8' path, since directory is non-existent.

2010-12-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc32/ultrasparct1: New directory.
	* mpn/sparc32/ultrasparct1/add_n.asm: New file.
	* mpn/sparc32/ultrasparct1/sub_n.asm: New file.
	* mpn/sparc32/ultrasparct1/mul_1.asm: New file.
	* mpn/sparc32/ultrasparct1/addmul_1.asm: New file.
	* mpn/sparc32/ultrasparct1/submul_1.asm: New file.
	* mpn/sparc32/ultrasparct1/sqr_diagonal.asm: New file.

	* config.guess: Support Ultrasparc T2 and T3.
	* config.sub: Likewise.
	* configure.in: Likewise.

	* config.guess: Generalise BSD Sparc recognition by allowing any
	caps (needed for OpenBSD which spells things innovatively).

2010-12-01  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Match new AMD processors, allow finer distinctions
	among old ones.
	* acinclude.m4 (X86_64_PATTERN): Likewise.
	* config.sub: Likewise.
	* configure.in: Rudimentarily support new AMD processors.

	* configure.in (--enable_assembly): New option.
	(target none-*-*): Disable, give error.

2010-11-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/x86-defs.m4 (LEA): Support non-PIC code.
	* mpn/x86/darwin.m4 (LEA): Likewise.

	* tests/amd64call.asm: Rewrite for code size, and to match calls and
	returns.

	* tests/x86call.asm: Rewrite for code size, to support PIC, and to
	match calls and returns.
	* tests/x86check.c: Rewrite.

2010-11-22  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/get_str.c: Make all bases either work or return an error.
	* mpz/out_str.c: Likewise.
	* mpq/get_str.c: Likewise.
	* mpf/get_str.c: Likewise.

2010-11-14  Torbjorn Granlund  <tege@gmplib.org>

	* tests/misc/t-printf.c: Add explicit casts for type conversions.
	* mpn/generic/toom62_mul.c: Likewise.

2010-11-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/get_d.c: Misc cleanup.  Fail with a syntax error for
	non-IEEE fp formats.

	* tests/devel/try.c (malloc_region): Add explicit casts for type
	conversions.

	* acinclude.m4 (GMP_ASM_RODATA): Make test code snippet C++ compatible.
	(GMP_C_DOUBLE_FORMAT): Likewise.
	(GMP_FUNC_VSNPRINTF): Likewise.

	* config.guess (x86): Make test C snippet C++ compatible.

2010-11-12  Torbjorn Granlund  <tege@gmplib.org>

	* Makefile.am: Remove mpbsd.
	* configure.in: Remove mpbsd.
	* doc/configuration: Remove mpbsd mentions.
	* doc/gmp.texi: Remove mpbsd docs.
	* tests/Makefile.am: Remove mpbsd.
	* libmp.sym: Remove.
	* mpbsd: Remove directory and files.
	* tests/mpbsd: Remove directory and files.

2010-11-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/atom/aors_n.asm: Don't rely on ZF after 'bt' insn.
	Use 64-bit 'test' to support operands of 2^32 limbs and more.

	* rand: New directory, move rand*.c and randmt.h here.
	* rand/Makefile.am: New file.
	* Makefile.am (SUBDIRS): Add rand.
	(RANDOM_OBJECTS): New variable.
	(libgmp_la_SOURCES): Remove random objects.
	(libgmp_la_DEPENDENCIES): Add RANDOM_OBJECTS.
	* configure.in (AC_OUTPUT): Add rand/Makefile.

	* ansi2knr.1: File removed.
	* ansi2knr.c: File removed.

2010-11-10  Torbjorn Granlund  <tege@gmplib.org>

	Make it possible to compile GMP with g++:

	* gmp-impl.h: Declare __gmp_digit_value_tab here.
	* mpbsd/min.c: ...not here.
	* mpbsd/xtom.c: ...nor here.
	* mpf/set_str.c: ...nor here.
	* mpz/inp_str.c: ...nor here.
	* mpz/set_str.c: ...nor here.

	* mpn/generic/toom43_mul.c: Add casts for logical operations on enums.
	* mpn/generic/toom44_mul.c: Likewise.
	* mpn/generic/toom4_sqr.c: Likewise.
	* mpn/generic/toom52_mul.c: Likewise.
	* mpn/generic/toom53_mul.c: Likewise.
	* mpn/generic/toom62_mul.c: Likewise.

	* mpz/clrbit.c: Clean up typing using MPZ_REALLOC.
	* mpz/setbit.c: Likewise.

	* mpz/powm.c: Avoid variable name 'new'.

	* randlc2x.c: Add explicit casts for type conversions.
	* tests/misc/t-printf.c: Likewise.
	* tests/misc/t-scanf.c: Likewise.
	* tests/misc.c: Likewise.
	* tests/mpz/convert.c: Likewise.
	* tests/refmpn.c: Likewise.

	* tests/tests.h: Unconditionally use <sstream> for now.

	* tests/memory.c: Include "tests.h.

	* mp_get_fns.c: Add a __GMP_NOTHROW for coherency with prototype.
	* mp_set_fns.c: Likewise.
	* mpf/cmp.c: Likewise.
	* mpf/cmp_si.c: Likewise.
	* mpf/cmp_ui.c: Likewise.
	* mpf/fits_s.h: Likewise.
	* mpf/fits_u.h: Likewise.
	* mpf/get_dfl_prec.c: Likewise.
	* mpf/get_prc.c: Likewise.
	* mpf/get_si.c: Likewise.
	* mpf/get_ui.c: Likewise.
	* mpf/int_p.c: Likewise.
	* mpf/set_dfl_prec.c: Likewise.
	* mpf/set_prc_raw.c: Likewise.
	* mpf/size.c: Likewise.
	* mpf/swap.c: Likewise.
	* mpq/equal.c: Likewise.
	* mpq/swap.c: Likewise.
	* mpz/cmp.c: Likewise.
	* mpz/cmp_si.c: Likewise.
	* mpz/cmp_ui.c: Likewise.
	* mpz/cmpabs.c: Likewise.
	* mpz/cmpabs_ui.c: Likewise.
	* mpz/cong_2exp.c: Likewise.
	* mpz/divis_2exp.c: Likewise.
	* mpz/fits_s.h: Likewise.
	* mpz/get_si.c: Likewise.
	* mpz/hamdist.c: Likewise.
	* mpz/scan0.c: Likewise.
	* mpz/scan1.c: Likewise.
	* mpz/sizeinbase.c: Likewise.
	* mpz/swap.c: Likewise.
	* mpz/tstbit.c: Likewise.
	* tal-reent.c: Likewise.

2010-11-09  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Get rid of K&R support.
	* Makefile.am: Likewise.
	* mpn/Makefile.am: Likewise.
	* doc/configuration: Update docs wrt K&R support.
	* doc/gmp.texi: Likewise.

	* configure.in (AC_INIT): Amend bug reporting address with manual
	reference.

2010-11-06  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: If cpuid says we have 32bit-only x86 but
	configfsf.guess return x86_64, return the latter.

	* mpn/x86_64/aors_n.asm: Rewrite not to rely on ZF after 'bt' insn.

2010-10-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/trialdiv.c: Update documentation.

2010-10-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/gcd_1.asm: Use m4_lshift to avoid << operator.
	* mpn/x86_64/aorrlshC_n.asm: Likewise.
	* mpn/x86_64/pentium4/aorslshC_n.asm: Likewise.
	* mpn/x86/k7/gcd_1.asm: Likewise.

2010-08-20  Niels Möller  <nisse@lysator.liu.se>

	Suggested by Ozkan Sezer:
	* configure.in: If $M4 is already set in the environment, don't
	touch it. Fixed the case that no assembler files are used, and
	GMP_PROG_M4 is omitted.

2010-08-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/fat/fat.c: Recognise many more processors.

2010-06-30  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/divrem_2.asm: Tune.

2010-06-19  Niels Möller  <nisse@lysator.liu.se>

	* tune/speed.h (SPEED_ROUTINE_MPN_MOD_1_1): Pass normalized
	divisor to the benchmarked function.

2010-06-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/mod_1_1.asm (mpn_mod_1_1p_cps): Rewrite.
	* mpn/x86_64/mod_1_2.asm (mpn_mod_1s_2p_cps): Rewrite.
	* mpn/x86_64/mod_1_4.asm (mpn_mod_1s_4p_cps): Rewrite.

	* gmp-impl.h (udiv_rnd_preinv): Simplify.

	* mpn/x86/k7/mod_1_1.asm: New file.
	* mpn/x86/pentium4/sse2/mod_1_1.asm (mpn_mod_1_1p_cps): Rewrite.
	* mpn/x86/k7/mod_1_4.asm (mpn_mod_1s_4p_cps): Rewrite.
	* mpn/x86/pentium4/sse2/mod_1_4.asm (mpn_mod_1s_4p_cps): Rewrite.

	* mpn/generic/mod_1_1.c (mpn_mod_1_1p_cps): Store results as they are
	computed.
	* mpn/generic/mod_1_2.c (mpn_mod_1s_2p_cps): Likewise.
	* mpn/generic/mod_1_4.c (mpn_mod_1s_4p_cps): Likewise.

	* mpn/x86/k7/invert_limb.asm: Moved from mpn/x86/invert_limb.asm.

2010-06-15  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-mod_1.
	* tests/mpn/t-mod_1.c: New file.

2010-05-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mu_div_qr.c (mpn_preinv_mu_div_qr_itch): Trim out space
	for inverse, since that is passed in already.

2010-05-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mu_div_qr.c (mpn_preinv_mu_div_qr_itch): New function.
	* gmp-impl.h: Declare it.
	* tune/common.c (speed_mpn_mupi_div_qr): Use new itch function.
	* tune/speed.h (SPEED_ROUTINE_MPN_MUPI_DIV_QR): Pass parameters right
	for new itch function.

	* mpn/powerpc32/lshiftc.asm: New file.

2010-05-22  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_mod_1): Revert to version of 2010-05-06.

2010-05-17  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (ia64): Get 32-bit sizeof test right.

	* tune/tuneup.c (tune_mod_1): Undo unintensional change to tuning of
	PREINV_MOD_1_TO_MOD_1_THRESHOLD.

2010-05-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/mod_1.c: Rewrite.
	* mpn/sparc64/sparc64.h (umul_ppmm_s): New macro.
	* mpn/sparc64/mod_1_4.c: New file.

	* mpn/generic/divrem_1.c: Minor cleanup.
	* mpn/generic/mod_1.c: Likewise.
	* mpn/generic/mod_1_1.c: Likewise.
	* mpn/generic/mod_1_2.c: Likewise.
	* mpn/generic/mod_1_3.c: Likewise.
	* mpn/generic/mod_1_4.c: Likewise.

	* configure.in (ia64-hpux): Do sizeof tests for 32-bit and 64-bit ABI.

	* tune/tuneup.c (tune_mod_1): Completely finish MOD_1_N tuning before
	tuning MOD_1U_TO_MOD_1_1_THRESHOLD.

2010-05-14  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/redc_2.c: Use asm code just for GNU C.

2010-05-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64/ultrasparc1234: New directory.  Move all code that uses
	floating-point into this directory.
	* configure.in: Point to ultrasparc1234 for appropriate CPUs.

	* mpn/sparc64/ultrasparct1/add_n.asm: New file.
	* mpn/sparc64/ultrasparct1/addlsh2_n.asm: New file.
	* mpn/sparc64/ultrasparct1/addmul_1.asm: New file.
	* mpn/sparc64/ultrasparct1/lshift.asm: New file.
	* mpn/sparc64/ultrasparct1/mul_1.asm: New file.
	* mpn/sparc64/ultrasparct1/rsblsh2_n.asm: New file.
	* mpn/sparc64/ultrasparct1/rshift.asm: New file.
	* mpn/sparc64/ultrasparct1/sublsh1_n.asm: New file.
	* mpn/sparc64/ultrasparct1/sublshC_n.asm: New file.
	* mpn/sparc64/ultrasparct1/addlsh1_n.asm: New file.
	* mpn/sparc64/ultrasparct1/addlshC_n.asm: New file.
	* mpn/sparc64/ultrasparct1/lshiftc.asm: New file.
	* mpn/sparc64/ultrasparct1/rsblsh1_n.asm: New file.
	* mpn/sparc64/ultrasparct1/rsblshC_n.asm: New file.
	* mpn/sparc64/ultrasparct1/sub_n.asm: New file.
	* mpn/sparc64/ultrasparct1/sublsh2_n.asm: New file.
	* mpn/sparc64/ultrasparct1/submul_1.asm: New file.
	* mpn/sparc64/ultrasparct1/gmp-mparam.h: New file.

	* configure.in: Give ultrasparct1 and ultrasparct2 special code path.

	* mpn/x86_64/pentium4/gmp-mparam.h: Disable mpn_addlsh_n, mpn_rsblsh_n.

2010-05-12  Niels Möller  <nisse@lysator.liu.se>

	* mpz/jacobi.c (mpz_jacobi): Fixed off-by-one error in use of
	scratch space.

	* tune/common.c (speed_mpz_powm_sec): New function.
	* tune/speed.h: Declare speed_mpz_powm_sec.
	* tune/speed.c (routine): Added speed_mpz_powm_sec.

	* tune/common.c (speed_mpn_addlsh_n, speed_mpn_sublsh_n)
	(speed_mpn_rsblsh_n): New functions.
	* tune/speed.h: Declare new functions.
	* tune/speed.c (routine): Add new functions.

2010-05-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/mod_1_4.asm: Tune for more processors.

	* mpn/x86_64/pentium4/lshiftc.asm: New file.

2010-05-11  Niels Möller  <nisse@lysator.liu.se>

	* mpz/jacobi.c (mpz_jacobi): Deleted old implementation.
	Reorganized new implementation, to handle small inputs efficiently.

	* tests/mpz/t-jac.c (check_large_quotients): Reduced test sizes.
	(check_data): One more input pair related to a fixed bug.
	(main): Enable check_large_quotients.

2010-05-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/aorrlsh2_n.asm: Fix typo.

2010-05-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/aorrlshC_n.asm: New file based on aorrlsh2_n.asm.
	* mpn/x86_64/aorrlsh2_n.asm: Now just include aorrlshC_n.asm.
	* mpn/x86_64/core2/aorrlsh1_n.asm: New file, include ../aorrlshC_n.asm.
	* mpn/x86_64/core2/aorrlsh2_n.asm: Likewise.

	* mpn/x86_64/core2/sublshC_n.asm: New file based on aorslsh1_n.asm.
	* mpn/x86_64/core2/aorslsh1_n.asm: Remove.
	* mpn/x86_64/core2/sublsh1_n.asm: Just include sublshC_n.asm.
	* mpn/x86_64/core2/sublsh2_n.asm: Likewise.

2010-05-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/atom/gmp-mparam.h: Disable mpn_rsh1add_n, mpn_rsh1sub_n.

	* mpn/x86_64/pentium4/aorslshC_n.asm: New file based on aorslsh1_n.asm.
	* mpn/x86_64/pentium4/aorslsh1_n.asm: Now just include aorslshC_n.asm.
	* mpn/x86_64/pentium4/aorslsh2_n.asm: New file.

2010-05-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/sparc64: Support operands of >= 2^32 limbs.

	* mpn/sparc64/lshiftc.asm: New file.

	* mpn/ia64/divrem_2.asm: Complete rewrite.

2010-05-06  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (all): Don't call tune_divrem_2.

	* mpn/generic/divrem_2.c: Complete rewrite.

	* tune/tuneup.c (tune_mod_1): Fix typo.

2010-05-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/mod_1_1.asm (mpn_mod_1_1p): Use macro register names.
	(mpn_mod_1_1p_cps): Rewrite.

	* mpn/generic/mod_1_1.c (mpn_mod_1_1p_cps): Micro-optimise.

	* longlong.h: Undo 2009-03-01 change for powerpc64, it gives poor code.

	* mpn/x86/pentium4/sse2/mod_1_1.asm: New file.

	* mpn/powerpc64/mode64/mod_1_1.asm: New file.

	* tune/tuneup.c (tune_mod_1): Use more typical divisor, for the benefit
	of machines with early-out multipliers.

2010-05-04  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_mod_1): Fix typo.

	* mpn/generic/mod_1_1.c: Undo last change.
	* mpn/x86_64/mod_1_1.asm: Likewise.

2010-05-03  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/jacobi_lehmer.c (jacobi_hook): New function.
	(mpn_jacobi_subdiv_step): Deleted function.
	(mpn_jacobi_lehmer): Use general mpn_gcd_subdiv_step.

	* mpn/generic/gcd_subdiv_step.c (mpn_gcd_subdiv_step): Reorganized
	to use a single hook function.
	* mpn/generic/gcdext.c (mpn_gcdext): Adapted to new hook
	interface.
	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_hook): New unified hook
	function.
	* mpn/generic/gcd.c (gcd_hook): Renamed from gcd_done, and adapted
	to new hook interface.
	* gmp-impl.h (gcd_subdiv_step_hook): New typedef, now a function
	type, not a struct.
	(mpn_gcdext_hook): Declare.

2010-05-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mod_1_1.c: Avoid multiply for 2 limb feed-in.
	* mpn/generic/mod_1_2.c: Likewise.
	* mpn/generic/mod_1_3.c: Likewise.
	* mpn/generic/mod_1_4.c: Likewise.
	* mpn/x86_64/mod_1_1.asm: Likewise.
	* mpn/x86_64/mod_1_2.asm: Likewise.
	* mpn/x86_64/mod_1_4.asm: Likewise.
	* mpn/x86/k7/mod_1_4.asm: Likewise.
	* mpn/x86/pentium4/sse2/mod_1_4.asm: Likewise.
	* mpn/alpha/ev6/mod_1_4.asm: Likewise.

	* tune/tuneup.c (tune_mod_1): Measure MOD_1_1_TO_MOD_1_2_THRESHOLD and
	MOD_1_2_TO_MOD_1_4_THRESHOLD before MOD_1U_TO_MOD_1_1_THRESHOLD for
	correctness.

	* mpn/powerpc64/sqr_diagonal.asm: Complete rewrite.

	* mpn/powerpc64/mode64/mod_1_4.asm: New file.

2010-05-02  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Recognise power7.

	* configure.in: Major overhaul of powerpc support.

	* mpn/powerpc64/p6/lshift.asm: New file.
	* mpn/powerpc64/p6/lshiftc.asm: Likewise.
	* mpn/powerpc64/p6/rshift.asm: Likewise.

2010-04-30  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (powerpc64): Support CPU specific mode-less subdirs.

	* mpn/powerpc64/aix.m4 (PROLOGUE_cpu): Use "named csect" making
	requested alignment actually honoured.

2010-04-30  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/jacobi_lehmer.c (mpn_jacobi_2): Fixed handling of
	the case bl == 1. Fixed missing application of reciprocity.

2010-04-29  Niels Möller  <nisse@lysator.liu.se>

	* configure.in (gmp_mpn_functions): Deleted gcdext_subdiv_step.

	* mpn/generic/gcdext.c (mpn_gcdext): Use new generalized
	mpn_gcd_subdiv_step.

	* mpn/generic/gcdext_lehmer.c (gcdext_update): New function.
	(gcdext_done): New function.
	(gcdext_hook): New const hook struct.
	(mpn_gcdext_lehmer_n): Use new generalized mpn_gcd_subdiv_step.

	* mpn/generic/gcd.c (gcd_done): New function.
	(gcd_hook): New const hook struct.
	(mpn_gcd): Adapted to new mpn_gcd_subdiv_step interface.

	* mpn/generic/gcd_subdiv_step.c (mpn_gcd_subdiv_step): Reorganized
	function. Added hook function pointers to the argument list, so
	the same function can be used for gcd, gcdext, and jacobi.

	* gmp-impl.h (struct gcd_subdiv_step_hook): New struct.
	(mpn_gcdext_subdiv_step): Deleted prototype.
	(struct gcdext_ctx): New struct.
	(gcdext_hook): Declare const struct.
	(mpn_gcd_subdiv_step): Updated prototype.

	* mpn/generic/gcdext_subdiv_step.c: Deleted file.

2010-04-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/lshift.asm: Rewrite.
	* mpn/powerpc64/rshift.asm: Likewise.
	* mpn/powerpc64/mode64/lshiftc.asm: New file.

	* mpn/powerpc64/aix.m4: Align functions to 32-byte boundary.
	* mpn/powerpc64/darwin.m4: Likewise.
	* mpn/powerpc64/elf.m4: Likewise.

2010-04-28  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpz/t-jac.c (check_data): Added some more test cases.

	* mpn/generic/jacobi_lehmer.c (mpn_jacobi_2): Bugfix, count
	trailing zeros, not leading.

2010-04-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/p6/mul_basecase.asm: New file.

2010-04-23  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h (MPN_GCD_LEHMER_N_ITCH): Deleted.
	(mpn_gcd_lehmer_n): Deleted declaration.

	* mpn/generic/gcd.c (gcd_2): Moved from gcd_lehmer.c.
	(mpn_gcd): Inlined the code from mpn_gcd_lehmer_n. Also use
	MPN_GCD_SUBDIV_STEP_ITCH rather than MPN_GCD_LEHMER_N_ITCH.

2010-04-22  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/bdiv_dbm1c.asm: Swap multiply insns to make them
	consecutive, for the benefit of POWER6.

	* mpn/powerpc64/mode64/p6/gmp-mparam.h: New file.

2010-04-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/gcd_lehmer.c: Deleted file.

	* mpn/powerpc64/mode64/divrem_1.asm: Swap multiply insns to make them
	consecutive, for the benefit of POWER6.
	* mpn/powerpc64/mode64/dive_1.asm: Likewise.
	* mpn/powerpc64/mode64/divrem_2.asm: Likewise.
	* mpn/powerpc64/mode64/mul_1.asm: Likewise.
	* mpn/powerpc64/mode64/aorsmul_1.asm: Likewise.

	* mpn/powerpc64/mode64/aorslshC_n.asm: Swap ldx operands as a temporary
	workaround for POWER6 pipeline glitch.

2010-04-19  Niels Möller  <nisse@lysator.liu.se>

	* mpz/jacobi.c (mpz_jacobi): New implementation using
	mpn_jacobi_lehmer. Currently #if:ed out.

	* mpn/generic/jacbase.c (mpn_jacobi_base)
	[JACOBI_BASE_METHOD < 4]: Support inputs with a >= b.

	* gmp-impl.h (mpn_jacobi_lehmer): Added prototype.
	(jacobi_table): Declare.
	(mpn_jacobi_init): New inline function.
	(mpn_jacobi_finish): Likewise.
	(mpn_jacobi_update): Likewise.

	* mpn/generic/jacobi_lehmer.c (mpn_jacobi_lehmer): New file, new
	function.

	* configure.in (gmp_mpn_functions): Added jacobi_lehmer.

2010-04-14  Niels Möller  <nisse@lysator.liu.se>

	* configure.in (gmp_mpn_functions): Added
	matrix22_mul1_inverse_vector.
	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES): Added
	matrix22_mul1_inverse_vector.c.

	* gmp-impl.h (mpn_matrix22_mul1_inverse_vector): Updated for
	rename of mpn_matrix22_mul1_inverse_vector.
	* mpn/generic/gcd_lehmer.c (mpn_gcd_lehmer_n): Likewise.
	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Likewise.
	* mpn/generic/hgcd.c (hgcd_step): Likewise.

	* mpn/generic/matrix22_mul1_inverse_vector.c
	(mpn_matrix22_mul1_inverse_vector): New file, function moved and
	renamed...
	* mpn/generic/hgcd2.c (mpn_hgcd_mul_matrix1_inverse_vector):
	...from here.

2010-04-12  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpn/t-toom6h.c (SIZE_LOG): Define.
	* tests/mpn/t-toom8h.c (SIZE_LOG): Likewise.

2010-04-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/ia64/lorrshift.asm: Rewrite feed-in and wind-down code.

	* mpn/ia64/aorslsh1_n.asm: Adapt to new aorslsh1_n.
	* mpn/ia64/aorslsh1_n.asm: Likewise.

	* mpn/ia64/aors_n.asm: Complete rewrite.
	* mpn/ia64/aorslsh1_n.asm: Likewise.

	* mpn/ia64/add_n_sub_n.asm: Misc cleanups.  Add slotting comments.

	* mpn/ia64/lshiftc.asm: New file.

	* mpn/x86_64/pentium4/gmp-mparam.h: No longer disable rsh1add_n and
	rsh1sub_n; instead disable rsblsh1_n, addlsh2_n, rsblsh2_n.

	* mpn/x86/divrem_2.asm: Use "orb" instead of "or" to work around
	Solaris assembler bug.
	* mpn/x86_64/mpn/x86_64/divrem_2.asm: Likewise.

	* mpn/x86/aors_n.asm: Use operand-less shift-by-1 insn form.
	* mpn/x86/pentium/aors_n.asm: Likewise.
	* mpn/x86_64/invert_limb.asm: Likewise.

	* mpn/x86_64/pentium4/aors_n.asm: Let non-nc code fall into nc code.

	* mpn/x86_64/pentium4/rsh1aors_n.asm: New file.

2010-03-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/ia64/add_n_sub_n.asm: New file.

	* mpn/generic/toom33_mul.c: Fix mpn_add_n_sub_n usage.
	* mpn/generic/toom3_sqr.c: Likewise.
	* mpn/generic/toom63_mul.c: Likewise.

	* mpn/generic/add_n_sub_n.c: Renamed from addsub_n.c.

2010-03-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/divrem_2.asm: Use mpn_invert_limb instead of div insn.

	* mpn/ia64/aorslshC_n.asm: New file, generalised from last iteration of
	aorslsh1_n.asm.
	* mpn/ia64/aorslsh1_n.asm: Use aorslshC_n.asm.
	* mpn/ia64/aorslsh1_n.asm: New file, use aorslshC_n.asm.

2010-03-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/invert_limb.asm: Rewrite to exploit cancellation
	in the Newton iteration.

2010-03-20 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom_interpolate_8pts.c: Use mpn_sublsh2_n.

2010-03-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/aorslshC_n.asm: New file, generalised from
	last iteration of aorslsh1_n.asm.
	* mpn/powerpc64/mode64/aorslsh1_n.asm: Use aorslshC_n.asm.
	* mpn/powerpc64/mode64/aorslsh1_n.asm: New file, use aorslshC_n.asm.

2010-03-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/nano/dive_1.asm: New file.

	* mpn/x86_64/divrem_1.asm: Avoid shld since it is slow on several CPU
	types.  Unconditionally provide code for normalised and unnormalised
	divisors.  Cleanup labels.

	* mpn/x86_64/core2/divrem_1.asm: Remove special code for normalised
	divisors.  Cleanup labels.

	* mpn/generic/toom_interpolate_6pts.c: Call mpn_sublsh2_n and
	mpn_sublsh_n with correct args.

	* tests/devel/try.c: Use enum for TYPE_*.

	* tests/devel/try.c: Test mpn_sublsh2_n.
	* tests/refmpn.c (refmpn_sublsh2_n): New function.
	* tests/tests.h (refmpn_sublsh2_n): Declare.

	* mpn/powerpc64/mode64/aorslsh1_n.asm: New file, with faster
	mpn_addlsh1_n and mpn_sublsh1_n.
	* mpn/powerpc64/mode64/addlsh1_n.asm: Delete.
	* mpn/powerpc64/mode64/sublsh1_n.asm: Delete.

2010-03-18  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (*-*-aix): Define gcc_32_cflags_maybe, ar_32_flags and
	nm_32_flags.

	* mpn/x86/pentium4/sse2/addlsh1_n.asm: Tune for slightly better speed.
	Misc cleanups.  Add cycle table.

	* mpn/x86_64/copyi.asm: Update cycle table.
	* mpn/x86_64/copyd.asm: Likewise.
	* mpn/x86_64/rsh1aors_n.asm: Likewise.
	* mpn/x86_64/dive_1.asm: Likewise.

	* mpn/x86/pentium4/sse2/add_n.asm: Misc cleanups.  Add cycle table.
	* mpn/x86/pentium4/sse2/sub_n.asm: Likewise.

2010-03-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/divrem_1.asm: Use mpn_invert_limb instead of div insn.
	* mpn/x86_64/core2/divrem_1.asm: Likewise.

	* tune/speed.c (routine): Add FLAG_R_OPTIONAL for many binops.

2010-03-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/alpha/ev6/mod_1_4.asm (mpn_mod_1s_4p_cps): Rewrite.

	* mpn/ia64/aors_n.asm: Insert explicitly typed nops to trigger intended
	bundling.
	* mpn/ia64/aorslsh1_n.asm: Likewise.
	* mpn/ia64/dive_1.asm: Likewise.

2010-03-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/pentium4/sse2/submul_1.asm: Rewrite.

	* mpn/powerpc64/mode64/aorsmul_1.asm: New file, faster than old code
	for both mpn_addmul_1 and mpn_submul_1.
	* mpn/powerpc64/mode64/addmul_1.asm: Remove.
	* mpn/powerpc64/mode64/submul_1.asm: Remove.

2010-03-11  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcd_lehmer.c (gcd_2): Use sub_ddmmss.

	* mpn/generic/jacbase.c (mpn_jacobi_base): Reorganized the
	JACOBI_BASE_METHOD 4 slightly. Now requires that b > 1.

2010-03-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/divrem_1.asm: Make fraction code take documented # of
	cycles.  Annotate code for more CPUs.  Misc cleanups.
	* mpn/x86_64/core2/divrem_1.asm: Annotate code for more CPUs.

	* mpn/alpha/ev6/mod_1_4.asm: New file.

	* mpn/ia64/mod_34lsub1.asm: New file.

	* doc/gmp.texi (Language Bindings): Update Python site, add Ruby.

2010-03-10  Niels Möller  <nisse@lysator.liu.se>

	* tune/tuneup.c (tune_jacobi_base): Consider mpn_jacobi_base_4.
	* tune/speed.c (routine): Added mpn_jacobi_base_4.
	* tune/common.c (speed_mpn_jacobi_base_4): New function.
	* tune/speed.h (speed_mpn_jacobi_base_4): Declare it.
	* tune/Makefile.am (libspeed_la_SOURCES): Added jacbase4.c.
	* tune/jacbase4.c: New file.

	* mpn/generic/jacbase.c (mpn_jacobi_base): New function, for
	JACOBI_BASE_METHOD 4.

2010-03-09  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpz/t-jac.c (check_large_quotients): Also generate inputs
	with large quotients and a large gcd.

2010-03-09 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpz/t-bin.c (randomwalk): New test-generator function.

2010-03-07  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.c (routine): Force r argument for several mod_1 calls.

2010-03-06  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/divrem_1.asm: Disable SPECIAL_CODE_FOR_NORMALIZED_DIVISOR.
	Misc clean up.

	* mpn/x86_64/mod_1_1.asm: New file.
	* mpn/x86_64/mod_1_2.asm: New file.
	* mpn/x86_64/mod_1_4.asm: Update cycle counts.

	* tests/tests.h (TESTS_REPS): Fix typo.

2010-03-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/core2/divrem_1.asm: New file.

2010-02-26  Niels Möller  <nisse@lysator.liu.se>

	* tune/speed.c (routine): Added udiv_qrnnd_preinv3.

	* tune/common.c (speed_udiv_qrnnd_preinv3): New function.
	* tune/speed.h: Added prototype for it.

2010-02-26  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpz/t-jac.c (check_large_quotients): New test. Currently
	disabled, since it's quite slow.
	(mpz_nextprime_step): New function.

2010-02-26  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/pa64/aors_n.asm: Fix typo in last change.

2010-02-25  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpz/t-jac.c (ref_jacobi): New reference implementation,
	using factorization and legendre symbols computed by powm.

	* tests/devel/try.c (param_init, call): Don't pass negative values
	for the second argument to mpz_jacobi and refmpz_jacobi.

	* tests/refmpz.c (refmpz_jacobi): Require that b is odd and positive.

	* tests/devel/try.c (param_init): Support mpz_legendre.
	(choice_array): Added mpz_kronecker (apparently forgotten) and
	mpz_legendre.
	(call): Added TYPE_MPZ_LEGENDRE.
	(try_one): Added support for DATA_SRC1_ODD_PRIME.

	* tests/refmpz.c (refmpz_legendre): Rewrote using powm.

2010-02-25  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Make "corei" default for unrecognised Intel P6 CPUs.

	* tests/mpz/t-perfpow.c (check_random): Use mp_limb_t type for limb
	variables.

	* tests/mpn/t-toom6h.c (COUNT): Define.
	* tests/mpn/t-toom8h.c (COUNT): Define.

	* tests/mpn/t-div.c: Cast a switch index to placate HP's cc.
	* tests/mpn/t-bdiv.c: Likewise.

	* mpn/pa64/aors_n.asm: Fix support of the 2.0n ABI.

2010-02-24 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpz/t-bin.c (data): Replace (2k,k), tested by twos ().
	* tests/mpf/t-inp_str.c (data): Test also "+" in the exponent.

2010-02-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mod_1_3.c: Cast a switch index to placate HP's cc.

	* mpn/generic/sqrtrem.c: Use CNST_LIMB.

2010-02-20  Niels Möller  <nisse@lysator.liu.se>

	* tune/speed.h (mpn_gcd_accel): Deleted prototype.
	(mpn_hgcd_lehmer): New prototype.
	(MPN_HGCD_LEHMER_ITCH): New macro (previously in gmp-impl.h).

	* tune/Makefile.am (libspeed_la_SOURCES): Added hgcd_lehmer.c.
	* tune/hgcd_lehmer.c: New file.
	* tune/gcd_accel.c: Deleted obsolete file.

	* gmp-impl.h (MPN_HGCD_LEHMER_ITCH): Deleted macro.

	* mpn/generic/hgcd.c (mpn_hgcd_lehmer): Deleted function,
	(mpn_hgcd): Don't call mpn_hgcd_lehmer, instead use inlined loop
	around hgcd_step.
	(mpn_hgcd_itch): Substitute n for MPN_HGCD_LEHMER_ITCH (n).

2010-02-19  Niels Möller  <nisse@lysator.liu.se>

	* Makefile.am (mpn/jacobitab.h): Added the rules needed to
	generate this file.

	* gen-jacobitab.c: New file.

2010-02-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/powm.c: Honour SQR_BASECASE_THRESHOLD in innerloop
	expansions.

2010-02-16  Niels Möller  <nisse@lysator.liu.se>

	* tune/time.c (cgt_works_p): Added rudimentary sanity check for
	clock_gettime working.

2010-02-15  Niels Möller  <nisse@lysator.liu.se>

	* tune/time.c (speed_time_init): Make use of cycle counter
	configurable, via the speed_option_cycles_broken flag.
	* tune/common.c (speed_option_cycles_broken): New global variable.
	(speed_option_set): Recognize option "cycles-broken".

	* tune/time.c (cycles_works_p): Deleted hack to disable cycle
	counter on linux. Needs to be replaced by something more
	selective.

2010-02-11  Niels Möller  <nisse@lysator.liu.se>

	* tune/time.c (speed_time_init): Fix speed_time_string when using
	clock_gettime.
	(cycles_works_p): On linux, don't use the cycle counter.

	* tune/Makefile.am: Add $(TUNE_LIBS) when linking programs.

	* configure.in: Check if -lrt is needed for clock_gettime, and if
	so, add that flag to TUNE_LIBS.

2010-02-07  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_redc): Set min_size and min_is_always when
	measuring REDC_1_TO_REDC_2_THRESHOLD.
	(tune_mod_1): Set min_size for PREINV_MOD_1_TO_MOD_1_THRESHOLD.

	* mpn/x86_64/aorrlsh_n.asm (cnt): Fix a typo.
	* mpn/x86_64/lshsub_n.asm: Likewise.

2010-02-05  Torbjorn Granlund  <tege@gmplib.org>

	* Version 5.0.1 released.

	* mpn/generic/powm.c: Use rp target area for power table computation in
	order to use less scratch.

	* mpn/generic/binvert.c (mpn_binvert_itch): Enable more economical
	mpn_mulmod_bnm1_itch call.

	* mpn/generic/mu_div_qr.c: Remove always true #if.
	* mpn/generic/mu_divappr_q.c: Likewise.
	* mpn/generic/mu_bdiv_q.c: Likewise.
	* mpn/generic/mu_bdiv_qr.c: Likewise.

2010-02-01  Torbjorn Granlund  <tege@gmplib.org>

	* Makefile.am (LIBGMP_LT_*, LIBGMPXX_LT_*, LIBMP_LT_*):
	Bump version info.

	* mpn/powerpc64/mode64/gmp-mparam.h: Remove {MUL,SQR}_FFT_TABLE2.
	* mpn/x86/p6/gmp-mparam.h: Likewise.
	* mpn/x86/p6/mmx/gmp-mparam.h: Likewise.
	* mpn/generic/mul_fft.c: Don't depend on FFT_TABLE2, it was broken.

2010-01-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mul_fft.c (mpn_mul_fft_internal): Remove arguments n, m,
	k and rec; add argument sqr.  Don't call mpn_mul_fft_decompose here,
	instead do that in all callers.
	(mpn_mul_fft): Trim allocation when squaring, and use TMP_ALLOC*, not
	explicit alloc/free.
	(mpn_fft_div_2exp_modF): Avoid a scalar division.
	(mpn_fft_mul_modF_K): Replace some multiplies by K with shifting by k.
	(mpn_fft_mul_2exp_modF): Make function more symmetrical.

2010-01-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mu_div_q.c (mpn_mu_div_q_itch): Rewrite.
	* mpn/generic/mu_div_qr.c (mpn_mu_div_qr_itch): Re-enable
	better mulmod itch estimate.
	* mpn/generic/mu_divappr_q.c (mpn_mu_divappr_q_itch): Likewise.
	* mpn/generic/mu_bdiv_qr.c (mpn_mu_bdiv_qr_itch): Likewise.
	* mpn/generic/mu_bdiv_q.c (mpn_mu_bdiv_q_itch): Likewise.

2010-01-27 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/mu_div_qr.c (mpn_mu_div_qr_itch): Disabled guessed
	estimate, enabled a conservative one.
	* mpn/generic/mu_divappr_q.c (mpn_mu_divappr_q_itch): Likewise.
	* mpn/generic/mu_bdiv_qr.c (mpn_mu_bdiv_qr_itch): Likewise.
	* mpn/generic/mu_bdiv_q.c (mpn_mu_bdiv_q_itch): Likewise.

2010-01-26 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/mulmod_bnm1.c (mpn_mulmod_bnm1): Partial rewrite to
	reduce memory usage.
	* mpn/generic/sqrmod_bnm1.c (mpn_sqrmod_bnm1): Likewise.
	(mpn_sqrmod_bnm1_next_size): New function.

	* gmp-impl.h (mpn_mulmod_bnm1_itch): Accepts 3 parameters now.
	(mpn_sqrmod_bnm1_itch): New inline function.
	(mpn_sqrmod_bnm1_next_size): Declaration and mangling.
	* mpn/generic/nussbaumer_mul.c: Use the new functions.

	* mpn/generic/invertappr.c (mpn_ni_invertappr): Use new syntax for
	mpn_mulmod_bnm1_itch.
	* mpn/generic/mu_divappr_q.c (mpn_mu_divappr_q_itch): Likewise.
	* mpn/generic/mu_bdiv_qr.c (mpn_mu_bdiv_qr_itch): Likewise.
	* mpn/generic/mu_bdiv_q.c (mpn_mu_bdiv_q_itch): Likewise.
	* mpn/generic/mu_div_qr.c (mpn_mu_div_qr_itch): Likewise.
	* mpn/generic/binvert.c (mpn_binvert_itch): Likewise.
	* tune/speed.h (SPEED_ROUTINE_MPN_MULMOD_BNM1_CALL): Likewise.
	(SPEED_ROUTINE_MPN_MULMOD_BNM1_ROUNDED): Likewise.

	* tests/mpn/t-sqrmod_bnm1.c, tests/mpn/t-mulmod_bnm1.c: Test
	reduced memory usage.

2010-01-25  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (INSERT_FFTTAB): New macro, like old insertion code but
	also inserting a sentinel.
	(fftmes): Use INSERT_FFTTAB for inserting new measurements.
	Limit k range to best_k - 4 ... best_k + 4.

2010-01-23  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-h.in (__GNU_MP_VERSION_PATCHLEVEL): Bump.
	(__GMP_MP_RELEASE): New macro.

	* mpf/div.c: Rewrite to use mpn_div_q.

2010-01-21  Torbjorn Granlund  <tege@gmplib.org>

	* Add FFT_TABLE3 tables for a basic set of machines.

	* configure.in: Use -mtune=nocona for 64-bit pentium4.

	* config.guess: Recognise many more Intel processors.

	* tune/common.c: Whitespace cleanup.
	(speed_mpn_matrix22_mul): Rewrite.

2010-01-21  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/nussbaumer_mul.c (mpn_nussbaumer_mul): Take
	advantage of new mpn_mulmod_bnm1 interface, to reduce allocation.

	* tests/mpn/t-mulmod_bnm1.c (ref_mulmod_bnm1, main): Adapted to
	mpn_mulmod_bnm1 interface change.

	* mpn/generic/mulmod_bnm1.c (mpn_mulmod_bnm1): Interface change,
	in case an + bn < rn, only write an + bn output limbs. New input
	requirement, an + bn > rn/2.
	* mpn/generic/sqrmod_bnm1.c (mpn_sqrmod_bnm1): Corresponding
	changes.

2010-01-19  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (fftmes): Round up initial n according to initial k.
	Limit k to 24 in loop.  Remove an obsolete always-true condition.
	Remove a redundant trace printout.

2010-01-18  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (fftmes): New function
	(fft): Rewrite.
	(mpn_mul_fft_lcm): New function, copied from mpn/generic/mul_fft.c.
	(fftfill): New function, code taken from mul_fft.c (mpn_mul_fft).
	(cached_measure): New function.

	* gmp-impl.h (struct fft_table_nk): Moved from mul_fft.c.
	(MUL_FFT_TABLE3, SQR_FFT_TABLE3): Provide dummy versions for tuneup
	builds.
	(FFT_TABLE3_SIZE): Increase value for tuneup builds.

	* mpn/generic/mul_fft.c: Handle a new FFT threshold table type ("3").
	Misc cleanups to old table type code.

2010-01-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/darwin.m4: Fix typo in last change.

2010-01-15  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-h.in (__GMP_EXTERN_INLINE): Remove "extern" for newer Sun C.

	* gmp-impl.h (GMP_LIMB_BYTES): New define.

	* mpn/x86_64/darwin.m4 (LEA): New define.

	* mpn/x86/invert_limb.asm (approx_tab): Use DEF_OBJECT.
	Rename and globalise it to work around Mac OS bug.

	With Philip McLaughlin:
	* mpn/x86_64/gcd_1.asm (ctz_table): Don't use local prefix, but
	use DEF_OBJECT...END_OBJECT.
	Keep stack pointer at ABI mandated alignment over call.

2010-01-12  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.c (routine): Remove obsolete mpn_dc_tdiv_qr and
	mpn_dc_div_qr_n.
	* tune/common.c (speed_mpn_dc_tdiv_qr, speed_mpn_dcpi1_div_qr_n):
	Remove now unused functions.
	* tune/speed.h (SPEED_ROUTINE_MPN_DC_DIVREM_N,
	SPEED_ROUTINE_MPN_DC_DIVREM_SB, SPEED_ROUTINE_MPN_DC_TDIV_QR): Remove
	now unused macros.

	* mpn/x86_64/fat/fat_entry.asm (mpn_cpuid_available): Remove function.

	* ltmain.sh: Upgrade from 1.5.24 to 2.2.6b.
	* ylwrap: New file.
	* .bootstrap: Remove explicit versions.

	* doc/gmp.texi (Block-wise Barrett Division): New node.

	* mpn/generic/powm.c: Change some #if to plain 'if' to avoid fat build
	problems.

2010-01-11  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.h (SPEED_ROUTINE_MPN_PI1_DIV): Accept arguments for size
	restrictions.
	* tune/common.c (speed_mpn_sbpi1_div_qr, speed_mpn_dcpi1_div_qr,
	(speed_mpn_sbpi1_divappr_q, speed_mpn_dcpi1_divappr_q): Pass size
	limits for SPEED_ROUTINE_MPN_PI1_DIV.

	* tune/speed.c (routine): Allow .r argument for mpn_sbpi1_divappr_q and
	mpn_dcpi1_divappr_q.

2010-01-08  Torbjorn Granlund  <tege@gmplib.org>

	* Version 5.0.0 released.

	* mpn/generic/div_q.c: Handle mpn_*_divappr_q returning high limb
	everywhere.

2010-01-07  Torbjorn Granlund  <tege@gmplib.org>

	* Update MUL_FFT_TABLE2 and SQR_FFT_TABLE2 for many machines.

	* mpn/generic/mu_div_q.c: Account for divisor truncation error as well
	as mpn_mu_divappr_q's error.

	* mpn/generic/mu_div_q.c: Handle mpn_preinv_mu_divappr_q returning a
	high limb.

	* tests/mpn/t-bdiv.c: Move a random call for debugability.
	* tests/mpn/t-div.c: Likewise.

	* mpn/generic/mu_divappr_q.c: Rewrite quotient round-up code.

	* mpn/generic/mu_div_qr.c: Handle carry-out from a carry propagation
	subtract.
	* mpn/generic/mu_divappr_q.c: Likewise.

	* mpn/generic/mu_divappr_q.c
	(mpn_preinv_mu_divappr_q, mpn_mu_divappr_q): Declare dividend constant.
	* gmp-impl.h: Likewise.

	* perfpow.c (mpn_perfect_power_p): Call mpn_divexact instead of
	mpn_bdiv_q (with too little scratch space!).

	From Niels Möller:
	* tests/mpn/t-div.c (check_one): Get rid of the poorly managed variable
	tn.

	* mpn/minithres/gmp-mparam.h: Add all lately defined thresholds.

	* mpn/generic/div_q.c: Use SB division for small quotients as well as
	small divisors.  Fix typo in itch call.

2010-01-06  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/t-div.c (check_one): Checking based on multiplication,
	refmpn_mul, rather than refmpn_tdiv_qr.

2010-01-06 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom8h_mul.c: Avoid overflows of mp_size_t.

2010-01-06  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-h.in (__GNU_MP__): Bump.
	(__GNU_MP_VERSION,__GNU_MP_VERSION_MINOR,__GNU_MP_VERSION_PATCHLEVEL):
	Bump version info.
	* mp-h.in (__GNU_MP__): Bump.
	* Makefile.am (LIBGMP_LT_*, LIBGMPXX_LT_*, LIBMP_LT_*):
	Bump version info.

	* doc/gmp.texi: Rewrite mpn_gcdext text.  Remove some out-of-date
	text in Algorithms chapter.

	* mpn/generic/div_q.c: Properly handle np=scratch.  Fix critical typo
	in final adjustment code.  Misc cleanups.

	* mpn/generic/rootrem.c: Use mpn_div_q.
	* mpz/tdiv_q.c: Likewise.

	* tests/mpn/t-div.c: Test mpn_div_q.
	(SIZE_LOG): Up to 17.

	* mpn/generic/div_q.c: New file.
	* configure.in (gmp_mpn_functions): Add div_q.

	* mpn/generic/mu_div_q.c: Actually declare dividend constant.

2010-01-04  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (fft): Separate tuning of modf and full products.
	(struct fft_param_t): New field, mul_modf_function.
	(tune_fft_sqr): Fix typo.
	(tune_fft_mul, tune_fft_sqr): Initialise mul_modf_function field.
	* tune/common.c (speed_mpn_fft_mul, speed_mpn_fft_sqr): New functions.

	* tune/speed.h (SPEED_ROUTINE_MPN_MULMOD_BNM1_ROUNDED): Clean up.

	* mpn/generic/mul.c: Simplify rational expression.

	* gmp-impl.h: Cleanup threshold variables; remove obsolete ones and
	make all possibly needed definitions for existing ones.
	* tune/tuneup.c (tune_mul): Write fractions-compensated values to
	threshold variables.

2010-01-03 Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tune/common.c, tune/speed.c, tune/speed.h: Support measuring
	mpn_toom43_mul.

	* mpn/generic/toom_interpolate_6pts.c: Small reorganisation.

2010-01-03  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (MUL_TO_MULMOD_BNM1_FOR_2NXN_THRESHOLD): Default to
	INV_MULMOD_BNM1_THRESHOLD/2 instead.

	* gmp-impl.h (INV_APPR_THRESHOLD, INV_MULMOD_BNM1_THRESHOLD): Default
	here...
	* mpn/generic/invert.c, mpn/generic/invertappr.c: ...not here.

	* tests/mpn/t-div.c: Rewrite operand generation code.

2010-01-02  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (MUL_TO_MULMOD_BNM1_FOR_2NXN_THRESHOLD): Default to
	INV_MULMOD_BNM1_THRESHOLD.

2010-01-02  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/dcpi1_div_q.c: Handle divappr approximation problem more
	efficiently.
	* mpn/generic/mu_div_q.c: Likewise.

	* mpn/generic/invert.c: Remove duplicated code.

2010-01-01  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (MUL_TO_MULMOD_BNM1_FOR_2NXN_THRESHOLD): Default to 0.

	* mpn/generic/mu_div_qr.c: Rewrite to use mpn_mulmod_bnm1.  Clean up
	scratch usage.  Improve itch functions.
	* mpn/generic/mu_divappr_q.c: Likewise.
	* mpn/generic/mu_bdiv_qr.c: Likewise.
	* mpn/generic/mu_div_q.c: Likewise.

	* mpn/generic/dcpi1_bdiv_qr.c: Add parameter ASSERTs.
	* mpn/generic/dcpi1_bdiv_q.c: Likewise.

	* tests/mpn/t-bdiv.c: Replace with unit testing code, based on t-div.c.
	Increase COUNT to 500.

	* tests/mpn/t-div.c: Avoid generating too small test operands.
	Move SB suppression limit downwards.  Increase COUNT to 200.

2009-12-31  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/tdiv_qr.c: Handle numerator/remainder overlap in MU case.

	* tests/tests.h (TESTS_REPS): New macro.
	* tests/mpz/dive.c: Use larger operands, decrease default reps, use
	TESTS_REPS.
	* tests/mpz/convert.c: Likewise.
	* tests/mpz/t-sqrtrem.c: Likewise.
	* tests/mpz/reuse: Likewise.
	* tests/mpz/t-root.c: Likewise.
	* tests/mpz/t-tdiv.c: Likewise.
	* tests/mpz/t-gcd.c: Likewise.
	* tests/mpz/t-powm.c: Likewise.

2009-12-31  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom8_sqr.c (SQR_TOOM8_MAX): Avoid overflow.
	* mpn/generic/toom6_sqr.c (SQR_TOOM6_MAX): Likewise.

	* mpn/generic/mulmod_bnm1.c: Don't mention MISUSE any more,
	simply consider UNLIKELY any unexpected size.

2009-12-31  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (speed_mpn_sbordcpi1_div_qr): New function.
	(tune_mu_div): Use it.

2009-12-30  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_mu_bdiv, tune_dc_bdiv, tune_mu_div)
	(tune_dc_div): Clear global s.r to make speed functions do 2n/n.

	* tune/speed.c (routine): New entries for mpn_mu_div_qr and
	mpn_mupi_div_qr.  Allow .r parameter for mpn_sbpi1_div_qr,
	mpn_dcpi1_div_qr.
	* tune/speed.h (SPEED_ROUTINE_MPN_PI1_DIV, SPEED_ROUTINE_MPN_MU_DIV_QR)
	(SPEED_ROUTINE_MPN_MUPI_DIV_QR): Handle .r parameter.

	* tests/mpz/t-tdiv.c: Increase operands size again.

	* mpn/generic/tdiv_qr.c: Attempt to choose between DC and MU cleverer.

	* mpn/generic/tdiv_qr.c: Don't overwrite rp with unnecessary temporary
	alloc.

2009-12-29  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_mu_div): Tune MUPI_DIV_QR_THRESHOLD.
	* tune/speed.h (struct speed_params): Allow 3 source operands.
	(SPEED_ROUTINE_MPN_MUPI_DIV_QR): New macro.
	* tune/common.c (speed_mpn_mupi_div_qr): New function.

	* mpn/generic/tdiv_qr.c: Call mpn_mu_div_qr.

	* tests/mpz/t-tdiv.c: Use larger test operands.

	* mpn/generic/mu_div_qr.c (mpn_mu_div_qr2): Remove code for dn==1.

	* mpz/mul.c: Call mpn_sqr directly.  Use PTR,SIZ,ALLOC.

	* tune/tuneup.c (tune_mu_div): Set min_size to 6, DC functions require
	this.

	* tests/mpn/t-div.c: Call mu_div functions with operands that generate
	a high quotient limb.

	* mpn/generic/mu_div_qr.c: Rewrite to return a high quotient limb,
	to let dividend argument be constant, and as a general cleanup.
	* mpn/generic/mu_divappr_q.c: Likewise.
	* mpn/generic/mu_div_q.c: Likewise.
	* gmp-impl.h: Update declarations of changed functions.

	* mpn/generic/invertappr.c (mpn_invertappr): Allocate scratch space
	when caller passed NULL.

2009-12-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom_couple_handling.c: Prefix name with mpn_.
	* gmp-impl.h: Likewise.
	* mpn/generic/toom63_mul.c: Likewise.
	* mpn/generic/toom6_sqr.c: Likewise.
	* mpn/generic/toom6h_mul.c: Likewise.
	* mpn/generic/toom8_sqr.c: Likewise.
	* mpn/generic/toom8h_mul.c: Likewise.

	* configure.in (gmp_mpn_functions_optional) Move "com" from here...
	(gmp_mpn_functions): ...to here.
	* mpn/generic/com.c: New file.
	* (mpn_com): New name for mpn_com_n.  Make public.
	* (mpn_neg): Analogous changes.

	* tune/tuneup.c (tune_mu_div, tune_mu_bdiv): Set step_factor.

	* tune/common.c, tune/speed.c, tune/speed.h: Support measuring
	mpn_lshiftc.

	* tests/devel/try.c: Test mpn_lshiftc.
	* tests/refmpn.c (refmpn_com): New function.
	(refmpn_lshiftc): Likewise.

	* configure.in (gmp_mpn_functions_optional) Move lshiftc from here...
	(gmp_mpn_functions): ...to here.
	* mpn/generic/lshiftc.c: New file.
	* mpn/x86_64/lshiftc.asm: New file.
	* mpn/x86_64/core2/lshiftc.asm: New file.
	* mpn/generic/mul_fft.c (mpn_lshiftc): Remove.

	* mpn/x86_64/core2/lshift.asm: Tweak for better Core iN performance.
	* mpn/x86_64/core2/rshift.asm: Likewise.

2009-12-27  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/mul.c: Use toom6h and toom8h for almost balanced.

	* mpn/generic/mullo_n.c (mpn_dc_mullo_n): New ratio, to be used in
	Toom-8 range.

2009-12-27  Torbjorn Granlund  <tege@gmplib.org>

	* (mpn_sqr): New name for mpn_sqr_n.  Many files affected.

	* tune/tuneup.c (tune_mullo): Up step_factor for MULLO_MUL_N_THRESHOLD.
	(tune_invertappr, tune_invert, tune_binvert): Let max_size default.

	* tune/tuneup.c (tune_mu_div, tune_mu_bdiv) New functions.
	* tune/speed.h (SPEED_ROUTINE_MPN_MU_DIV_Q): New macro.
	(SPEED_ROUTINE_MPN_MU_DIV_QR): Likewise.
	(SPEED_ROUTINE_MPN_MU_BDIV_Q): Likewise.
	(SPEED_ROUTINE_MPN_MU_BDIV_QR): Likewise.
	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add bdiv_q.c and bdiv_qr.c.
	* tune/common.c (speed_mpn_mu_div_qr): New function.
	(speed_mpn_mu_divappr_q): Likewise.
	(speed_mpn_mu_div_q): Likewise.
	(speed_mpn_mu_bdiv_q): Likewise.
	(speed_mpn_mu_bdiv_qr): Likewise.

	* mpn/*/gmp-mparam.h: Fix incorrect MOD_1U_TO_MOD_1_1_THRESHOLD 0
	values.

	* gmp-impl.h (MODEXACT_1_ODD_THRESHOLD): Remove.
	(BMOD_1_TO_MOD_1_THRESHOLD): New parameter, with the reverse meaning of
	MODEXACT_1_ODD_THRESHOLD.
	(MPN_MOD_OR_MODEXACT_1_ODD): Use BMOD_1_TO_MOD_1_THRESHOLD.
	* mpn/generic/divis.c, mpz/{cong.c,cong_ui.c,divis_ui.c}: Likewise.
	* tune/tuneup.c (tune_modexact_1_odd): Tune BMOD_1_TO_MOD_1_THRESHOLD;
	Do not assume native mpn_modexact_1_odd is faster than mpn_mod_1.
	(tuned_speed_mpn_mod_1): Remove variable.
	(tune_mod_1): Fix thinkos.  Suppress printing of "always" etc.
	(all): Measure for divrem_1, mod_1, divexact_1, etc first, since Toom
	depends on some of them.

	* mpn/generic/toom22_mul.c (TOOM22_MUL_REC): New name for
	TOOM22_MUL_MN_REC.

2009-12-26  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/t-toom32.c (MIN_AN, MIN_BN, MAX_BN): Relax
	requirements a bit.

	* mpn/generic/toom32_mul.c (mpn_toom32_mul): Relax requirement on
	input sizes, to support s+t>=n (used to be s+t>=n+2). Keep high
	limbs of the evaluated values in scalar variables.

	* mpn/generic/sbpi1_divappr_q.c (mpn_sbpi1_divappr_q): Remove
	unused variables.

	* mpn/generic/toom32_mul.c (mpn_toom32_mul): Fixed left-over use
	of mpn_addsub_n which should be mpn_add_n_sub_n.

2009-12-26  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add new toom files (spotted by Torbjorn).

	* gmp-impl.h (mpn_toom6_sqr_itch): Rename to mpn_toom6_mul_n_itch and redefine.
	(mpn_toom8_sqr_itch): Rename to mpn_toom8_mul_n_itch and redefine.
	* mpn/generic/mul_n.c: Use renamed _itch macros.

2009-12-25  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/t-toom32.c (MIN_AN, MIN_BN, MAX_BN): Tightened requirements.
	* gmp-impl.h (mpn_toom32_mul_itch): Updated. Less scratch needed
	by toom32 itself, and also the pointwise multiplications are
	currently mpn_mul_n with no supplied scratch.
	* mpn/generic/toom32_mul.c (mpn_toom32_mul): Reorganized
	interpolation to use less scratch space. No longer supports the
	most extreme size ratios.

2009-12-25  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_preinv_mod_1): Purge.
	(tune_mod_1): Use speed_mpn_mod_1_tune for
	PREINV_MOD_1_TO_MOD_1_THRESHOLD

	* mpn/generic/dcpi1_divappr_q.c: Handle 2n/n properly.  Don't use full
	precision in mpn_sbpi1_divappr_q call.  Misc cleanup.

	* tune/tuneup.c (tune_mod_1): Add a check_size for
	PREINV_MOD_1_TO_MOD_1_THRESHOLD.

2009-12-24  Torbjorn Granlund  <tege@gmplib.org>

	* tune/mod_1_div.c (MOD_1N_TO_MOD_1_1_THRESHOLD,
	(MOD_1U_TO_MOD_1_1_THRESHOLD): Set.
	* tune/mod_1_inv.c (MOD_1N_TO_MOD_1_1_THRESHOLD,
	(MOD_1U_TO_MOD_1_1_THRESHOLD): Set.

	* gmp-impl.h (USE_PREINV_MOD_1): Remove.
	(MPN_MOD_OR_PREINV_MOD_1): Define to choose functions dynamically in
	terms of PREINV_MOD_1_TO_MOD_1_THRESHOLD (used to choose statically
	using USE_PREINV_MOD_1).
	* mpn/generic/perfsqr.c (PERFSQR_MOD_PP): Corresponding updates.

	* tune/tuneup.c (tune_mod_1): Rewrite.
	* gmp-impl.h (MOD_1N_TO_MOD_1_1_THRESHOLD): New.
	(MOD_1U_TO_MOD_1_1_THRESHOLD): New name for MOD_1_1_THRESHOLD.
	(MOD_1_1_TO_MOD_1_2_THRESHOLD): Mew name for MOD_1_2_THRESHOLD.
	(MOD_1_2_TO_MOD_1_4_THRESHOLD): New name for MOD_1_4_THRESHOLD.
	* mpn/generic/mod_1.c: Corresponding updates.

2009-12-24  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/mul_n.c: Use also toom6h and toom8h.
	* mpn/generic/sqr_n.c: Use also toom6 and toom8.
	* gmp-impl.h: Initial support for tuning of Toom-6half and Toom-8half.
	* tune/tuneup.c: Tune Toom-6half and Toom-8half thresholds.

2009-12-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mod_1_4.c: Get ASSERT right.
	* mpn/generic/mod_1_3.c: Likewise.
	* mpn/generic/mod_1_2.c: Likewise.

	* mpn/generic/powm_sec.c: Use SQR_TOOM2_THRESHOLD as limit for a native
	mpn_sqr_basecase, not TUNE_SQR_TOOM2_MAX.

2009-12-23  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tune/common.c, tune/speed.c, tune/speed.h: Support for measuring
	mpn_toom8h_mul and mpn_toom8_sqr speed.

	* mpn/generic/toom_eval_pm2exp.c: Fix ASSERTs.

	* mpn/generic/toom8h_mul.c: New file.
	* mpn/generic/toom8_sqr.c: New file.
	* mpn/generic/toom_interpolate_16pts.c: New file.
	* gmp-impl.h: Provide corresponding declarations.
	* configure.in (gmp_mpn_functions): List toom_interpolate_16pts,
	toom8h_mul, and toom8h_sqr.
	* tests/mpn/t-toom8h.c: New test program.

	* mpn/generic/toom6_sqr.c: New file, was part of toom6h_mul.
	* mpn/generic/toom6h_mul.c: Removed _sqr.

	* mpn/generic/mulmod_bnm1.c: Nailify CRT.
	* mpn/generic/sqrmod_bnm1.c: Likewise.

	* mpn/generic/mullo_n.c: Split dc_mullo_n function;
	ALLOC memory at once.

	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES): Update.

	* mpn/generic/toom6h_mul.c: Add prefix to toom_interpolate_12pts.
	* mpn/generic/toom_interpolate_12pts.c: Likewise.

	* mpn/generic/invertappr.c (mpn_bc_invertappr): Use mpn_divrem_2.
	* mpn/generic/invert.c: Faster basecase, use mpn_sbpi1_div_q.

	* mpn/generic/toom_eval_pm2exp.c: Assert support for degree 3.
	* mpn/generic/toom6h_mul.c: Avoid obsolete _itch function.

2009-12-23  Torbjorn Granlund  <tege@gmplib.org>

	* tune/common.c, tune/speed.c, tune/speed.h: Support for measuring
	mpn_mod_1_1p, mpn_mod_1s_2p, mpn_mod_1s_3p, mpn_mod_1s_4p.

	* tests/mpz/t-powm.c: Test mpz_powm_sec.

	* mpz/powm_sec.c: New file.
	* gmp-h.in: Declare it.
	* Makefile.am, mpz/Makefile.am: Compile it.
	* doc/gmp.texi: Document it.

	* mpn/generic/powm_sec.c (mpn_powm_sec_itch): New function.
	(mpn_powm_sec): Use passed scratch, no local allocation.
	Allow exp argument = 1.
	(win_size): Start loop from 1.

	* mpn/generic/powm.c (win_size): Start loop from 1.

2009-12-22  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpn/t-div.c: New file.
	* tests/mpn/Makefile.am: Compile it.

	* mpn/generic/mu_divappr_q.c: Handle quotient overflow.

	* mpn/generic/mu_div_q.c (mpn_mu_div_q_itch): New function.

2009-12-22  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/sbpi1_div_q.c: Use udiv_qr_3by2.  Intended to change
	nothing after preprocessing.

	* mpn/generic/sbpi1_divappr_q.c: For the last call to udiv_qr_3by2,
	avoid using memory locations as output parameters, and revert to
	explicitly copying n1 and n0 to memory.

	* gmp-impl.h (udiv_qr_3by2): Tweaked to expand to precisely the
	same code as was used before the introduction of this macro.
	Eliminated some local variables, instead do multiple updates to
	the output parameters.

2009-12-22  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpn/t-toom6h.c (MIN_AN): Set to MUL_TOOM6H_THRESHOLD to avoid
	invalid recursive sizes.

	* tests/mpn/t-bdiv.c: Get itch function calls right.

	* mpn/generic/mu_bdiv_q.c (mpn_mu_bdiv_q_itch): Rewrite.
	* mpn/generic/mu_bdiv_qr.c (mpn_mu_bdiv_qr_itch): Simplify.

	* mpn/generic/bdiv_qr.c (mpn_bdiv_qr): Simplify, don't allocate.
	(mpn_bdiv_qr_itch): Conditionalise on MU_BDIV_QR_THRESHOLD.

2009-12-18  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/t-bdiv.c: Add red-zones.

2009-12-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/sbpi1_div_q.c: Fix fixup code to work for qn = 0.

	* mpn/generic/dcpi1_divappr_q.c: Handle qn = 1 and qn = 2 for initial
	quotient block (code block copied from dcpi1_div_qr.c).

	* mpn/generic/dcpi1_div_qr.c: Rewrite singular case giving q limb of
	GMP_NUMB_MAX.  Remove an impossible qn = 0 case.

	* mpn/generic/dcpi1_bdiv_q.c: Remove a spurious mpn_sub_1.

	* mpn/generic/mul.c: Put back call to mpn_mul_n.

	* tune/tuneup.c (all): Call tune_mulmod_bnm1 before tuning fft due to
	dependency on mulmod_bnm1 from both mul_fft_mul and from mullo_n.

	* mpn/generic/dcpi1_divappr_q.c: ASSERT that dn >= 6 and nn > dn.
	* mpn/generic/dcpi1_div_q.c: ASSERT that dn >= 6 and nn-dn >= 3.
	* mpn/generic/dcpi1_div_qr.c: ASSERT that dn >= 6 and nn-dn >= 3.

	* mpn/generic/bdiv_q_1.c (mpn_pi1_bdiv_q_1): Renamed from
	mpn_bdiv_q_1_pi1.
	* All references changed.

	* configure.in: Add --enable-old-fft-full.
	* tune/speed.c (routine): Conditionalise mpn_mul_fft_full references on
	WANT_OLD_FFT_FULL.
	* tune/common.c (speed_mpn_mul_fft_full)
	(speed_mpn_mul_fft_full_sqr): Likewise.
	* mpn/generic/mul_fft.c (mpn_mul_fft_full): Include iff
	WANT_OLD_FFT_FULL.

2009-12-21  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (mpn_toom6h_mul_itch): New inline function.
	(MUL_TOOM6H_THRESHOLD): Default value.
	(SQR_TOOM6_THRESHOLD): Default value.
	* mpn/generic/toom6h_mul.c: Remove definitions moved to gmp-impl.h.
	* tune/common.c, tune/speed.c, tune/speed.h: Support for measuring
	mpn_toom6h_mul and mpn_toom6_sqr speed.

	* mpn/generic/toom63_mul.c: Remove unused TMP_*.

	* mpn/generic/toom_eval_pm2rexp.c: New file.
	* gmp-impl.h: Provide corresponding declaration.
	* configure.in (gmp_mpn_functions): List toom_eval_pm2rexp.
	* mpn/generic/toom6h_mul.c: Use shared toom_eval_pm2rexp.

	* mpn/generic/toom_couple_handling.c: New file, helper function
	for high degree Toom.
	* gmp-impl.h: Provide corresponding declaration.
	* configure.in (gmp_mpn_functions): List toom_couple_handling.
	* mpn/generic/toom6h_mul.c: Use shared toom_couple_handling.
	* mpn/generic/toom63_mul.c: Likewise.

	* mpn/generic/toom6h_mul.c: New file.
	* mpn/generic/toom_interpolate_12pts.c: New file.
	* gmp-impl.h: Provide corresponding declarations.
	* configure.in (gmp_mpn_functions): List toom_interpolate_12pts,
	toom6h_mul.
	* tests/mpn/t-toom6h.c: New test program.

	* tests/mpn/t-mulmod_bnm1.c (ref_mulmod_bnm1): Use ref_mul.
	* tests/mpn/t-sqrmod_bnm1.c (ref_sqrmod_bnm1): Likewise.

2009-12-20  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/mulmod_bnm1.c (mpn_mulmod_bnm1): New CRT.
	* mpn/generic/sqrmod_bnm1.c (mpn_sqrmod_bnm1): Likewise.

2009-12-20  Torbjorn Granlund  <tege@gmplib.org>

	* Change all bit counts for bignums to use mp_bitcnt_t.

	* mpn/generic/bdivmod.c: File removed.  All references purged.

	* mpn/generic/mul_fft.c (mpn_mul_fft_full): Disable.

	* gmp-impl.h: Define mpn_fft_mul as an alias for mpn_nussbaumer_mul.
	* mpn/generic/mul.c: Refer mpn_fft_mul.
	* mpn/generic/mul_n.c: Likewise.
	* mpn/generic/sqr_n.c: Likewise.
	* mpn/generic/mullo_n.c: Likewise.

	* mpn/generic/mul.c: Loop also over mpn_nussbaumer_mul, as suggested by
	Marco.  Use TMP_SALLOC_LIMBS in more places.  Clean up ws allocation.

2009-12-19  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom_interpolate_8pts.c: Nailify.

2009-12-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mul.c: Major rewrite.  Use toom43, toom53, toom63.
	Call mpn_nussbaumer_mul for largest operands.

	* tune/speed.h (SPEED_ROUTINE_MPN_TOOM32_FOR_TOOM43_MUL): New macro.
	(SPEED_ROUTINE_MPN_TOOM43_FOR_TOOM32_MUL): New macro.
	(SPEED_ROUTINE_MPN_TOOM32_FOR_TOOM53_MUL): New macro.
	(SPEED_ROUTINE_MPN_TOOM53_FOR_TOOM32_MUL): New macro.
	(SPEED_ROUTINE_MPN_TOOM42_FOR_TOOM53_MUL): New macro.
	(SPEED_ROUTINE_MPN_TOOM53_FOR_TOOM42_MUL): New macro.
	* tune/common.c (speed_mpn_toom63_mul): New function.
	(speed_mpn_toom32_for_toom43_mul): New function.
	(speed_mpn_toom43_for_toom32_mul): New function.
	(speed_mpn_toom32_for_toom53_mul): New function.
	(speed_mpn_toom53_for_toom32_mul): New function.
	(speed_mpn_toom42_for_toom53_mul): New function.
	(speed_mpn_toom53_for_toom42_mul): New function.
	* tune/tuneup.c (tune_mul_n): New name for old tune_mul.
	(tune_sqr_n): New name for old tune_sqr.
	(tune_mul): New function, for unbalanced multiplication.
	* gmp-impl.h: Provide declarations for corresponding threshold vars.

	* gmp-impl.h (mpn_rsh1add_nc, mpn_rsh1sub_nc): Declare.
	* mpn/asm-defs.m4: Likewise.
	* configure.in: Add corresponding HAVE_NATIVEs.
	* mpn/x86_64/rsh1aors_n.asm: Add _nc entry point.

2009-12-18  Niels Möller  <nisse@lysator.liu.se>

	* mpz/divexact.c: Rewrite to use mpn_divexact.

	* mpn/generic/bdiv_q_1.c (mpn_bdiv_q_1): Deleted some unused
	variables.

	* mpn/generic/toom52_mul.c (mpn_toom52_mul)
	[HAVE_NATIVE_mpn_add_n_sub_n]: Moved declaration of cy to avoid a
	compiler warning.

	* gmp-impl.h (gmp_pi1_t): Eliminated inv21 member.
	(invert_pi1): ...and don't store it here.

	* mpn/generic/toom63_mul.c (mpn_toom63_mul): Simplified
	calculation of block size n.
	* gmp-impl.h (mpn_toom63_mul_itch): Likewise.

	* mpn/generic/toom_eval_pm2exp.c (mpn_toom_eval_pm2exp): Fixed
	output asserts.

2009-12-18  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpn/t-toom63.c: New test program.

2009-12-18  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/invert.c: Nailify.
	* mpn/generic/invertappr.c: Nailify.
	* mpn/generic/mulmod_bnm1.c: Nailify.
	* mpn/generic/sqrmod_bnm1.c: Nailify.

	* tests/mpn/t-invert.c: New test program.

	* mpn/generic/toom63_mul.c: New file.
	* mpn/generic/toom_interpolate_8pts.c: New file.
	* gmp-impl.h: Provide corresponding declarations.
	* configure.in (gmp_mpn_functions): List toom_interpolate_8pts and
	toom63_mul.

2009-12-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mul.c: Move allocation of ws to where it is used.
	Identify toom22, 32, 42, in that order (in two places).  Use midline
	between toom22, 32, 42.
	* mpn/generic/toom22_mul.c (TOOM22_MUL_MN_REC): Call also
	mpn_toom32_mul.

	* doc/gmp.texi: Update References section.  Update Contributors
	section.  Misc updates.

	* gmp-impl.h: Renew default values for all THRESHOLDs.

2009-12-17  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/divexact.c (mpn_divexact): Don't require that the
	dividend is normalized. Use MPN_DIVREM_OR_PREINV_DIVREM_1. When
	shifting, allocate and process only the low qn+1 limbs. Eliminated
	code for the impossible case nn < qn.

	* mpn/generic/dcpi1_div_qr.c (mpn_dcpi1_div_qr): Added some input
	asserts.

	* mpn/generic/dcpi1_div_qr.c (mpn_dcpi1_div_qr): In the case that
	the initial quotient block is a single limb, use 3/2 division,
	thereby eliminating the only use of gmp_pi1_t->inv21.

2009-12-17  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/invert.c: Added some comment.
	* mpn/generic/invertappr.c: Slightly better threshold handling.
	* gmp-impl.h (INV_NEWTON_THRESHOLD): Default to 200.

	* mpn/generic/nussbaumer_mul.c: New file.
	* configure.in (gmp_mpn_functions): Add nussbaumer_mul.
	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add nussbaumer_mul.
	* gmp-impl.h (mpn_nussbaumer_mul): Added prototype and name-mangling.
	* tune/speed.h (speed_mpn_nussbaumer_mul): Declare function.
	* tune/common.c (speed_mpn_nussbaumer_mul): New function.
	* tune/speed.c (routine): Add speed_mpn_nussbaumer_mul.

	* mpn/generic/sqrmod_bnm1.c: New file.
	* configure.in (gmp_mpn_functions): Add sqrmod_bnm1.
	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add sqrmod_bnm1.
	* gmp-impl.h (mpn_sqrmod_bnm1): Added prototype and name-mangling.
	(SQRMOD_BNM1_THRESHOLD): support for the new threshold.
	* tune/speed.h (speed_mpn_sqrmod_bnm1): Declare function.
	* tune/common.c (speed_mpn_sqrmod_bnm1): New function.
	* tune/speed.c (routine): Add speed_mpn_sqrmod_bnm1.
	* tests/mpn/t-mulmod_bnm1.c: Attribution.
	* tests/mpn/t-sqrmod_bnm1.c: New test file.
	* tests/mpn/Makefile.am (check_PROGRAMS): Add t-sqrmod_bnm1.

	* tune/tuneup.c: Tune SQRMOD_BNM1_THRESHOLD.

	* mpn/generic/nussbaumer_mul.c (mpn_nussbaumer_mul): Mimic fft_mul,
	use squaring if operands coincide.
	* tune/speed.h (speed_mpn_nussbaumer_mul_sqr): Declare function.
	* tune/common.c (speed_mpn_nussbaumer_mul_sqr): New function.
	* tune/speed.c (routine): Add speed_mpn_nussbaumer_mul_sqr.

2009-12-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/bdiv_q.c (mpn_bdiv_q_itch): Rewrite.

2009-12-16  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpn/t-bdiv.c (bdiv_q_valid_p, bdiv_qr_valid_p): Call refmpn_mul
	instead of refmpn_mul_basecase.
	* tests/mpn/toom-shared.h: Likewise.
	* tests/refmpn.c (refmpn_mullo_n,refmpn_sqr,refmpn_mul_any): Likewise.

	* minithres/gmp-mparam.h: Add new thresholds, trim old values.

	* mpn/generic/powm.c: Use mp_bitcnt_t for bit counts.
	Handle REDC_1_TO_REDC_N_THRESHOLD < MUL_TOOM22_THRESHOLD in
	non-WANT_REDC_2 INNERLOOP expansion code.
	* mpn/generic/powm_sec.c: Use mp_bitcnt_t for bit counts.

2009-12-16  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpz/t-gcd.c (main): Added test case to exercise the
	unlikely u0 == u1 case in mpn_gcdext_lehmer_n.

	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Get ASSERT
	right.

2009-12-16  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-mul.c: Misc cleanups.
	(mul_basecase): Remove.
	(ref_mpn_mul): Remove.
	* tests/refmpn.c (refmpn_mul): New function, mainly from t-mul.c's
	ref_mpn_mul.
	(refmpn_mullo_n): Add a missing free.

	* tune/speed.c (routine): Measure speed_mpn_{sb,dc}pi1_div_qr,
	mpn_{sb,dc}pi1_divappr_q, mpn_{sb,dc}pi1_bdiv_qr, and
	mpn_{sb,dc}pi1_bdiv_q.

	* mpn/generic/invertappr.c: New file, meat from invert.c.
	* mpn/generic/invert.c: Leave just mpn_invert.c.
	* configure.in (gmp_mpn_functions): Add invertappr.
	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add invertappr.c.
	* gmp-impl.h (mpn_invert_itch, mpn_invertappr_itch): New macros.

2009-12-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/gcdext_subdiv_step.c: Get an ASSERT right.

2009-12-15  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/sbpi1_div_qr.c (mpn_sbpi1_div_qr): A very small step
	towards nail support.

2009-12-15  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h (mpn_ni_invertappr): Added prototype and name-mangling.
	* mpn/generic/mulmod_bnm1.c: Comment representation of class [0].

2009-12-14  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/sbpi1_divappr_q.c (mpn_sbpi1_divappr_q): Use
	udiv_qr_3by2.

2009-12-14  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_binvert): Remove BINV_MULMOD_BNM1_THRESHOLD
	tuning, it was always zero and caused BINV_NEWTON_THRESHOLD to be
	wrong (as pointed out by Marco).
	* (BINV_MULMOD_BNM1_THRESHOLD): Clean from other files too.

2009-12-14  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/invert.c: Improved comments.
	(mpn_bc_invertappr): Conditionally re-enable mpn_dcpi1_divappr_q.

2009-12-14  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h (udiv_qr_3by2): Fix typo in argument list.

2009-12-13  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h (udiv_qr_3by2): New macro.
	* mpn/generic/sbpi1_div_qr.c (mpn_sbpi1_div_qr): Use udiv_qr_3by2.

2009-12-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/dcpi1_divappr_q.c (mpn_dcpi1_divappr_q): Avoid a buffer
	overrun.

	* mpn/generic/mul_fft.c (mpn_mul_fft_full): Handle carry-out from 2nd
	mpn_mul_fft, add an ASSERT for the 1st mpn_mul_fft.  Replace some
	comments on cc's range with ASSERTs.

	* mpn/generic/gcdext.c (compute_v): Normalise tp[] after mpn_mul.

	* mpz/powm.c: Rework buffer handling.

2009-12-13  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/toom-shared.h (main): Use refmpn_mul_basecase to check
	results (slow!). Iteration counts of all toom tests reduced
	considerably.

2009-12-13  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/invert.c (mpn_invertapp): Split in _bc and _ni.
	(mpn_bc_invertappr): New function, the basecase.
	(mpn_ni_invertapp): New function, Newton iteration.
	(mpn_invert): Use mpn_ni_invertapp.
	* tune/tuneup.c (tune_invert): Min for INV_APPR_THRESHOLD.
	(tune_invertappr): Min for INV_NEWTON_THRESHOLD.

	* tune/speed.h (SPEED_ROUTINE_MPN_NI_INVERTAPPR): New macro.
	(speed_mpn_ni_invertappr): Declare function.
	* tune/common.c (speed_mpn_ni_invertappr): New function.
	* tune/speed.c (routine): Add speed_mpn_ni_invertappr.

	* tune/tuneup.c (tune_invertappr): Use speed_mpn_ni_invertappr to
	tune INV_MULMOD_BNM1_THRESHOLD.

2009-12-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mu_bdiv_qr.c (mpn_mu_bdiv_qr_itch): Rewrite.

2009-12-12  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpn/t-mulmod_bnm1.c (main): Disable B^n+1 stressing test
	for odd sizes.

	* mpn/generic/invert.c: Complete rewrite. Uses Newton iterations.
	* gmp-impl.h (mpn_invertappr): Added prototype and name-mangling.
	(mpn_invertappr_itch): Added prototype and name-mangling.
	(INV_APPR_THRESHOLD): Support for a new tunable const.
	* tune/speed.h (SPEED_ROUTINE_MPN_INVERTAPPR): New macro.
	(speed_mpn_invertappr): Declare function.
	* tune/common.c (speed_mpn_invertappr): New function.
	* tune/speed.c (routine): Add speed_mpn_invertappr.
	* tune/tuneup.c (tune_invertappr): New function: was tune_invert.
	(tune_invert): Now tune only INV_APPR_THRESHOLD.
	(all): Enable call to tune_invert and tune_invertappr.

2009-12-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/binvert.c: Use mpn_mulmod_bnm1 instead of FFT wrapping.
	Old, evidently broken wrapping code removed.
	* tune/tuneup.c (tune_binvert): Tune BINV_MULMOD_BNM1_THRESHOLD.
	* gmp-impl.h: Provide declarations for corresponding threshold var.

	* tests/mpn/t-bdiv.c (COUNT): Decrease to keep run time reasonable.

	* tune/tuneup.c (tune_invert): Tune INV_MULMOD_BNM1_THRESHOLD.
	* gmp-impl.h: Provide declarations for corresponding threshold var.

	* tests/mpn/t-mulmod_bnm1.c: Avoid a division by zero.

	* configure.in: Set up different paths for different 64-bit sparc
	processors.
	* mpn/sparc64/ultrasparc34/gmp-mparam.h: New file.

2009-12-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/*/gmp-mparam.h: Regenerate many of these files.

2009-12-10  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h (mpn_divexact): Removed scratch pointer from
	prototype.
	* mpn/generic/gcdext.c (divexact): Deleted, moved to...
	* mpn/generic/divexact.c (mpn_divexact): New implementation (moved
	from gcdext.c). The bidirectional divexact is kept but #if:ed out.
	Interface change, since the new code doesn't take a scratch
	argument.

	* tests/mpn/t-mulmod_bnm1.c (main): Ensure that an >= bn. Lowered
	MIN_N to 1. Various fixes to handle n == 1 properly.

	* mpn/generic/mulmod_bnm1.c (mpn_mulmod_bnm1): Small interface
	change, require an >= bn.

	* mpn/generic/mulmod_bnm1.c (mpn_mulmod_bnm1): Fixed non-recursive
	case to not write beyond end of result area.

2009-12-09  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.h (SPEED_ROUTINE_MPN_MULMOD_BNM1_CALL): New macro, made
	from now deleted SPEED_ROUTINE_MPN_MULMOD_BNM1.
	* tune/common.c (speed_mpn_bc_mulmod_bnm1): New function.
	(speed_mpn_mulmod_bnm1): Use SPEED_ROUTINE_MPN_MULMOD_BNM1_CALL.
	* tune/speed.c (routine): Add mpn_bc_mulmod_bnm1.

	* mpn/generic/mulmod_bnm1.c (mpn_mulmod_bnm1_next_size): Rewrite.

	* tune/tuneup.c (tune_mulmod_bnm1): Rewrite.

2009-12-08  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/mulmod_bnm1.c (mpn_bc_mulmod_bnm1,
	mpn_bc_mulmod_bnp1): Added a parameter for scratch area, possibly
	same as result area (as suggested by Niels Möller).
	(mpn_mulmod_bnm1): Calls changed accordingly.

2009-12-08  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcdext_1.c (mpn_gcdext_1) [GCDEXT_1_USE_BINARY]: Use
	table lookup for count_trailing_zeros. Binary algorithm still
	disabled by default.

	* mpn/generic/gcdext.c (divexact): Local definition of divexact,
	using mpn_bdiv_q.
	(compute_v): Use it.

	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-bdiv.

	* tests/mpn/t-bdiv.c: New file.

	* mpn/generic/bdiv_q.c (mpn_bdiv_q): Fixed bad quotient length,
	should have qn == nn.

	* mpn/generic/bdiv_qr.c (mpn_bdiv_qr): Pass correct nn length to
	the lower-level functions.

2009-12-08  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.h (SPEED_ROUTINE_MPN_MULMOD_BNM1_ROUNDED): New define.
	* tune/common.c (speed_mpn_mulmod_bnm1_rounded): New function.
	* tune/speed.c (routine): Add mpn_mulmod_bnm1_rounded for measuring
	mpn_mulmod_bnm1 at recommended sizes.

	* mpn/generic/mulmod_bnm1.c (mpn_mulmod_bnm1_next_size): Rewrite.
	(mpn_bc_mulmod_bnm1): Use mpn_add_n instead of mpn_add.

	* tune/speed.c (routine): Add mpn_invert.

	* tune/tuneup.c (tune_invert): New function.
	* tune/speed.h (SPEED_ROUTINE_MPN_INVERT): New macro.
	* tune/common.c (speed_mpn_invert): New function.
	* gmp-impl.h: Provide declarations for corresponding threshold var.
	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add invert.c.

2009-12-08  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/devel/try.c: Test mpn_addlsh2_n and mpn_{add,sub}lsh_n;
	mpn_rsblsh_n now tests all shift values.
	* tests/refmpn.c (refmpn_addlsh_n, refmpn_sublsh_n): New functions.
	(refmpn_addlsh1_n): Use generic refmpn_addlsh_n.
	(refmpn_sublsh1_n): Use generic refmpn_sublsh_n.
	(refmpn_addlsh2_n): New function.
	* tests/tests.h: Declare new functions.

2009-12-06  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_mulmod_bnm1): Up min_size to 12.

	* Globally: Rename *mullow* to *mullo*, *MULLOW* to *MULLO*.

	* configure.in: Don't include ev5 directory for ev6* and ev7.  Misc
	alpha path cleanups.
	* mpn/alpha/add_n.asm: Replaced by mpn/alpha/ev5/add_n.asm.
	* mpn/alpha/sub_n.asm: Replaced by mpn/alpha/ev5/sub_n.asm.
	* mpn/alpha/lshift.asm: Replaced by mpn/alpha/ev5/lshift.asm.
	* mpn/alpha/rshift.asm: Replaced by mpn/alpha/ev5/rshift.asm.
	* mpn/alpha/com_n.asm: New, moved from mpn/alpha/ev5/rshift.asm.
	* mpn/alpha/ev5/diveby3.asm: New, moved from mpn/alpha/diveby3.asm.

	* mpn/powerpc64/mode64/diveby3.asm: Remove, it is slower than
	mpn_bdiv_dbm1c on all hardware.

	* mpn/generic/powm_sec.c: Rework logic for mpn_sqr_basecase size limit.

	* gmp-impl.h (mpn_redc_1_sec): Declare.
	* configure.in (gmp_mpn_functions): Add redc_1_sec.

2009-12-06  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/devel/try.c (try_one): DATA_SRC0_HIGHBIT sets the high bit.

2009-12-05  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom_eval_dgr3_pm1.c: Change return value: 0 or ~0.
	* mpn/generic/toom_eval_dgr3_pm2.c: Likewise.
	* mpn/generic/toom_eval_pm1.c: Likewise.
	* mpn/generic/toom_eval_pm2exp.c: Likewise.
	* mpn/generic/toom_eval_pm2.c: Rewrite to use mpn_addlsh2_n.

	* mpn/generic/toom_interpolate_5pts.c: Param sa is a flag, not a sign.

	* mpn/generic/toom33_mul.c: Adapt to changes above.
	* mpn/generic/toom3_sqr.c: Likewise.
	* mpn/generic/toom42_mul.c: Likewise.
	* mpn/generic/toom43_mul.c: Reduce branches.
	* mpn/generic/toom44_mul.c: Likewise.
	* mpn/generic/toom53_mul.c: Likewise.
	* mpn/generic/toom62_mul.c: Likewise.

	* mpn/generic/toom52_mul.c: Use toom_eval_ functions.

	* mpn/generic/toom4_sqr.c: Avoid C99 construct.
	* mpn/generic/toom_interpolate_7pts.c: Likewise.

2009-12-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/redc_1_sec.c: New file.
	* mpn/generic/powm_sec.c: Use redc_1_sec.  Use dummy full subtract
	instead of mpn_cmp since the latter leaks to the side channel.
	(mpn_local_sqr_n): New function, with associated macros.
	(mpn_powm_sec): Use mpn_local_sqr_n.

	* configure.in (HAVE_NATIVE): Add missing functions, then sort.

2009-12-04  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_dc_div): Up min_size to 6.
	(tune_mod_1): Set MOD_1_1_THRESHOLD min_size to 2.

	* tune/speed.h: Negate "binvert"-type inverses, as required.

	* mpn/generic/redc_1.c: Add ASSERTs.
	* mpn/generic/redc_2.c: Likewise.

	* mpn/generic/sbpi1_bdiv_q.c: Simplify loops, indexing.

2009-12-03  Yann Droneaud  <yann@droneaud.fr>

	* acinclude.m4 ([long long reliability test 1]): Add a "static" for C99
	inline semantics compatibility.

2009-12-03  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Move intptr_t test into common AC_CHECK_TYPES.

	* mpn/generic/gcdext.c: Add a TMP_FREE.

2009-12-03  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcdext_1.c (mpn_gcdext_1) [GCDEXT_1_USE_BINARY]:
	Added various masking tricks.

	* mpn/generic/gcdext_1.c (mpn_gcdext_1) [GCDEXT_1_USE_BINARY]:
	Reimplemented binary gcdext, with proper canonicalization.

	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Handle v == 0
	from mpn_gcdext_1.
	* mpn/generic/gcdext_1.c (mpn_gcdext_1): Allow inputs with a < b,
	assertions fixed accordingly.

2009-12-03  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c: Tune DC_DIVAPPR_Q_THRESHOLD.  Rewrite
	DC_DIV_QR_THRESHOLD tuning code.
	(tune_dc_div): Rewrite.
	* tune/speed.h (SPEED_ROUTINE_MPN_PI1_DIV): New macro.
	* tune/common.c (speed_mpn_sbpi1_div_qr, speed_mpn_dcpi1_div_qr,
	speed_mpn_sbpi1_divappr_q, speed_mpn_sbpi1_bdiv_qr): New functions.
	* gmp-impl.h: Provide declarations for corresponding threshold vars.
	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add dcpi1_divappr_q.c.

	* tune/tuneup.c (tune_binvert): Up max_size.

2009-12-02  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/devel/try.c: Test mpn_rsblsh2_n and mpn_rsblsh_n.
	* tests/refmpn.c (refmpn_rsblsh_n, refmpn_rsblsh2_n): New functions.
	(refmpn_rsblsh1_n): Use generic refmpn_rsblsh_n.
	* tests/tests.h: Declare new functions.

2009-12-03  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcdext_subdiv_step.c (mpn_gcdext_subdiv_step):
	Select the right cofactor in the cases A == B or A == 2B.

	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Deleted
	handling of ap[0] == 0 and bp[0] == 0; these cases don't happen.
	Select the right cofactor in the case ap[0] == bp[0].
	* mpn/generic/gcdext.c (mpn_gcdext): Analogous changes.

2009-12-02  Niels Möller  <nisse@lysator.liu.se>

	* gmp-h.in (mpn_gcdext_1): Updated prototype.
	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Updated for
	signed cofactors from gcdext_1.
	* mpn/generic/gcdext_1.c (mpn_gcdext_1): Use Euclid's algorithm,
	and return signed cofactors.

2009-12-02  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi (Low-level Functions): Document mpn_sqr_n.

	* tune/speed.c (routine): Add mpn_binvert.

	* tune/tuneup.c: Tune BINV_NEWTON_THRESHOLD.
	(tune_binvert): New function.
	* tune/speed.h (SPEED_ROUTINE_MPN_BINVERT): New macro.
	* tune/common.c (speed_mpn_binvert): New function.
	* gmp-impl.h: Provide declarations for corresponding threshold var.
	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add binvert.c.

	* tune/tuneup.c: Tune DC_BDIV_QR_THRESHOLD and DC_BDIV_Q_THRESHOLD.
	(tune_dc_bdiv): New function.
	(tune_dc_div): New name for tune_dc.
	* tune/speed.h (SPEED_ROUTINE_MPN_PI1_BDIV_QR,
	SPEED_ROUTINE_MPN_PI1_BDIV_Q): New macros.
	* tune/common.c (speed_mpn_sbpi1_bdiv_qr, speed_mpn_dcpi1_bdiv_qr,
	speed_mpn_sbpi1_bdiv_q, speed_mpn_dcpi1_bdiv_q): New functions.
	* gmp-impl.h: Provide declarations for corresponding threshold vars.
	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add dcpi1_bdiv_qr.c and
	dcpi1_bdiv_q.c.

2009-12-01  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom53_mul.c: Removed double computation of vinf.

	* mpn/x86_64/aorrlsh_n.asm: Correct return value for rsblsh_n.
	* mpn/asm-defs.m4 (define_mpn): Add rsblsh_n.
	* gmp-impl.h (mpn_rsblsh_n): Added prototype and name-mangling.

	* mpn/generic/fib2_ui.c: Reduce the amount of temporary storage.
	Use mpn_rsblsh_n.

2009-12-01  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/redc_n.c: Rework temp allocation.

	* mpn/generic/dcpi1_bdiv_qr.c (mpn_dcpi1_bdiv_qr_n_itch): Add pi1 also
	to this function.

	* mpn/generic/dcpi1_bdiv_q.c: Get the mpn_sbpi1_bdiv_q call right.
	Misc cleanups.

	* tune/speed.c (routine): Fix typo in last change.
	Add mpn_redc_2.

	* tune/speed.h (SPEED_ROUTINE_REDC_N): Set min size properly.

2009-12-01  Niels Möller  <nisse@lysator.liu.se>

	* tune/speed.c (routine): Added mpn_toom42_mul and mpn_redc_n.
	* tune/speed.h (SPEED_ROUTINE_MPN_TOOM42_MUL): New macro.
	(speed_mpn_toom42_mul): Declare function.
	* tune/common.c (speed_mpn_toom42_mul): New function.
	* gmp-impl.h (MPN_TOOM42_MUL_MINSIZE): New constant.

2009-11-30  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/fib2_ui.c: Use mpn_rsblsh2_n.

2009-11-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/pentium4/gmp-mparam.h
	(HAVE_NATIVE_mpn_addlsh1_n, HAVE_NATIVE_mpn_sublsh1_n): Don't undef.

	* Makefile.am (EXTRA_DIST): Remove macos.

2009-11-28  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_redc): Set min_size to 16 for redc_n tuning.

	* mpn/x86_64/sqr_basecase.asm (SQR_TOOM2_THRESHOLD_MAX): Avoid quoting
	to allow configure.in parse it more easily.  Trim from 120 to 80.

2009-11-28  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/mulmod_bnm1.c: Basecases made simpler, this also corrects
	a bug affecting previous version.

2009-11-28  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Handle atom also in 32-bit mode.
	* mpn/x86/atom/gmp-mparam.h: New file.

	* gmp-impl.h (MULMOD_BNM1_THRESHOLD): Default.

	* mpn/generic/redc_n.c: Use mpn_mulmod_bnm1 instead of mpn_mul_n.

	* Use TMP_ALLOC_LIMBS consistently.
	* Finish renaming BITS_PER_MP_LIMB to GMP_LIMB_BITS.

	* macos: Remove entire directory.

2009-11-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/corei/gmp-mparam.h: New file.
	* mpn/x86_64/core2/gmp-mparam.h: Now for just core2.
	* mpn/powerpc64/mode64/p3/gmp-mparam.h: New file.
	* mpn/powerpc64/mode64/p4/gmp-mparam.h: New file.
	* mpn/powerpc64/mode64/p5/gmp-mparam.h: New file.

	* config.guess: Return "corei" for core i7 and core i5.
	* config.sub: Recognise "corei".
	* acinclude.m4 (X86_64_PATTERN): Add corei.
	* configure.in (powerpc): Set up more CPU-specific paths.
	(x86): Handle corei.

	* mpz/powm.c: Allow input operand overlap also when exponent = 1.
	Misc cleanups.

2009-11-26  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* tests/mpn/t-mulmod_bnm1.c: New test file.
	* tests/mpn/Makefile.am (check_PROGRAMS): Add t-mulmod_bnm1.

	* mpn/generic/mullow_n.c: Comments on Mulders' trick implementation.

2009-11-26  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/powm.c: Make comments reflect current code state.

	* tests/devel/try.c: Make mpn_mullow_n testing actually work.

2009-11-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/powm.c: Clean up unused defs.

2009-11-24  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_redc): Rewrite.
	* mpn/generic/powm.c: Use REDC_1_TO_REDC_2_THRESHOLD,
	REDC_1_TO_REDC_N_THRESHOLD, and REDC_2_TO_REDC_N_THRESHOLD.
	Get rid of previous REDC params, including LOCAL_REDC_N_THRESHOLD.
	(WANT_REDC_2): Define.
	* gmp-impl.h: Corresponding changes.

2009-11-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/powm.c: Fix typo.
	Define LOCAL_REDC_N_THRESHOLD, use in REDC_2_THRESHOLD...
	REDC_N_THRESHOLD chain.

2009-11-22  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_mullow): Set min_size to 1.

	* mpn/generic/powm_sec.c: Use just mpn_mul_basecase and
	mpn_sqr_basecase for multiplication and squaring.

	* tune/tuneup.c: Tune REDC_2_THRESHOLD and REDC_N_THRESHOLD.
	(tune_redc): New function.
	(tune_powm): Remove function.
	* tune/speed.h (SPEED_ROUTINE_REDC_2, SPEED_ROUTINE_REDC_N): New.
	* tune/common.c (speed_mpn_redc_2, speed_mpn_redc_n): New.

	* mpz/powm.c: Complete rewrite.  Use mpn_powm and mpn_powlo.
	* mpn/generic/powm.c: Rewrite.
	* mpn/generic/redc_n.c: New file.
	* configure.in (gmp_mpn_functions): Add redc_n.
	* gmp-impl.h (REDC_2_THRESHOLD, REDC_N_THRESHOLD): Default, and define
	for tuneup.

2009-11-21  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/mullow_n.c: Disable Mulders' trick for small operands,
	use fft for bigger ones.
	* tests/mpn/t-mullo.c: New test file.

2009-11-22  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_mullow): Rewrite.

2009-11-21  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* gmp-impl.h: Removed unused macros (CACHED_ABOVE_THRESHOLD and
	CACHED_BELOW_THRESHOLD).

	* mpn/generic/mullow_n.c: Use Mulders' trick.
	* tune/tuneup.c (tune_mullow): MULLOW_MUL_N_THRESHOLD range of
	search depends on FFT tuning;
	(all): Anticipate tune_fft_{mul,sqr}.

	* tune/speed.c (routine): Add entry related to mpn_mulmod_bnm1.

2009-11-19  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/toom_eval_dgr3_pm2.c (mpn_toom_eval_dgr3_pm2)
	[HAVE_NATIVE_mpn_add_n_sub_n]: Fixed typo in mpn_add_n_sub_n call
	(spotted by Marco Bodrato).
	* mpn/generic/toom_eval_pm2.c (mpn_toom_eval_pm2): Likewise.
	* mpn/generic/toom_eval_pm2exp.c (mpn_toom_eval_pm2exp): Likewise.

	* mpn/generic/toom_eval_pm2.c (mpn_toom_eval_pm2) [HAVE_NATIVE_mpn_addlsh_n]:
	Fixed missing declaration.

	* mpn/asm-defs.m4 (define_mpn): Add addlsh_n.
	* gmp-impl.h (mpn_addlsh_n): Added prototype and name-mangling.

2009-11-19  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/toom_eval_pm2.c (mpn_toom_eval_pm2): New file.
	* mpn/generic/toom53_mul.c (mpn_toom53_mul): Use mpn_toom_eval_pm2.
	* mpn/generic/toom62_mul.c (mpn_toom62_mul): Likewise.
	* configure.in (gmp_mpn_functions): Added toom_eval_dgr3_pm2.

2009-11-18  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (mpn_and_n, etc): Adapt to now-public logic functions.

	* config.guess: Recognise VIA nano.
	* config.sub: Likewise.
	* configure.in: Generalise x86_64 support; recognise VIA nano.

2009-11-16  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.c (routine): Add measurement of mpn_addlsh2_n,
	mpn_sublsh2_n, mpn_rsblsh2_n.
	* tune/common.c: Add speed routines for lsh2 functions.

	* mpn/generic/divis.c: Use MU_BDIV_QR_THRESHOLD.

	* configure.in (gmp_mpn_functions_optional): Add *lsh_n functions.

	* mpn/generic/toom_eval_pm2exp.c: Make HAVE_NATIVE_mpn_addlsh_n code
	work.

	* mpn/x86_64/aorrlsh2_n.asm: Optimise inner loop.

	* configure.in (gmp_mpn_functions_optional): Remove copyi,copyd, they
	are now in gmp_mpn_functions.  Analogously move logical functions.

2009-11-16  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom53_mul.c: Use addlsh2 for evaluation (and fix typo).
	* mpn/generic/toom_eval_dgr3_pm2.c: Likewise (affects toom44 and 43).

	* mpn/asm-defs.m4: Fix comments for op_lsh2 new functions.
	* gmp-impl.h: Likewise.
	* tests/mpz/t-fac_ui.c: Fix a comment.

2009-11-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/aorrlsh2_n.asm: New file.
	* configure.in: Add support for addlsh2_n, sublsh2_n, and rsblsh2_n,
	including mulfuncs.
	* gmp-impl.h (mpn_addlsh2_n, mpn_sublsh2_n, mpn_rsblsh2_n): Declare.
	* mpn/asm-defs.m4: Likewise.

	* mpn/generic/copyi.c: New file.
	* mpn/generic/copyd.c: Likewise.
	* mpn/generic/zero.c: Likewise.
	* gmp-h.in: Declare new functions.
	* configure.in (gmp_mpn_functions): Add new functions.

2009-11-15  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/mulmod_bnm1.c (mpn_mulmod_bnm1_next_size): fix typo

	* mpn/generic/toom33_mul.c: Use rsblsh1 for evaluation.
	* mpn/generic/toom3_sqr.c: Likewise.

2009-11-14  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom52_mul.c: Use mpn_addlsh1_n.

	* mpn/generic/toom52_mul.c: Toggle the right flag bit in an
	HAVE_NATIVE_mpn_add_n_sub_n arm.

	* tests/mpz/t-remove.c: New file.

	* mpn/generic/remove.c: Major overhaul.  Add parameter 'cap'.

	* mpn/generic/binvert.c: Fix typo in last change.

	* mpn/generic/bdiv_qr.c: Make it actually work.  Also use passed-in
	scratch space.

	* mpn/generic/mu_bdiv_qr.c: Reset FFT parameters for each call.

2009-11-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/k7/gcd_1.asm (MASK): Compute from MAXSHIFT.

2009-11-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/binvert.c: Simplify, fix comments.

	* tests/devel/try.c: Test mpn_invert and mpn_binvert.

	* tests/refmpn.c (refmpn_invert, refmpn_binvert): New functions.
	* tests/tests.h: Declare new functions.

2009-11-10  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Supply compiler options for atom in 32-bit mode.

	* acinclude.m4 (X86_64_PATTERN): New.
	* configure.in: Setup and use X86_64_PATTERN.

	* mpn/x86_64/fat/fat.c: New file.
	* mpn/x86_64/fat/fat_entry.asm: New file.
	* mpn/x86_64/fat: Copy C placeholder files from mpn/x86/fat.
	* mpn/x86_64/x86_64-defs.m4 (CPUVEC_FUNCS_LIST): New, copied from
	mpn/x86/x86-defs.m4.
	* configure.in: Move down x86 fat setup code until after ABI has been
	determined; generalise to handle x86_64.

2009-11-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/fat/mod_1.c: New file.

	* acinclude.m4 (GMP_C_FOR_BUILD_ANSI): Avoid poor quoting.

2009-11-08  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (MPN_LOGOPS_N_INLINE): Rewrite, update interface.  Callers
	updated.
	* mpn/generic/logops_n.c: New file.
	* doc/gmp.texi (Low-level Functions): Document logical mpn functions.

2009-11-07  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.h (SPEED_ROUTINE_MPN_MULMOD_BNM1): Adapt to new
	mpn_mulmod_bnm1 interface.

2009-11-07  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/mulmod_bnm1.c: New interface, with size
	specified for all operands in mpn_mulmod_bnm1.
	* gmp-impl.h: Changed mpn_mulmod_bnm1 prototype.

2009-11-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/k7/gcd_1.asm: Actually use div-reduced value.
	Mnemonic cleanup.

	* mpn/x86_64/gcd_1.asm: New file.

2009-11-03  Torbjorn Granlund  <tege@gmplib.org>

	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add sqr_n.c.

2009-11-03  Marco Bodrato <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom_interpolate_6pts.c: removed an addmul_1 and cleanup.

2009-11-02  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (gmp_mpn_functions): Remove obsolete functions
	dc_divrem_n and sb_divrem_mn.
	* gmp-impl.h: Misc cleanup.
	(mpn_sb_divrem_mn, mpn_dc_divrem_n): Remove.
	(DIV_DC_THRESHOLD): Remove.
	* mpn/generic/dc_divrem_n.c: Remove.
	* mpn/generic/sb_divrem_mn.c: Remove.
	* mpn/generic/tdiv_qr.c: Use DC_DIV_QR_THRESHOLD, not DIV_DC_THRESHOLD.

	* tests/devel/try.c: Replace mpn_sb_divrem_mn by mpn_sbpi1_div_qr.
	* tests/refmpn.c (refmpn_sb_div_qr): New name for refmpn_sb_divrem_mn.

	* tune/Makefile.am (libspeed_la_SOURCES): Remove sb_div.c and sb_inv.c.
	(TUNE_MPN_SRCS_BASIC): Remove sb_divrem_mn.c.
	* tune/common.c (speed_mpn_dcpi1_div_qr_n): New function.
	Remove mpn_sb_divrem_mn related functions.
	* tune/speed.c (routine): Remove entries related to mpn_dc_divrem and
	mpn_sb_divrem.
	(routine): New entry for mpn_dc_div_qr_n.
	* tune/speed.h (SPEED_ROUTINE_MPN_DC_DIVREM_CALL): Compute inverse
	needed by pi1 calls.
	(SPEED_ROUTINE_MPN_SB_DIVREM_M3): Remove.
	* tune/tuneup.c (tune_sb_preinv): Remove.
	(tune_dc): Update to measure DC_DIV_QR_THRESHOLD.

	* mpn/generic/sb_divappr_q.c: Remove.

2009-11-01  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h: Misc minor cleanups.

2009-10-31  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (toom itch functions): Simplify, make some into macros.
	(MPN_KARA_MUL_N_TSIZE, MPN_KARA_SQR_N_TSIZE): Remove.
	* mpn/generic/mul_n.c (mpn_toom3_mul_n, mpn_toom3_sqr_n): Remove.
	* mpn/generic/mul_n.c (mpn_sqr_n): Move from here...
	* mpn/generic/sqr_n.c: ...to this new file.
	* configure.in (gmp_mpn_functions): Add sqr_n.

	* Globally change
	  MUL_TOOM3_THRESHOLD => MUL_TOOM33_THRESHOLD,
	  MUL_KARATSUBA_THRESHOLD => MUL_TOOM22_THRESHOLD,
	  SQR_KARATSUBA_THRESHOLD => SQR_TOOM2_THRESHOLD,
	and associated names analogously.

2009-10-31  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/toom_interpolate_7pts.c: Changed evaluation points,
	replacing -1/2 by -2.
	* mpn/generic/toom44_mul.c: Updated to use new evaluation points,
	and use mpn_toom_eval_dgr3_pm2.
	* mpn/generic/toom4_sqr.c (mpn_toom4_sqr): Likewise.
	* mpn/generic/toom53_mul.c (mpn_toom53_mul): Updated to use new
	evaluation points, and use mpn_toom_eval_pm1 and
	mpn_toom_eval_pm2exp.
	* mpn/generic/toom62_mul.c (mpn_toom62_mul): Likewise.

	* mpn/generic/toom_eval_pm2exp.c: New file.
	* mpn/generic/toom_eval_pm1.c: New file.

	* mpn/generic/toom43_mul.c (mpn_toom43_mul): Use
	mpn_toom_eval_dgr3_pm2.

2009-10-30  Torbjorn Granlund  <tege@gmplib.org>

	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add toom2* and toom3* files.

2009-10-30  Niels Möller  <nisse@lysator.liu.se>

	* configure.in (gmp_mpn_functions): Added toom_eval_dgr3_pm2.
	* gmp-impl.h: Added prototype for mpn_toom_eval_dgr3_pm2.
	* mpn/generic/toom_eval_dgr3_pm2.c: New file.

2009-10-29  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/toom43_mul.c (mpn_toom43_mul): Use
	mpn_toom_eval_dgr3_pm1.
	* mpn/generic/toom42_mul.c (mpn_toom42_mul): Likewise.

2009-10-29  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mulmod_bnm1.c: Replace some add_1 by INCR.

	* gmp-impl.h (mpn_mulmod_bnm1_itch): New macro.

	* mpn/generic/mulmod_bnm1.c (mpn_mulmod_bnm1): Call mpn_mul_fft.
	(mpn_mulmod_bnm1_next_size): Adopt to SS FFT.

	* mpn/generic/mul_fft.c (mpn_mul_fft): Make it return high limb.
	(mpn_mul_fft_internal): Likewise.

	* mpn/generic/mulmod_bnm1.c: New file, by Niels Möller.
	* configure.in (gmp_mpn_functions): Add mulmod_bnm1.
	* gmp-impl.h: Add related declarations.
	* tune/tuneup.c: Tune MULMOD_BNM1_THRESHOLD.
	* tune/speed.h (SPEED_ROUTINE_MPN_MULMOD_BNM1): New macro.
	* tune/common.c (speed_mpn_mulmod_bnm1): New function.
	* Makefile.am (TUNE_MPN_SRCS_BASIC): Add mulmod_bnm1.c.

	* gmp-impl.h (mpn_kara_mul_n, mpn_kara_sqr_n): Remove declarations.
	* tune/common.c: Remove/rename kara functions.
	* tune/speed.h: Likewise.

	* tests/devel/try.c: Clean up usage of %p printf arguments.

	* gmp-impl.h: Update MUL/SQR MINSIZE macros to reflect new function
	names and limitations
	* tune/tuneup.c: Use updated macro names.
	* tune/speed.h: Likewise.
	* tests/devel/try.c: Test new mul/sqr functions, remove old tests.

2009-10-29  Niels Möller  <nisse@lysator.liu.se>

	* tune/speed.c: Added support for mpn_toom4_sqr,

	* tune/speed.h (SPEED_ROUTINE_MPN_TOOM4_SQR): New macro.
	(SPEED_ROUTINE_MPN_KARA_MUL_N): Deleted.
	(SPEED_ROUTINE_MPN_TOOM3_MUL_N): Deleted.
	(SPEED_ROUTINE_MPN_TOOM2_SQR): Use mpn_toom2_sqr_itch.

	* gmp-impl.h (mpn_toom3_mul_n, mpn_toom3_sqr_n): Remove
	declarations.
	(mpn_toom2_sqr_itch): Add margin for recursive calls.

2009-10-28  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/mul_n.c (mpn_kara_mul_n): Deleted old Karatsuba
	implementation.
	(mpn_kara_sqr_n): Likewise deleted.

	* mpn/generic/mul_n.c (mpn_sqr_n): Use mpn_toom2_sqr and
	mpn_toom3_sqr, not the old implementations.

	* gmp-impl.h (MPN_TOOM3_MUL_N_TSIZE): Deleted, replaced by
	mpn_toom33_mul_itch.
	(MPN_TOOM3_SQR_N_TSIZE): Deleted, replaced by
	mpn_toom3_sqr_itch.
	(mpn_toom33_mul_itch): Needs more scratch.
	(mpn_toom3_sqr_itch): Likewise.
	* tune/speed.h (SPEED_ROUTINE_MPN_TOOM3_MUL_N): Use
	mpn_toom33_mul_itch.
	(SPEED_ROUTINE_MPN_TOOM3_SQR_N): Use mpn_toom3_sqr_itch.
	* mpn/generic/mul_n.c (mpn_mul_n): Use mpn_toom33_mul_itch.
	(mpn_sqr_n): Use mpn_toom3_sqr_itch.

	* mpn/generic/toom33_mul.c (mpn_toom33_mul): Avoid TMP_ALLOC. Needs
	some more supplied scratch instead.
	* mpn/generic/toom3_sqr.c (mpn_toom3_sqr): Likewise.

2009-10-26  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (invert_pi1): Streamline, as suggested by Niels.

2009-10-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/bdiv_q.c: Update to call new functions.
	* mpn/generic/bdiv_qr.c: Likewise.
	* mpn/generic/binvert.c: Likewise.
	* mpn/generic/divexact.c: Likewise.
	* mpn/generic/divis.c: Likewise.
	* mpn/generic/perfpow.c: Likewise.
	* mpn/generic/tdiv_qr.c: Likewise.
	* mpn/generic/dcpi1_bdiv_q.c: New file.
	* mpn/generic/dcpi1_bdiv_qr.c: New file.
	* mpn/generic/dcpi1_div_q.c: New file.
	* mpn/generic/dcpi1_div_qr.c: New file.
	* mpn/generic/dcpi1_divappr_q.c: New file.
	* mpn/generic/sbpi1_bdiv_q.c: New file.
	* mpn/generic/sbpi1_bdiv_qr.c: New file.
	* mpn/generic/sbpi1_div_q.c: New file.
	* mpn/generic/sbpi1_div_qr.c: New file.
	* mpn/generic/sbpi1_divappr_q.c: New file.
	* mpn/generic/dc_bdiv_q.c: Removed.
	* mpn/generic/dc_bdiv_qr.c: Removed.
	* mpn/generic/dc_div_q.c: Removed.
	* mpn/generic/dc_div_qr.c: Removed.
	* mpn/generic/dc_divappr_q.c: Removed.
	* mpn/generic/sb_bdiv_q.c: Removed.
	* mpn/generic/sb_bdiv_qr.c: Removed.
	* mpn/generic/sb_div_q.c: Removed.
	* mpn/generic/sb_div_qr.c: Removed.

	* configure.in (gmp_mpn_functions): Add new division functions, remove
	obsolete division functions.

	* gmp-impl.h: Add declarations of new division functions, remove
	corresponding obsolete declarations.
	(gmp_pi1_t, gmp_pi2_t): New types.
	(invert_pi1): New macro for computing 2/1 and 3/2 inverses.

2009-10-23  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h (mpn_toom62_mul_itch): New function.

	* tests/mpn/t-toom53.c: New test program.
	* tests/mpn/t-toom62.c: New test program.

2009-10-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/get_d.c: Fix code handling denorms for 64-bit machines.
	* tests/mpf/t-get_d.c (test_denorms): New function.

2009-10-23  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/toom52_mul.c (mpn_toom52_mul): Use supplied scratch
	space, not TMP_ALLOC. Interface change, now requires input sizes
	such that s + t >= 5.

	* gmp-impl.h (mpn_toom52_mul_itch): New function.

	* tests/mpn/t-toom52.c: New test program.

2009-10-22  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/sqr_basecase.asm: Tune for speed and a 7% size decrease.

2009-10-22  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/t-toom44.c: New test program.
	* tests/mpn/t-toom33.c: New test program.

	* tests/mpn/toom-shared.h (main): Reorganized input generation.
	Users are now supposed to define macros MAX_AN, MIN_BN and MAX_BN.
	Updated existing toom test programs.

2009-10-22  Torbjorn Granlund  <tege@gmplib.org>

	* tests/devel/try.c: Fix typos in last change.

2009-10-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/asm-defs.m4 (define_mpn): Add mullow_basecase.

	* tests/devel/try.c: Test mpn_mullow_n.

	* tests/refmpn.c (refmpn_mullow_n): New function.
	* tests/tests.h: Declare it.

2009-10-21  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/toom-shared.h (main): Check for writes outside of the
	product or scratch area.

	* gmp-impl.h (mpn_toom43_mul_itch): New function.

	* mpn/generic/toom43_mul.c (mpn_toom43_mul): Use supplied scratch
	space, not TMP_ALLOC. Interface change, now requires input sizes
	such that s + t >= 5.

2009-10-20  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/toom-shared.h (MIN_BLOCK): New constant, which can be
	overridden by users. Needed by t-toom42 and t-toom43.

	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-toom32,
	t-toom42 and t-toom43.
	* tests/mpn/t-toom43.c: New test program.
	* tests/mpn/t-toom42.c: New test program.
	* tests/mpn/t-toom32.c: New test program.

	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-toom22.
	* tests/mpn/t-toom22.c: New test file.
	* tests/mpn/toom-shared.h: New file. Test framework for Toom
	functions.

2009-10-14  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (mpn_hgcd_itch): Thanks to the new
	mpn_matrix22_mul_strassen, the scratch need is reduced by 16%.

2009-10-14  Marco Bodrato  <bodrato@mail.dm.unipi.it>

	* mpn/generic/matrix22_mul.c (mpn_matrix22_mul_strassen): New
	Strassen-like algorithm, to reduce the amount of temporary
	storage.
	(mpn_matrix22_mul_itch): Updated to reflect the reduced storage
	need.

2009-10-03  Torbjorn Granlund  <tege@gmplib.org>

	* Rename mpn_addsub_n to mpn_add_n_sub_n.

2009-10-01  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/tdiv_qr.c: Call mpn_divrem_1 and mpn_dc_div_qr instead of
	old functions.

	* mpn/generic/mul_n.c: Call toom22 and toom33 instead of old functions.

	* mpn/generic/toom42_mul.c (TOOM42_MUL_N_REC): Renamed from
	TOOM22_MUL_N_REC.  Unconditionally call the generic mpn_mul_n.
	* mpn/generic/toom32_mul.c: Analogous changes.

2009-09-28  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86_64/invert_limb.asm: Rewrite. Exploit cancellation in the
	Newton iteration.

2009-09-27  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86/invert_limb.asm: Reduce register usage. Eliminated $1
	arguments to add, sub and shift.

2009-09-25  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86/invert_limb.asm: New file.

2009-09-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom33_mul.c: Use new toom functions for all recursive
	products.
	* mpn/generic/toom3_sqr.c: Likewise.
	* mpn/generic/toom44_mul.c: Likewise.
	* mpn/generic/toom4_sqr.c: Likewise.

	* mpn/generic/add_n.c: Relax operand overlap ASSERTs.
	* mpn/generic/sub_n.c: Likewise.

2009-09-15  Torbjorn Granlund  <tege@gmplib.org>

	Suggested by Uwe Mueller:
	* printf/doprnt.c: Use "%ld" for exponent printing.
	* printf/doprntf.c (__gmp_doprnt_mpf): Make expval "long".

2009-09-14  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Handle mingw64.
	* gmp-impl.h (gmp_intptr_t): Declare.
	* tests/amd64check.c (calling_conventions_values): Use CNST_LIMB.
	* tests/memory.c: Use gmp_intptr_t; print pointers using C90 "%p".
	* tests/misc.c: Use gmp_intptr_t.
	* tests/mpq/t-get_str.c: Print pointers using C90 "%p".

2009-08-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mod_1_1.c (mpn_mod_1_1p_cps): Remove silly ASSERT code.

	* mpn/asm-defs.m4 (define_mpn): Remove mod_1s_1p, add mod_1_1p.

	* mpn/arm/invert_limb.asm: Complete rewrite.

	* longlong.h: Document LONGLONG_STANDALONE and NO_ASM.

2009-08-05  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/dive_ui.c (check_random): Avoid zero divisors.

2009-07-31  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mod_1_1.c: Tweak to handle any modulus (possibility
	pointed out by Per Austrin).
	(mpn_mod_1_1p): Renamed from mpn_mod_1s_1p.
	(mpn_mod_1_1p_cps): Renamed from mpn_mod_1s_1p_cps.
	*mpn/generic/mod_1.c (mpn_mod_1): Reorganise to call mpn_mod_1_1p for
	any modulus.

2009-07-28  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Pass arch for x86 also in 64-bit mode.

2009-07-26  Torbjorn Granlund  <tege@swox.com>

	* config.guess (_cpuid): Recognise more Intel "Core" processors.

2009-07-13  Torbjorn Granlund  <tege@gmplib.org>

	* mpf/eq.c: Rewrite.

	* tests/mpf/t-eq.c: New test.

2009-07-06  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (__mp_bases): Remove this alias.

	* mpf/get_str.c: Use less overflow prone expression for computing limb
	allocation.
	* mpz/inp_str.c: Likewise.
	* mpf/set_str.c: Likewise.
	* mpz/set_str.c: Likewise.

2009-07-03  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcd_1.c (mpn_gcd_1): Use masking tricks to reduce
	the number of branches in the loop.

2009-06-28  Torbjorn Granlund  <tege@gmplib.org>

	* demos/factorize.c (factor_using_pollard_rho): Rewrite.

	* mpz/clears.c: New file.
	* mpq/clears.c: New file.
	* mpf/clears.c: New file.
	* gmp-h.in (mpz_clears, mpq_clears, mpf_clears): Declare.
	* mpz/Makefile.am: Add clears.c.
	* mpq/Makefile.am: Add clears.c.
	* mpf/Makefile.am: Add clears.c.
	* Makefile.am: Add these also to respective OBJECTS variables.
	* doc/gmp.texi: Document inits function and clears functions.

2009-06-20  Torbjorn Granlund  <tege@gmplib.org>

	* mp-h.in (mp_bitcnt_t): Declare here too.

2009-06-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpq/inits.c: New file.
	* mpf/inits.c: New file.
	* gmp-h.in (mpz_inits, mpq_inits, mpf_inits): Declare .

	* mpn/generic/remove.c: New file.
	* configure.in (gmp_mpn_functions): Add remove.
	* gmp-impl.h (mpn_remove): Declare.

	* gmp-h.in (mp_bitcnt_t): New basic type.
	* mpn/generic/perfpow.c (mp_bitcnt_t): Remove private definition.

	* mpn/generic/bdiv_qr.c: Make it actually work.

	* mpn/x86_64/core2/aorsmul_1.asm: Rewrite to use shorter pipeline and
	to need fewer registers.

2009-06-17  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/rsh1aors_n.asm: New file.
	* mpn/x86_64/rsh1add_n.asm: Remove.
	* mpn/x86_64/rsh1sub_n.asm: Remove.

	* mpz/inits.c: New file.

	* gen-trialdivtab.c: Wrap limb constants into CNST_LIMB.

	With Martin Boij:
	* mpn/generic/perfpow.c (binv_root, binv_sqroot): Change from being
	recursive to being iterative.
	(mpn_perfect_power_p): Reorganise temp memory usage to avoid a buffer
	overrun.  Trim allocation of next and prev.  Never create oversize
	products in the multiplicity binary search.

	* mpn/generic/dc_div_q.c: Add missing TMP_FREE.

2009-06-16  Torbjorn Granlund  <tege@gmplib.org>

	Revert:
	* mpn/generic/perfpow.c (perfpow): Test exponents up to ub, inclusive.

2009-06-16  Martin Boij  <mboij@kth.se>

	* mpn/generic/perfpow.c (logs): Use more conservative table.

2009-06-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/pa64/aors_n.asm: New file.
	* mpn/pa64/add_n.asm: Remove.
	* mpn/pa64/sub_n.asm: Remove.

	* mpn/generic/perfpow.c (perfpow): Test exponents up to ub, inclusive.

2009-06-14  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bdiv_q_1.asm: Optimise away a mov insn.
	* mpn/x86_64/dive_1.asm: Likewise.

	* mpn/generic/perfpow.c (binv_root): Use mpn_bdiv_q_1, not
	mpn_divexact_itch for 2-adic division.
	(all functions): Micro optimise.

	* Makefile.am (libmp_la_SOURCES): Add nextprime.c.

2009-06-13  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-h.in (mpn_perfect_power_p): Declare.
	* configure.in (gmp_mpn_functions): Add perfpow.
	* mpz/perfpow.c: Now trivial, simply calls mpn_perfect_power_p.

2009-06-13  Martin Boij  <mboij@kth.se>

	* mpn/generic/perfpow.c: New file.
	* tests/mpz/t-perfpow.c: Rewrite.

2009-06-12  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/bdiv_qr.c: New file.
	* mpn/generic/bdiv_q.c: New file.
	* configure.in (gmp_mpn_functions): Add bdiv_qr and bdiv_q.
	* gmp-impl.h: Declare new functions.

	* nextprime.c: New file.
	* gmp-impl.h (gmp_primesieve_t, gmp_init_primesieve, gmp_nextprime):
	Declare.
	* Makefile.am (libgmp_la_SOURCES): Add nextprime.c.

2009-06-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/trialdiv.c: New file.
	* gen-trialdivtab.c: New file.
	* configure.in (gmp_mpn_functions): Add trialdiv.
	* gmp-impl.h (mpn_trialdiv): Declare
	* Makefile.am: Add rules for gen-trialdivtab and trialdiv.

	* longlong.h (arm count_leading_zeros): Define for armv5.

	* gmp-impl.h: Move down toom itch functions to after we've #defined
	all THRESHOLDs.

	* dumbmp.c (isprime): Replace with slightly less inefficient code.
	(mpz_tdiv_r): New function.

2009-06-11  Niels Möller  <nisse@lysator.liu.se>

	Support for mpn_toom32_mul in speed:
	* tune/speed.c (routine): Added mpn_toom32_mul.
	* tune/speed.h (SPEED_ROUTINE_MPN_TOOM32_MUL): New macro.
	* tune/common.c (speed_mpn_toom32_mul): New function.

	* gmp-impl.h (mpn_toom32_mul_itch): Count scratch space needed
	for the calls to mpn_toom22_mul.
	(ABOVE_THRESHOLD): Moved this and related macros so it can be used
	by mpn_toom32_mul_itch.
	(mpn_toom22_mul_itch): Count scratch space for recursive calls.

2009-06-11  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/k7/mod_1_4.asm: New file, mainly for k7, but perhaps useful
	also for k6 and non-sse p6.

2009-06-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/mod_1_4.asm: Minor size reducing tweaks.

	* mpn/x86/mod_1.asm: Remove obsolete file.
	* mpn/x86/k7/mmx/mod_1.asm: Likewise.
	* mpn/x86/pentium4/sse2/mod_1.asm: Likewise.
	* mpn/x86/p6/mod_1.asm: Likewise.
	* mpn/x86/pentium/mod_1.asm: Likewise.

2009-06-08  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/toom4_sqr.c (mpn_toom4_sqr): Reorganized, to reduce
	the need for scratch space, and get rid of TMP_ALLOC. Also use
	mpn_toom_eval_dgr3_pm1.

	* mpn/generic/toom_interpolate_6pts.c (mpn_toom_interpolate_6pts):
	Stricter ASSERTs based on maximum size of polynomial coefficients.
	Improved comments on the signedness of intermediate values.

2009-06-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom2_sqr.c: Make it actually work.

	* mpn/generic/toom3_sqr.c: Reduce local scratch space.

2009-06-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mul_fft.c (FFT_TABLE2_SIZE): Default to 200.
	(MUL_FFT_TABLE2_SIZE, SQR_FFT_TABLE2_SIZE): Let these decide
	FFT_TABLE2_SIZE if they are defined.
	(struct nk): Use bit field.

2009-06-05  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/toom44_mul.c (mpn_toom44_mult): Use
	mpn_toom_eval_dgr3_pm1.

	* mpn/generic/toom_eval_dgr3_pm1.c: New file.

	* mpn/generic/toom_interpolate_7pts.c (mpn_toom_interpolate_7pts):
	Minor cleanup, use mpn_add rather than mpn_add_n + MPN_INCR_U.

	* mpn/generic/toom44_mul.c (mpn_toom44_mul): Reorganized, to
	reduce the need for scratch space, and get rid of TMP_ALLOC.

2009-06-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom_interpolate_7pts.c: Fall back mpn_divexact_byN to
	mpn_bdiv_q_1_pi1, if the latter is NATIVE.

2009-06-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/bdiv_q_1.asm: New file.

	* configure.in (HAVE_NATIVE): Add recently added functions.
	(GMP_MULFUNC_CHOICES): Handle addlsh_n, sublsh_n, rsblsh_n.

	* tune/common.c (speed_mpn_bdiv_q_1, speed_mpn_bdiv_q_1_pi1):
	New functions.
	* tune/speed.c (routine): Add mpn_bdiv_q_1 and mpn_bdiv_q_1_pi1.
	* tune/speed.h (SPEED_ROUTINE_MPN_BDIV_Q_1_PI1): New #define.
	(SPEED_ROUTINE_MPN_BDIV_Q_1): Mew #define.

	* configure.in (gmp_mpn_functions): Add bdiv_q_1.
	* mpn/generic/bdiv_q_1.c: New file.
	* mpn/asm-defs.m4 (define_mpn): Add mpn_bdiv_q_1 and mpn_bdiv_q_1_pi1.
	* gmp-impl.h (mpn_bdiv_q_1, mpn_bdiv_q_1_pi1): Declare.

	* mpn/x86_64/lshift.asm: Cleanup.
	* mpn/x86_64/rshift.asm: Cleanup.

	* mpn/x86_64/addlsh1_n.asm: Removed.
	* mpn/x86_64/aorrlsh1_n.asm: Generalised addlsh1_n.asm to handle
	addlsh1_n and rsblsh1_n functionality.

	* tests/refmpn.c (refmpn_rsblsh1_n): New function.
	* tests/devel/try.c: Test mpn_rsblsh1_n.
	* tests/tests.h: Declare refmpn_rsblsh1_n.
	* tune/common.c (speed_mpn_rsblsh1_n): New function.
	* tune/speed.c (routine): Add mpn_rsblsh1_n.
	* tune/speed.h (mpn_rsblsh1_n): Declare.

	* configure.in (gmp_mpn_functions_optional): Add rsblsh1_n.
	(GMP_MULFUNC_CHOICES): Handle rsblsh1_n defined with a mulfunc.
	* mpn/asm-defs.m4 (define_mpn): Add rsblsh1_n.
	* gmp-impl.h (mpn_rsblsh1_n): Declare.

	* mpn/generic/toom32_mul.c: Consistently use TOOM22_MUL_N_REC.

2009-06-03  Marco Bodrato  <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom43_mul.c: New file.
	* mpn/generic/toom52_mul.c: New file.
	* mpn/generic/toom_interpolate_6pts.c: New file.

2009-06-03  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (gmp_mpn_functions): Add toom43_mul, toom52_mul, and
	toom_interpolate_6pts, but also some previously forgotten functions.
	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES): Likewise.
	* gmp-impl.h: Declare new functions. Sort toom function declarations.

	* gmp-impl.h: Rename  toom4_* flags enum to toom7_*.  Relevant C files
	updated.

	* mpn/generic/toom_interpolate_7pts (divexact_2exp): Remove.

2009-06-02  Torbjorn Granlund  <tege@gmplib.org>

	* demos/factorize.c: Add -q command line option.

2009-06-02  Marco Bodrato  <bodrato@mail.dm.unipi.it>

	* mpn/generic/toom_interpolate_7pts.c: Streamline, resulting in speed
	improvements.

	* mpn/generic/toom_interpolate_5pts.c: Likewise, but also completely
	do away with explicit scratch space.
	* gmp-impl.h (mpn_toom_interpolate_5pts): Update prototype.

	* mpn/generic/mul_n.c (mpn_toom3_sqr_n, mpn_toom3_mul_n):
	Update toom_interpolate_5pts call without scratch space parameter.
	* mpn/generic/toom3_sqr.c: Likewise.
	* mpn/generic/toom42_mul.c: Likewise.
	* mpn/generic/toom33_mul.c: Likewise.

	* mpn/generic/toom33_mul.c: Reduce local scratch space.
	* mpn/generic/toom32_mul.c: Rewrite to not use local scratch space.

2009-06-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom22_mul.c (TOOM22_MUL_MN_REC): New macro, use it for
	oo point.

2009-06-01  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mul.c: Loop to avoid excessive recursion in toom33 and
	toom44 slicing code.

	* mpz/remove.c: Correctly handle multiplicity that does not fit an int.

	* Makefile.am (dist-hook): Check library version consistency.

	* mpn/generic/mul.c: Rewrite.

2009-05-29  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-divis.c (check_random): Create huge test operands.

	* mpn/generic/toom44_mul.c: Allocate temp space using one TMP_ALLOC
	call, not multiple TMP_SALLOC.
	* mpn/generic/toom4_sqr.c: Likewise.

	* gmp-impl.h (mpn_toom22_mul_itch): Replace totally wrong code.

	* mpn/generic/mullow_n.c: Relax overlap requirement implied by ASSERT.

	* mpn/generic/divis.c: Rewrite.

	* gmp-impl.h (mpn_mu_bdiv_qr): Now returns mp_limb_t.
	(mpn_toom2_sqr_itch): Simplify.

	* mpn/generic/mu_bdiv_qr.c: Implement properly.

2009-05-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mod_1_1.c: Add proper ASSERT functionality cps function.
	* mpn/generic/mod_1_2.c: Likewise.
	* mpn/generic/mod_1_3.c: Likewise.
	* mpn/generic/mod_1_4.c: Likewise.

	* tune: Add speed measuring of toom22, toom33, and toom44.

	* mpn/generic/toom22_mul.c: Handle potentially unbalanced coefficient
	product better.

2009-05-26  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-mul.c (ref_mpn_mul): Use mpn_toom44_mul in FFT range for
	better huge-operands performance.

2009-05-24  Torbjorn Granlund  <tege@gmplib.org>

	* acinclude.m4 (GMP_ASM_LSYM_PREFIX): Try "$L" too, before "$".

2009-05-23  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (mpn_mod_1s_1p,mpn_mod_1s_2p,mpn_mod_1s_3p,mpn_mod_1s_4p):
	Declare using __GMP_ATTRIBUTE_PURE.

	* tune/tuneup.c (tune_mod_1): Specify check_size for measuring mod_1_N
	functions.
	(one): Remove redundant size loop exit condition.

2009-05-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/pentium4/sse2/mod_1_4.asm: New file.
	* mpn/x86/p6/sse2/mod_1_4.asm: New file (grabbing pentium4 code).

2009-05-18  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-h.in (__GNU_MP_VERSION_MINOR): Bump to 4.
	(__GNU_MP_VERSION_PATCHLEVEL): Set to -1.

	* mpn/x86_64/mod_1_4.asm: New file.

	* mpn/asm-defs.m4: Correct names for mod_1_N functions.
	Add defines for corresponding cps functions.

	* mpn/generic/mod_1_2.c: Support any sizes > 1.
	* mpn/generic/mod_1_3.c: Likewise.
	* mpn/generic/mod_1_4.c: Likewise.

2009-05-12  Torbjorn Granlund  <tege@gmplib.org>

	* Version 4.3.1 released.

2009-05-11  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-h.in (__GNU_MP_VERSION_MINOR): Bump.

	* Makefile.am (LIBGMP_LT_*, LIBGMPXX_LT_*, LIBMP_LT_*):
	Bump version info.

2009-05-09  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz: Add MPZ_CHECK_FORMAT to many tests.

2009-05-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/pentium4/sse2/mul_basecase.asm: Avoid L(ret), "ret" is
	defined in x86-defs.m4.

2009-05-06  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/p6/aors_n.asm: Use L() for labels.
	* mpn/x86/pentium4/sse2/addmul_1.asm: Likewise.
	* mpn/x86/pentium4/sse2/mul_1.asm: Likewise.
	* mpn/x86/pentium4/sse2/mul_basecase.asm: Likewise.
	* mpn/x86/pentium4/sse2/sqr_basecase.asm: Likewise.
	* mpn/x86_64/lshift.asm: Likewise.
	* mpn/x86_64/rshift.asm: Likewise.

	* tests/cxx/t-locale.cc (point_string): Declare as extern "C" to
	placate compilers that mangle variable names.

2009-05-04  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-gcd.c: Generate operands that are multiple of each other.

2009-05-01  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-h.in (__GMP_EXTERN_INLINE): Support for more systems.
	(gmp_randinit_set): Add missing __GMP_DECLSPEC.

2009-04-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/neg_n.c: New file.
	* configure.in (gmp_mpn_functions): Add neg_n.
	* mpn/asm-defs.m4 (define_mpn): Add neg_n.
	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES): Add neg_n.c.
	* gmp-h.in: Handle mpn_neg_n properly.

	* mpn/generic/toom_interpolate_7pts.c (divexact_2exp): Nailify.

	* mpn/generic/gcdext.c: Change some MPN_NORMALIZE to
	MPN_NORMALIZE_NOT_ZERO.
	* mpn/generic/gcdext_lehmer.c: Likewise.
	Add a MPN_NORMALIZE_NOT_ZERO.

	* mpn/generic/binvert.c: Remove own mpn_neg_n.

	* tests/mpz/t-gcd.c: Add some MPZ_CHECK_FORMAT calls.

2009-04-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/Makefile.am (TARG_DIST): Add minithres.

	* mpn/generic/bdiv_dbm1c.c: Handle nails.

2009-04-26  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Recognise more POWER processor types.

2009-04-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/pentium4/sse2/popcount.asm: Work around Apple reloc bug.
	* mpn/x86/darwin.m4: Define symbol "DARWIN".

2009-04-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/powm.c (mpn_redc_n): Use ASSERT_ALWAYS, not abort().
	* mpn/generic/powm_sec.c: Likewise.

	* mpn/powerpc64/aix.m4 (EXTERN_FUNC): New define.  Add dummy variants
	for other m4 files.
	* mpn/powerpc64/mode64/divrem_1.asm: Use EXTERN_FUNC.
	* mpn/powerpc64/mode64/divrem_1.asm: Likewise.

2009-04-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/x86_64-defs.m4 (JUMPTABSECT): New define.
	* mpn/x86_64/darwin.m4: Likewise.
	* mpn/x86_64/sqr_basecase.asm: Rework switch code using JUMPTABSECT.

	* tune/common.c (speed_mpn_hgcd, speed_mpn_hgcd_lehmer):
	Remove an unused variable.

	* mpn/x86/x86-defs.m4 (LEA): Get SIZE arguments right.

2009-04-14  Torbjorn Granlund  <tege@gmplib.org>

	* Version 4.3.0 released.

	* scanf/doscan.c (__gmp_doscan): Pad 3-operand scanf call with dummy
	argument.
	* scanf/sscanffuns.c (scan): Disable vsscanf variant for now.

2009-04-13  Torbjorn Granlund  <tege@gmplib.org>

	* scanf/sscanffuns.c (scan): Rewrite to use stdarg.

	* tests/mpz/t-root.c: Rewrite.  Add unconditional gcc 4.3.2 tests.

2009-04-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/powm.c: New file.
	* mpn/generic/powlo.c: New file.
	* mpn/generic/powm_sec.c: New file.
	* configure.in (gmp_mpn_functions): List new functions.

2009-04-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/urandomm.c: Amend last fix.

2009-04-06  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Support Sun cc for x86_64.

	* mpz/urandomm.c: Handle operand overlap.

2009-03-11  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (powerpc): Brave removing -Wa,-mppc64, in the hope that
	GCC now passes the proper options.

2009-03-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/divrem_1.asm: Add a nop to save a cycle in unnormalised
	case.

2009-03-05  Torbjorn Granlund  <tege@gmplib.org>

	* ia64/gmp-mparam.h, arm/gmp-mparam.h, x86/p6/mmx/gmp-mparam.h,
	pa32/hppa2_0/gmp-mparam.h sparc32/v9/gmp-mparam.h: Update.

2009-03-03  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/ia64/bdiv_dbm1c.asm: Accept/return carry.

2009-03-02  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (64-bit sparc/solaris): Pass -xO3, not -O3 to solaris
	system compiler.

2009-03-01  Torbjorn Granlund  <tege@gmplib.org>

	* longlong.h (mips, powerpc): Provide assembly-free umul_ppmm for newer
	gcc.

2009-02-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/redc_2.c: Remove code for testing and timing.  Update
	to current FSF header.
	* mpn/generic/redc_1.c: Update to current FSF header.

2009-01-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/powm.c (redc): Remove.
	(mpz_powm): Use mpn_redc_1 instead of redc.

	* tests/mpz/t-powm.c: Rewrite reference code.

2009-01-18  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz: Increase reps for many tests.

	* mpn/generic/rootrem.c (mpn_rootrem_internal): Use MPN_DECR_U instead of
	mpn_sub_1 (works around gcc 4.3 bugs and is also faster).

2009-01-16  Torbjorn Granlund  <tege@gmplib.org>

	* tests/tests.h: Declare refmpn_divrem_2.

2009-01-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/perfpow.c: Add TMP_FREE before every return statement.

	* mpn/generic/rootrem.c (mpn_rootrem_internal): Add a missing TMP_FREE.

	* configure.in (gcc_cflags, gcc_64_cflags): Revert from -O3 to -O2,
	the change was accidental and cause too much miscompilation.

2009-01-14  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_mod_1): Run MOD_1_x_THRESHOLD tests also when
	longlong.h specified UDIV_PREINV_ALWAYS.

	* mpn/generic/mod_1.c (mpn_mod_1): Properly check for normalisation
	divisor.

2009-01-13  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_mod_1): Tune for MOD_1_1_THRESHOLD,
	MOD_1_2_THRESHOLD, and MOD_1_4_THRESHOLD.

	* mpn/generic/mod_1.c: Rewrite.
	* mpn/generic/mod_1_1.c: New file.
	* mpn/generic/mod_1_2.c: New file.
	* mpn/generic/mod_1_3.c: New file.
	* mpn/generic/mod_1_4.c: New file.
	* configure.in (gmp_mpn_functions): Add mod_1_*.
	* mpn/asm-defs.m4 (define_mpn): Add mod_1_*.
	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES): Add mod_1_*.c.
	* gmp-impl.h: Declare new mpn_mod_1s_* functions and associated
	THRESHOLD macros.
	(udiv_rnd_preinv): New macro.

2009-01-12  Torbjorn Granlund  <tege@gmplib.org>

	* tune/tuneup.c (tune_gcd_dc,tune_gcdext_dc): Lower step_factor to 0.1.

2009-01-08  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-nextprime.c: New test file.
	* tests/mpz/Makefile.am (check_PROGRAMS): Add t-nextprime.

	From Niels Möller:
	* mpz/nextprime.c: Handle large prime gaps by limiting incr.

2009-01-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/and.c, mpz/ior.c, mpz/xor.c: Re-read only necessary source
	pointers after reallocation.  Misc cleanup.

	* gmp-impl.h (MPN_TOOM44_MAX_N): New define, replaces MPN_TOOM3_MAX_N.

	* mpn/x86/fat/diveby3.c: New file.

2008-12-30  Niels Möller  <nisse@lysator.liu.se>

	* doc/gmp.texi (Greatest Common Divisor Algorithms): Updated
	section on GCD algorithms.

2008-12-29  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi (Multiplication Algorithms): Add descriptions of Toom-4
	and unbalanced multiplication.
	(Radix to Binary): Add warning that text is outdated,
	(Contributors): Fix typos.

	* mpn/generic/toom*.c: Use coherent MAYBE_ macros for trimming
	unreachable recursive functions.
	* gmp-impl.h: Update toom itch functions.

	* mpn/x86_64/sqr_basecase.asm: Slightly increase stack allocation, to
	placate tuneup.

2008-12-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/pentium4/aors_n.asm: Tune prologue code.

	* mpn/x86_64/pentium4/aorslsh1_n.asm: New file.

	* mpn/x86_64/darwin.m4: Define symbol "DARWIN".
	* mpn/x86_64/invert_limb.asm: Work around darwin quirks.

	* mpn/x86_64/sqr_basecase.asm: Further optimize, support Darwin.

	* mpn/x86_64/invert_limb.asm: New file.

2008-12-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/core2/aorslsh1_n.asm: New file.

2008-12-26  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/perfpow.c: Handle negative arguments properly.
	* tests/mpz/t-perfpow.c: New file.
	* tests/mpz/Makefile.am (check_PROGRAMS): Add t-perfpow.

2008-12-23  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-mul.c (dump_abort): Improve error message.

	* gcd.c gcd_subdiv_step.c gcdext.c gcdext_subdiv_step.c:
	Remove private mpn_zero_p.

	* tune/tuneup.c (tune_mul): Tune for MUL_TOOM44_THRESHOLD.
	(tune_sqr): Tune for SQR_TOOM4_THRESHOLD.

	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Add toom44_mul.c and
	toom4_sqr.c.

	* configure.in (gmp_mpn_functions): Toom function updates.

	* Rename mpn/mul_toomMN.c to mpn/toomMN_mul.c.  Function names changed
	accordingly.

	* mpn/toomMN_mul.c: Add scratch parameter.  Do recursive multiplies
	properly.  Misc tuning.  Remove CHECK and TIMING code.

	* mpn/toom2_sqr.c, mpn/toom3_sqr.c, mpn/toom4_sqr.c: New files.

	* gmp-impl.h (mpn_toomMN_mul_itch): Several new functions.
	(mpn_zero_p): New functions.
	Add various TOOM4/TOOM44 related parameters.
	Update mpn_toomMN_mul prototypes.

	* mpn/generic/mul_n.c (mpn_mul_n): Call mpn_toom44_mul.  Use TMP_BALLOC
	instead of malloc.
	(mpn_sqr_n): Analogous changes.

	* mpn/generic/mul.c: Update unbalanced toom code to pass scratch space.

2008-12-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/nextprime.c: Add TMP_SDECL/MARK/FREE.

2008-12-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/sqrtrem.c (mpn_sqrtrem1): Rewrite, improve interface.
	(invsqrttab): New table, remove table approx_tab.
	(mpn_sqrtrem2): Optimize, update mpn_sqrtrem1 call.
	(mpn_sqrtrem): Update mpn_sqrtrem1 call.

2008-12-18  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/nextprime.c: Run 10 mpz_millerrabin tests (was 5).
	Give credit to authors.

	* mpn/x86_64/redc_1.asm: Align stack as mandated by ABI.

	* mpn/x86_64/divrem_2.asm: Add some comments.

	* mpn/x86_64/darwin.m4: New file.
	* configure.in: Use x86_64/darwin.m4.

2008-12-15  Torbjorn Granlund  <tege@gmplib.org>

	* doc/projects.html: Remove GCD and division projects, update text on
	multiplication.

	* doc/tasks.html: Add a caution about that the file is somewhat
	outdated.

2008-12-14  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/alpha/ev6/aorsmul_1.asm: New file (same code for mpn_addmul_1,
	much improved for mpn_submul_1).
	* mpn/alpha/ev6/addmul_1: File removed.
	* mpn/alpha/ev6/submul_1: File removed.

2008-12-09  Torbjorn Granlund  <tege@gmplib.org>

	From David Harvey:
	* mpn/x86_64/mul_basecase.asm: Further tweaks for code size and speed.

	* mpn/powerpc64/mode64/divrem_1.asm: Rewrite.

	* mpn/powerpc64/mode64/mul_basecase.asm: New file.

2008-12-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/powerpc64/mode64/gmp-mparam.h: New file.

	* gmp-impl.h: Additional cleanups.
	(mpn_set_str_compute_powtab): New prototype.
	(mpn_powm, mpn_powlo): New prototypes.

	* mpz/pow_ui.c: Handle some small exponents locally.

2008-12-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/set_str.c: Remove prototypes (they are in gmp-impl.h).

	* tune/set_strs.c, tune/set_strb.c: Make prototypes effective by moving
	the #define mpn_set_str* before including gmp-impl.h.

	* All files: Change _PROTO => __GMP_PROTO.

	* tune/speed.c (routine): Remove non-working choice mpn_set_str_subquad.
	* tune/common.c (speed_mpn_dc_set_str): Remove, it is broken.

	* mpn/generic/toom_interpolate_7pts.c (divexact_2exp): Make this static,
	and inline it.

	* gmp-impl.h: Major cleanup.
	(Remove formal parameter names.  Use __GMP_PROTO consistently.  Move
	__GMP_PROTO and __MPN use to adjacent lines for declared function.
	Fix typos.  Remove code inside #if 0.)

	* configure.in (gmp_mpn_functions): Add mul_toom33.  Reformat.

2008-12-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/redc_1.c: New file.
	* mpn/generic/redc_2.c: New file.

	* configure.in (gmp_mpn_functions): List redc_1 and redc_2.
	(HAVE_NATIVE): Likewise.

	* tune/common.c (speed_mpn_redc_1): Renamed from speed_redc.
	* tune/speed.c (routine): Remove "redc", and "mpn_redc_1".
	* tune/speed.h (SPEED_ROUTINE_REDC_1): Renamed from SPEED_ROUTINE_REDC.
	Updated call.
	* tune/tuneup.c (tune_powm): Update redc call.

2008-12-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/sqr_basecase.asm: Inline a combined diagonal product code
	and addlsh1 loop.  Misc cleanup.

2008-12-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/sqr_basecase.asm: New file.

2008-11-30  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/sqr_basecase.c: Fix typo in mpn_addmul_2s variant.

2008-11-28  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/redc_1.asm: Rewrite.

2008-11-27  Torbjorn Granlund  <tege@gmplib.org>

	* tests/refmpn.c (refmpn_redc_1): New function.

2008-11-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/k7/aorsmul_1.asm: Actually handle mpn_submul_1.

2008-11-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/divrem_1.asm: Rewrite.

	* alpha/divrem_2.asm: New file.
	* powerpc32/divrem_2.asm: New file.
	* powerpc64/mode64/divrem_2.asm: New file.
	* x86/divrem_2.asm: New file.
	* x86_64/divrem_2.asm: New file.
	* tests/refmpn.c (refmpn_divrem_2): New function.

2008-11-22  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/k7/mul_1.asm: Rewrite for smaller size and better speed.
	* mpn/x86/k7/aorsmul_1.asm: Likewise.

	* acinclude.m4 (GMP_VERSION): Include last component even when zero.

2008-11-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/README: Rewrite.

	* tests/devel/try.c (malloc_region, mprotect_maybe): Add casts for
	printf type correctness.

	* gmp-h.in (__GNU_MP_VERSION_MINOR): Bump.

	* Makefile.am (LIBGMP_LT_*, LIBGMPXX_LT_*, LIBMP_LT_*):
	Bump version info.

2008-11-20  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h: Rename modlimb_invert to binvert_limb.
	* tune/speed.h: Likewise.
	* tune/modlinv.c: Likewise.
	* tune/common.c: Likewise.
	* tests/t-modlinv.c: Likewise.
	* tests/t-constants.c: Likewise.
	* mpn/sparc64/mode1o.c: Likewise.
	* mpn/alpha/dive_1.c: Likewise.
	* mpn/sparc64/dive_1.c: Likewise.
	* mpn/generic/mode1o.c: Likewise.
	* mpn/generic/dive_1.c: Likewise.
	* mpn/generic/bdivmod.c: Likewise.
	* mpn/alpha/mode1o.asm: Likewise.
	* mpn/asm-defs.m4: Likewise.
	* mpn/ia64/mode1o.asm: Likewise.
	* mpn/powerpc32/README: Likewise.
	* mpn/powerpc32/mode1o.asm: Likewise.
	* mpn/powerpc64/mode64/dive_1.asm: Likewise.
	* mpn/powerpc64/mode64/mode1o.asm: Likewise.
	* mpn/x86/dive_1.asm: Likewise.
	* mpn/x86/k6/mmx/dive_1.asm: Likewise.
	* mpn/x86/k6/mode1o.asm: Likewise.
	* mpn/x86/k7/dive_1.asm: Likewise.
	* mpn/x86/k7/mode1o.asm: Likewise.
	* mpn/x86/p6/dive_1.asm: Likewise.
	* mpn/x86/p6/mode1o.asm: Likewise.
	* mpn/x86/pentium/dive_1.asm: Likewise.
	* mpn/x86/pentium/mode1o.asm: Likewise.
	* mpn/x86/pentium4/sse2/dive_1.asm: Likewise.
	* mpn/x86/pentium4/sse2/mode1o.asm: Likewise.
	* mpn/x86_64/dive_1.asm: Likewise.
	* mpn/x86_64/mode1o.asm: Likewise.

	* mpn/x86_64/aors_n.asm: Replace with slightly faster, more alignment
	neutral loop.

2008-11-18  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Remove gcd_finda related declarations.
	* gmp-impl.h (mpn_gcd_finda): Remove declaration.
	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES): Remove gcd_finda.
	* mpn/asm-defs.m4: Remove define_mpn(gcd_finda).
	* mpn/x86/k6/gcd_finda.asm: Remove file.
	* tests/devel/try.c (param_init): Remove mpn_gcd_finda.
	(choice_array): Remove mpn_gcd_finda.
	* tests/mpn/t-instrument.c (check): Remove testing of mpn_gcd_finda.
	* tests/refmpn.c (refmpn_gcd_finda): Remove.
	* tests/tests.h (refmpn_gcd_finda): Remove declaration.
	* tune/common.c (speed_mpn_gcd_finda): Remove.
	* tune/gcd_finda_gen.c: Remove file.
	* tune/speed.h (speed_mpn_gcd_finda): Remove declaration.
	* tune/speed.c (routine): Remove mpn_gcd_finda entry.

	* tests/mpz/t-powm.c: Print test number when failing a test.

	* mpn/x86_64/redc_1.asm (CALL): Move from here...
	* mpn/x86_64/x86_64-defs.m4: ...to here.

	* gmp-impl.h (mpn_jacobi_base): Remove parameter names.

2008-11-11  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpf/t-conv.c: Add some specific tests, supplementing the random
	tests.

2008-11-09  Torbjorn Granlund  <tege@gmplib.org>

	* mpf/set_str.c: Default 'base' before letting exp_base inherit it.

	* tests/cxx/t-prec.cc: Use the right precision for all float constants.

2008-11-08  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi (Float Comparison): Update mpf_eq documentation.

	* mpf/eq.c: Compare the right number of bits.

2008-11-02  Torbjorn Granlund  <tege@gmplib.org>

	Undo, it made testing too slow:
	* tests/mpz/t-mul.c: Use slower geometric progression for operand
	sizes.

	* mpn/x86/k7/mod_34lsub1.asm: Use movzb for masking low 8 bits.

2008-10-31  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd2.c (div1): New function (taken from old gcdext
	implementation)
	(mpn_hgcd2): Use single precision for the second half of the work.

2008-10-30  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/p6/sse2/gmp-mparam.h: New file.

2008-10-29  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (x86 fat_path): Add "x86/p6/sse2".

	* mpn/x86/fat/fat.c (__gmpn_cpuvec_init): Recognize sse2 capable p6
	(pentiumm, core2).

	* mpn/x86/p6/sse2/mul_1.asm: New file.
	* mpn/x86/p6/sse2/addmul_1.asm: New file.
	* mpn/x86/p6/sse2/submul_1.asm: New file.
	* mpn/x86/p6/sse2/mul_basecase.asm: New file.
	* mpn/x86/p6/sse2/sqr_basecase.asm: New file.
	* mpn/x86/p6/sse2/popcount.asm: New file.

	* mpn/x86/fat/fat.c (__gmpn_cpuvec_init): Handle "extended" fields for
	model and family.

2008-10-28  Torbjorn Granlund  <tege@gmplib.org>

	From Mickael Gastineau:
	* gmp-h.in (gmp_urandomm_ui, gmp_urandomb_ui): Add __GMP_DECLSPEC.

2008-10-27  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-h.in (mpn_gcdext_1): Remove bogus __GMP_ATTRIBUTE_PURE.

2008-10-27  Niels Möller  <nisse@lysator.liu.se>

	* tune/common.c (speed_mpn_hgcd): Call mpn_hgcd_matrix_init once
	for each call to mpn_hgcd.
	(speed_mpn_hgcd_lehmer): Likewise.

2008-10-26  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Point to p6/sse2 for pentiumm and core2.

	* gmp-impl.h (mpn_add_nc, mpn_sub_nc): Move these macros to after fat
	definitions.

	* tune/common.c, tune/speed.c, tune/speed.h:
	Add speed measurement of mpn_bdiv_dbm1c.

2008-10-24  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/gmp-mparam.h (MUL_FFT_TABLE2, SQR_FFT_TABLE2): Extend.

	* mpz/nextprime.c: Move declarations to function beginning.

2008-10-23  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h (DECL_gcdext_1): Deleted.

2008-10-22  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/atom/aors_n.asm: New file.
	* mpn/x86_64/atom/gmp-mparam.h: New file.

2008-10-21  Torbjorn Granlund  <tege@gmplib.org>

	With Neils Möller:
	* mpz/nextprime.c: Rewrite.

	* tests/devel/try.c (main): Use strtol for 's' and 'S' optargs.

	* mpn/x86_64/pentium4/rshift.asm: Misc cleanups.
	* mpn/x86_64/pentium4/lshift.asm: Likewise.

	* mpn/x86_64/pentium4/aors_n.asm: Use fewer registers.

	* configure.in: Set up specific path for x86_64/atom.

2008-10-21  Niels Möller  <nisse@lysator.liu.se>

	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES): Removed
	qstack.c.
	* mpn/generic/qstack.c: Deleted obsolete file.

2008-10-20  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/core2/aorsmul_1.asm: New file.

2008-10-19  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/aors_n.asm: Remove redundant MULFUNC_PROLOGUE.

	* gmp-impl.h (popc_limb): Remove redundant checks of GMP_LIMB_BITS
	inside several of these macros.

2008-10-17  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-mul.c: Use slower geometric progression for operand
	sizes.  Do every other tests for same size operands.

2008-10-15  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/mul_basecase.asm: Simplify addressing in epilogue.

	* mpn/mips64/divrem_1.asm: Remove file, it is n32-only, and uses an old
	algorithm.

	* config.guess, config.sub, configure.in: Support Intel Atom processor.

2008-10-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpq/mul.c: Fix typo in last change.

2008-10-09  Torbjorn Granlund  <tege@gmplib.org>

	* tests/refmpn.c (refmpn_sb_divrem_mn): Work around a gcc bug.

2008-10-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpq/mul.c: Use TMP_ALLOC.  Cleanup.
	* mpq/div.c: Likewise.

	* mpn/x86_64/mul_basecase.asm: Use lea directly for loading entry point
	addresses.

2008-10-09  Niels Möller  <nisse@lysator.liu.se>

	* mpn/x86/k7/gmp-mparam.h: Updated GCD-related values.

2008-10-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mul_fft.c (mpn_mul_fft_internal): Do store
	mpn_fft_norm_modF return value, if (rec).

2008-10-04  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/aorsmul_1.asm: Replace with faster code.
	* mpn/x86_64/mul_1.asm: Likewise.
	* mpn/x86_64/addmul_2.asm: Likewise.
	* mpn/x86_64/mul_2.asm: Likewise.
	* mpn/x86_64/mul_basecase.asm: Likewise.

2008-10-02  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/minithres/gmp-mparam.h: Update FFT values.

2008-10-02  Niels Möller  <nisse@lysator.liu.se>

	* hgcd.c (mpn_hgcd_matrix_mul): Fixed normalization bug.

2008-09-24  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Handle --enable-minithres.
	* mpn/minithres/gmp-mparam.h: Update all values.

2008-09-22  Torbjorn Granlund  <tege@gmplib.org>

	* tune/speed.c (routine): New entry for mpn_mul.
	* tune/speed.h (SPEED_ROUTINE_MPN_MUL): Renamed from
	SPEED_ROUTINE_MPN_MUL_BASECASE.
	(speed_mpn_mul): Renamed from speed_mpn_mul_basecase.
	(SPEED_ROUTINE_MPN_MUL): Allocate our own memory of xp operand.

	* tune/common.c: Corresponding changes.

2008-09-22  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcdext.c (hgcd_mul_matrix_vector): New function,
	replaces addmul2_n. Needs less copying.
	(mpn_gcdext): Use hgcd_mul_matrix_vector. Updated for interface
	change in mpn_gcdext_subdiv_step

	* mpn/generic/hgcd.c (hgcd_matrix_mul_1): Rewritten to use
	mpn_hgcd_mul_matrix1_vector.
	(hgcd_step): Updated for interface change in
	mpn_hgcd_mul_matrix1_inverse_vector.

	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_n): Updated for
	interface changes in mpn_hgcd_mul_matrix1_vector,
	mpn_hgcd_mul_matrix1_inverse_vector and mpn_gcdext_subdiv_step.

	* mpn/generic/gcd_lehmer.c (mpn_gcd_lehmer_n): Updated for
	interface change in mpn_hgcd_mul_matrix1_inverse_vector.

	* mpn/generic/gcdext_subdiv_step.c (mpn_gcdext_subdiv_step): Use
	separate scratch arguments for the quotient and for the cofactor
	update.

	* mpn/generic/hgcd2.c (mpn_hgcd_mul_matrix1_vector): Interface
	change. Store first element in rp and leave ap unmodified. No
	additional scratch space or copying needed. Callers that require
	modification in place still need to copy one of the inputs.
	(mpn_hgcd_mul_matrix1_inverse_vector): Likewise.

2008-09-22  Niels Möller <nisse@lysator.liu.se>  <nisse@king.swox.se>

	* mpn/generic/hgcd.c (hgcd_matrix_mul_1): Use mpn_addaddmul_1msb0.
	* mpn/generic/hgcd2.c (mpn_hgcd_mul_matrix1_vector): Likewise.

	* mpn/generic/gcd.c: Use libspeed for timing measurements.

	* gmp-impl.h: Declare mpn_addaddmul_1msb0.
	* mpn/asm-defs.m4: Added addaddmul_1msb0.
	* mpn/x86_64/addaddmul_1msb0.asm: New file.
	* configure.in (gmp_mpn_functions_optional): Added
	addaddmul_1msb0.
	(HAVE_NATIVE): List addaddmul_1msb0.

2008-09-21  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/get_str.c (GET_STR_DC_THRESHOLD): Remove default.
	(GET_STR_PRECOMPUTE_THRESHOLD): Likewise.
	Misc code cleanups.

	* gmp-impl.h (mpn_dc_set_str_itch): Allocate GMP_LIMB_BITS more limbs.

	Revert:
	* mpn/generic/set_str.c:
	(mpn_dc_set_str): Remove impossible case, replace by an ASSERT.

2008-09-18  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/alpha/ev6/gmp-mparam.h (DIVEXACT_BY3_METHOD): Define.

	* mpn/ia64/diveby3.asm: Remove.
	* mpn/x86/diveby3.asm: Remove.
	* mpn/x86/k6/diveby3.asm: Remove.
	* mpn/x86/k7/diveby3.asm: Remove.
	* mpn/x86/p6/diveby3.asm: Remove.
	* mpn/x86/pentium/diveby3.asm: Remove.
	* mpn/x86_64/diveby3.asm: Remove.
	* mpn/x86/pentium4/sse2/diveby3.asm: Remove.

	* configure.in (HAVE_NATIVE): List divexact_by3c.

	* gmp-impl.h (mpn_divexact_by3c): Override gmp-h.in's definition.
	(DIVEXACT_BY3_METHOD): Don't default to 0 if
	HAVE_NATIVE_mpn_divexact_by3c.

2008-09-18  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcd.c (main): Added code for tuning of CHOOSE_P.

	* mpn/generic/hgcd.c (mpn_hgcd_matrix_mul): Assert that inputs are
	normalized.

2008-09-17  Niels Möller <nisse@lysator.liu.se>  <nisse@king.swox.se>

	* mpn/generic/gcdext.c (mpn_gcdext): p = n/5 caused a
	slowdown for large inputs. As a compromise, use p = n/2 for the
	first iteration, and p = n/3 for the rest. Handle the first
	iteration specially, since the initial u0 and u1 are trivial.

	* mpn/x86_64/gmp-mparam.h (GCDEXT_DC_THRESHOLD): Reduced threshold
	from 409 to 390.

	* mpn/generic/gcdext.c (CHOOSE_P): New macro. Use p = n/5.
	(mpn_gcdext): Use CHOOSE_P, and generalized the calculation of
	scratch space.

	* tune/tuneup.c (tune_hgcd): Use default step factor.

	* mpn/x86_64/gmp-mparam.h: (GCD_DC_THRESHOLD): Reduced from 493 to
	412.

	* mpn/generic/gcd.c (CHOOSE_P): New macro, to determine the
	split when calling hgcd. Use p = 2n/3, as that seems better than
	the more obvious split p = n/2.
	(mpn_gcd): Use CHOOSE_P, and generalized the calculation of
	scratch space.

2008-09-16  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom_interpolate_7pts.c: Use new mpn_divexact_byN
	functions.

	* gmp-impl.h (mpn_divexact_by3, mpn_divexact_by5, mpn_divexact_by7,
	mpn_divexact_by9, mpn_divexact_by11, mpn_divexact_by13,
	mpn_divexact_by15): New macros, defined in terms of mpn_bdiv_dbm1.

	* configure.in (gmp_mpn_functions): List bdiv_dbm1c.
	(HAVE_NATIVE): Likewise.
	* mpn/asm-defs.m4: Define bdiv_dbm1c.
	* gmp-impl.h (mpn_bdiv_dbm1c): Declare.
	(mpn_bdiv_dbm1): New macro.
	* mpn/generic/bdiv_dbm1c.c: New file.
	* mpn/alpha/bdiv_dbm1c.asm: New file.
	* mpn/ia64/bdiv_dbm1c.asm: New file.
	* mpn/powerpc32/bdiv_dbm1c.asm: New file.
	* mpn/powerpc64/mode64/bdiv_dbm1c.asm: New file.
	* mpn/x86/bdiv_dbm1c.asm: New file.
	* mpn/x86_64/bdiv_dbm1c.asm: New file.

	* mpn/generic/diveby3.c: Add mpn_bdiv_dbm1c based function.
	Choose function depending on DIVEXACT_BY3_METHOD.
	* gmp-impl.h (DIVEXACT_BY3_METHOD): Provide default.

2008-09-16  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (mpn_hgcd_addmul2_n): Moved function to
	gcdext.c, where it is used.
	* mpn/generic/gcdext.c (addmul2_n): Moved and renamed, was
	mpn_hgcd_addmul2_n. Made static. Deleted input normalization.
	Deleted rn argument.
	(mpn_gcdext): Updated calls to addmul2_n, and added assertions.

	* gmp-impl.h (MPN_HGCD_MATRIX_INIT_ITCH): Increased storage by 4 limbs.
	(MPN_HGCD_LEHMER_ITCH): Reduced storage by one limb.
	(MPN_GCD_SUBDIV_STEP_ITCH): Likewise.
	(MPN_GCD_LEHMER_N_ITCH): Likewise.

	* mpn/generic/hgcd.c (mpn_hgcd_matrix_init): Use two extra limbs.
	(hgcd_step): Use overlapping arguments to mpn_tdiv_qr.
	(mpn_hgcd_matrix_mul): Deleted normalization code. Tighter bounds
	for the element size of the product. Needs two extra limbs of
	storage for the elements.
	(mpn_hgcd_itch): Updated storage calculation.

	* mpn/generic/gcd_subdiv_step.c (mpn_gcd_subdiv_step): Use
	overlapping arguments to mpn_tdiv_qr. Use mpn_zero_p.

	* mpn/generic/gcd.c (mpn_gcd): Use mpn_zero_p.

2008-09-15  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (mpn_hgcd_matrix_init): Updated for deleted
	tp pointer.
	(hgcd_matrix_update_q): Likewise.
	(mpn_hgcd_matrix_mul): Likewise.
	(mpn_hgcd_itch): Updated calculation of scratch space.

	* gmp-impl.h (struct hgcd_matrix): Deleted tp pointer.
	(MPN_HGCD_MATRIX_INIT_ITCH): Reduced storage.
	(mpn_hgcd_step, MPN_HGCD_STEP_ITCH): Deleted declarations.

2008-09-15  Niels Möller <nisse@lysator.liu.se>  <nisse@king.swox.se>

	* mpn/x86_64/gmp-mparam.h (MATRIX22_STRASSEN_THRESHOLD): New
	threshold.

	* mpn/generic/hgcd.c (mpn_hgcd_matrix_mul): Use mpn_matrix22_mul.
	(mpn_hgcd_itch): Updated calculation of scratch space. Use
	count_leading_zeros to get the recursion depth.

	* mpn/generic/gcd.c (mpn_gcd): Fixed calculation of scratch space,
	and use mpn_hgcd_itch.

2008-09-15  Niels Möller  <nisse@lysator.liu.se>

	* tune/tuneup.c (tune_matrix22_mul): New function.
	(all): Use it.

	* tune/common.c (speed_mpn_matrix22_mul): New function.

	* tune/Makefile.am (TUNE_MPN_SRCS_BASIC): Added matrix22_mul.c.

	* tests/mpn/t-matrix22.c: Use MATRIX22_STRASSEN_THRESHOLD to
	select sizes for tests.

	* gmp-impl.h (MATRIX22_STRASSEN_THRESHOLD): New threshold

	* configure.in (gmp_mpn_functions): Added matrix22_mul.
	* gmp-impl.h: Added declarations for mpn_matrix22_mul and related
	functions.

	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES): Added
	matrix22_mul.c.
	* tests/mpn/Makefile.am (check_PROGRAMS): Added t-matrix22.

	* tests/mpn/t-matrix22.c: New file.
	* mpn/generic/matrix22_mul.c: New file.

2008-09-11  Niels Möller  <nisse@king.swox.se>

	* tune/tuneup.c: Updated tuning of gcdext.

	* mpn/x86_64/gmp-mparam.h (GCDEXT_DC_THRESHOLD): Reduced threshold
	from 713 to 409.

2008-09-11  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h: Updated for gcdext changes.
	(GCDEXT_DC_THRESHOLD): New constant, renamed from
	GCDEXT_SCHOENHAGE_THRESHOLD.

	* mpn/generic/gcdext.c (compute_v): Accept non-normalized a and b
	as inputs.
	(mpn_gcdext): Rewrote and simplified. Now uses the new mpn_hgcd
	interface.

	* mpn/generic/hgcd.c (mpn_hgcd_addmul2_n): Renamed from addmul2_n
	and made non-static. Changed interface to take non-normalized
	inputs, and only two size arguments.
	(mpn_hgcd_matrix_mul): Simplified using new mpn_hgcd_addmul2_n.

	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_itch): Deleted
	function.
	(mpn_gcdext_lehmer_n): Renamed from mpn_gcd_lehmer. Now takes
	inputs of equal size. Moved the code for the division step to a
	separate function...
	* mpn/generic/gcdext_subdiv_step.c (mpn_gcdext_subdiv_step): New
	file, new function.

	* configure.in (gmp_mpn_functions): Added gcdext_subdiv_step.

2008-09-10  Torbjorn Granlund  <tege@gmplib.org>

	* tests/devel/anymul_1.c: Include <string.h>.

	* gmp-h.in: Unconditionally include <cstdio>.

2008-09-10  Niels Möller  <nisse@lysator.liu.se>

	* tune/common.c: #if:ed out speed_mpn_gcd_binary and
	speed_mpn_gcd_accel.
	* tune/speed.c (routine): #if:ed out mpn_gcd_binary, mpn_gcd_accel
	and find_a.
	* tune/Makefile.am (libspeed_la_SOURCES): Removed gcd_bin.c
	gcd_accel.c gcd_finda_gen.c.
	* tune/tuneup.c: Enable tuning of GCD_DC_THRESHOLD.

	* mpn/generic/gcd.c (mpn_gcd): Rewrote and simplified. Now uses
	the new mpn_hgcd interface.

	* */gmp-mparam.h: Renamed GCD_SCHOENHAGE_THRESHOLD to
	GCD_DC_THRESHOLD.

	* mpn/generic/gcd_lehmer.c (mpn_gcd_lehmer_n): Renamed (was
	mpn_gcd_lehmer). Now takes inputs of equal size.

	* mpn/generic/gcd_lehmer.c (mpn_gcd_lehmer): Reintroduced gcd_2,
	to get better performance for small inputs.

	* mpn/generic/hgcd.c: Don't hardcode small HGCD_THRESHOLD.
	* mpn/x86_64/gmp-mparam.h (HGCD_THRESHOLD): Reduced from 145 to
	120.
	* */gmp-mparam.h: Renamed HGCD_SCHOENHAGE_THRESHOLD to
	HGCD_THRESHOLD.

2008-09-09  Torbjorn Granlund  <tege@gmplib.org>

	* doc/gmp.texi: Fix a typo and clarify mpn_gcdext docs.

2008-09-09  Niels Möller  <nisse@lysator.liu.se>

	* tune/common.c (speed_mpn_hgcd, speed_mpn_hgcd_lehmer): Adapted
	to new hgcd interface.

	* gmp-impl.h (MPN_HGCD_LEHMER_ITCH): New macro.

	* hgcd.c (mpn_hgcd_lehmer): Renamed function, from hgcd_base. Made
	non-static.

	* gcd_lehmer.c (mpn_gcd_lehmer): Use hgcd2 also for n == 2.

	* gcdext_lehmer.c (mpn_gcdext_lehmer): Simplified code for
	division step. Added proper book-keeping of swaps, which affect
	the sign of the returned cofactor.

	* tests/mpz/t-gcd.c (one_test): Display co-factor when mpn_gcdext
	fails.

	* gcd_lehmer.c (mpn_gcd_lehmer): At end of loop, need to handle
	the special case n == 1 correctly.

	* gcd_subdiv_step.c (mpn_gcd_subdiv_step): Simplified function.
	The special cancellation logic is not needed here.

2008-09-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/invert.c: Add working but slow code.

	* mpn/x86_64/x86_64-defs.m4 (R32, R8): New macros.

	* mpn/ia64/submul_1.asm: Move some labels for broader assembler
	compatibility.

	* gmp-impl.h (mpn_mul_3, mpn_mul_4): Declare.
	* tests/tests.h (refmpn_mul_3, refmpn_mul_4): Declare.
	* tests/try.c (param_init): Set things up for mpn_mul_3 and mpn_mul_4.
	(choice_array): Likewise.
	(call): Likewise.
	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES):
	Add mul_3.c and mul_4.
	* mpn/asm-defs.m4: Define mul_3 and mul_4.
	* tests/refmpn.c (refmpn_mul_N): New function.
	(refmpn_mul_2): Remove old definition, call refmpn_mul_N.
	(refmpn_mul_3, refmpn_mul_4): New functions.
	* tune/common.c (speed_mpn_mul_3, speed_mpn_mul_4): New functions.
	* tune/speed.h (speed_mpn_mul_3, speed_mpn_mul_4): Declare.
	* tune/speed.c (routine): New entries for mpn_mul_2 and mpn_mul_3.

	* ltmain.sh: Update to libtool 1.5.24.

	* mpn/generic/mul_toom22.c: Compute s and t more cleverly.

2008-09-08  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/t-hgcd.c: Updated tests. Rewrite of hgcd_ref.

	* mpn/generic/gcdext_lehmer.c (mpn_gcdext_lehmer_itch): New function.
	(mpn_gcdext_lehmer): Various bugfixes.

	* gcdext.c (mpn_gcdext): Allocate scratch space for gcdext_lehmer.

	* mpn/generic/gcd_lehmer.c (gcd_2): ASSERT that inputs are odd.
	(mpn_gcd_lehmer): Added tp argument, for scratch space. Make both
	arguments odd before calling gcd_2.

	* mpn/generic/hgcd.c (mpn_hgcd): Allow the trivial case n <= 2,
	and return 0 immediately.

	* gmp-impl.h (MPN_EXTRACT_NUMB): New macro.

	* configure.in (gmp_mpn_functions): Added gcdext_lehmer.

2008-09-05  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/toom_interpolate_7pts.c: Use mpn_divexact_by3c instead of
	divexact_odd.

	* doc/texinfo.tex: Update to 2007-06-29.13.

	* doc/gmp.texi: Update GMP site URL.  Fix some typos.

	* demos/pexpr.c (main): Allow bases up to 62.

	* gmp-impl.h: Remove formal parameter names from function prototypes.

	* config.guess: Recognize recent AMD and Itanium CPUs.
	Default X86 CPU recognition to configfsf.guess' value.

	* configure.in: Handle core2 separately from athlon64.

2008-09-05  Niels Möller  <nisse@lysator.liu.se>

	* */Makefile.in, configure, aclocal.m4, config.in: Removed files
	from repository. They're instead generated by automake and
	autoconf before distribution.

2008-08-25  Torbjorn Granlund  <tege@gmplib.org>

	* mpf/set_str.c: Allocate mantissa space based on mantissa size,
	not on destination variable space.
	* mpf/set_str.c: Accept unary plus before exponent.

2008-08-06  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mul_toom22.c: Add statistics gathering functionality,
	triggered by cpp predef STAT.

	From David Harvey:
	* mpn/generic/mul_toom22.c: Decrease scratch space usage.

2008-08-02  Torbjorn Granlund  <tege@gmplib.org>

	* tests/misc/t-scanf.c: Avoid negative arguments to _ui functions.
	* tests/misc/t-printf.c: Likewise.

	* acinclude.m4 (X86_PATTERN): Add geode.

	* acinclude.m4 (CL_AS_NOEXECSTACK): Avoid -q flag to grep.

2008-08-01  Torbjorn Granlund  <tege@gmplib.org>

	* acinclude.m4 (CL_AS_NOEXECSTACK): New.
	* configure.in: Use CL_AS_NOEXECSTACK.
	* mpn/Makeasm.am: Use ASM_FLAGS (defined by CL_AS_NOEXECSTACK).

	* gmpxx.h (__GMP_DBL_LIMBS): Use DBL_MAX_EXP instead of
	std::numeric_limits<double>::max_exponent for better portability.

2008-07-29  Torbjorn Granlund  <tege@gmplib.org>

	* gmpxx.h (__GMP_DBL_LIMBS): New #define.
	(__GMP_ULI_LIMBS): New #define.
	(__GMPXX_TMP_UI): New macro.
	(__GMPXX_TMP_SI): New macro.
	(__GMPXX_TMP_D): New macro.
	(struct __gmp_binary_and): Rewrite, using the new macros.
	(struct __gmp_binary_ior): Likewise.
	(struct __gmp_binary_xor): Likewise.

2008-07-28  Torbjorn Granlund  <tege@gmplib.org>

	* tests/cxx/t-binary.cc: Add some tests for logical operations.

2008-07-24  Torbjorn Granlund  <tege@gmplib.org>

	* gmpxx.h: Use __GMPZ_* instead of __GMPZZ_* for bitwise ops, remove
	__GMPZZ_*.
	Remove repeated #undefs.
	(__gmp_alloc_cstring): Declare freefunc as extern "C".

2008-07-23  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-h.in (__GMP_CC): New define, undocumented for now.
	(__GMP_CFLAGS): Likewise.

2008-07-21  Torbjorn Granlund  <tege@gmplib.org>

	* tests/amd64check.c: Fix a printf type clash.

	* mpz/realloc.c: Amend last fix.

	* gmp-h.in: Include <cstdlib> for C++.
	* gmp-h.in: Handle new gcc 4.3 inline semantics defaults.

	* configfsf.guess: Update to version of 2008-04-14.
	* configfsf.sub: Update to version of 2008-06-16.

	* configure.in: Separate core2 and athlon64 flags handling.

2008-06-19  Torbjorn Granlund  <tege@gmplib.org>

	* config.guess: Recognize pentiumm and AMD geode.
	* config.sub: Likewise.
	* configure.in: Likewise.

2008-06-02  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in: Disallow odd nails sizes.
	* configure.in: Inherit default gcc_cflags/gcc_64_cflags everywhere.

2008-05-23  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/init2.c: Rewrite to avoid internal overflow and to detect mpz_t
	overflow.
	* mpz/realloc2.c: Likewise.
	* mpz/realloc.c: Detect mpz_t overflow.

2008-05-22  Torbjorn Granlund  <tege@gmplib.org>

	* configure.in (sparc): Remove -fast, it causes documented
	miscompilation.

	* config.guess: Properly handle the "extended" variants of x86 cpuid.

2008-05-09  Torbjorn Granlund  <tege@gmplib.org>

	* gmp-impl.h (mpn_mul_fft): Now void.
	(udiv_qrnnd_preinv3): Special case for constant (nl).

2008-05-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/generic/mul_fft.c: Clean up types in TRACE (printf (...)).
	(TRACE): Redefine to allow command line control.
	(mpn_mul_fft_internal): Now void, remove return value.
	(mpn_mul_fft): Likewise.
	(MPN_FFT_TABLE2_SIZE): Up size fro 256 to 512.
	(mpn_fft_fft): Call mpn_fft_mul_2exp_modF just once instead of twice,
	then add/subtract result.  Get rid of temp allocation as a result.
	Remove some redundant CNST_LIMB.
	(mpn_fft_fftinv): Analogous changes.
	(mpn_fft_sub_modF): Re-enable, now needed by mpn_fft_fft and
	mpn_fft_fftinv.

2008-03-10  Torbjorn Granlund  <tege@gmplib.org>

	* tests/mpz/t-mul.c (main): Let GMP_CHECK_FFT mean largest allowed
	power-of-2 of test operands.

2008-02-28  Torbjorn Granlund  <tege@gmplib.org>

	* tests/cxx/t-binary.cc (check_mpz): Expect floor rounding for right
	shift.

2008-02-27  Torbjorn Granlund  <tege@gmplib.org>

	* mpz/mul_i.h: Check sml's size (not the signed small_mult).

	* longlong.h (umul_ppmm) [alpha]: Define using __builtin_alpha_umulh
	when possible.

	* longlong.h (count_trailing_zeros): Force destination register mode.

	* gmpxx.h (struct __gmp_binary_rshift): Use floor rounding, not
	truncation.

	* gmpxx.h (__gmp_binary_and, __gmp_binary_ior, __gmp_binary_xor):
	Add variants with unsigned long int argument.

	* config.sub: Recog geode.
	* config.guess: Likewise.
	* acinclude.m4 (X86_PATTERN): Likewise.

2008-02-10  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/p6/aors_n.asm: Use Zdisp to work around GNU as bug.
	* mpn/x86/x86-defs.m4 (Zdisp): Add more instructions.

2008-02-08  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86_64/aors_n.asm: New file.
	* mpn/x86_64/add_n.asm: Delete.
	* mpn/x86_64/sub_n.asm: Delete.

2008-02-07  Torbjorn Granlund  <tege@gmplib.org>

	* mpn/x86/k6/mmx/dive_1.asm: Fix typo in last change.

2007-12-10  Torbjorn Granlund  <tege@swox.com>

	* mpf/set_str.c (mpf_set_str): Write own code for converting the
	exponent, avoids strtol base < 36 limitation.

2007-10-28  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (mpn_dc_get_str_itch): New macro.
	(mpn_dc_get_str_powtab_alloc): New macro.
	(struct powers): Add field "shift".

	* mpn/generic/get_str.c: Compute powers without low zero limbs; all
	functions modified.  Correct temporary allocation.  Misc cleanups.

	* mpn/generic/set_str.c: Compute powers without low zero limbs; all
	functions modified.
	(mpn_dc_set_str): Remove impossible case, replace by an ASSERT.

2007-10-26  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/set_str.c: Remove default thresholds, not in gmp-impl.h.
	(mpn_dc_set_str): Insert ASSERT_ALWAYS in a presumably dead code arm.

2007-10-22  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (mpn_add_nc): Define as inline function, unless NATIVE.
	(mpn_sub_nc): Likewise.

2007-10-17  Torbjorn Granlund  <tege@swox.com>

	* tests/misc/t-printf.c: Fix a printf type clash.
	* tests/mpq/t-get_str.c: Likewise.
	* tests/mpz/t-import.c: Likewise.

	* acinclude.m4: Conditionally disable some tests when compiled by a C++
	compiler.

	* gmp-impl.h (udiv_qrnnd_preinv3): Remove an unused variable.

	* mpn/generic/hgcd.c: Add some WANT_ASSERTs to shut up warnings.

2007-10-08  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/elf.m4 (LEAL): Define as an alias for LEA.
	* mpn/powerpc32/darwin.m4 (LEAL): Likewise.
	* mpn/powerpc64/aix.m4: Likewise.

	* mpn/powerpc64/vmx/popcount.asm: Use LEAL.

	* mpn/powerpc64/darwin.m4 (LEAL): New name for LEA, since it is only
	usable for local symbols.
	(LEA): Replace with code for external references.

	* mpn/powerpc32/vmx/mod_34lsub1.asm: Use LEAL.

2007-10-07  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/dive_1.asm: Use LEA, remove explicit movl_eip_*.
	* mpn/x86/k6/mode1o.asm: Likewise.
	* mpn/x86/k6/mmx/dive_1.asm: Likewise.
	* mpn/x86/k7/dive_1.asm: Likewise.
	* mpn/x86/k7/mode1o.asm: Likewise.
	* mpn/x86/p6/dive_1.asm: Likewise.
	* mpn/x86/p6/mode1o.asm: Likewise.
	* mpn/x86/pentium4/sse2/dive_1.asm: Likewise.
	* mpn/x86/pentium4/sse2/mode1o.asm: Likewise.
	* mpn/x86/pentium4/sse2/popcount.asm: Likewise.

	* mpn/x86/p6/aors_n.asm: Table cycle counts.

	* mpn/x86/k7/mod_34lsub1.asm: Fix over-optimistic cycle count claims.

	* mpn/x86/x86-defs.m4 (DEF_OBJECT, END_OBJECT): New define's.

	* mpn/x86/darwin.m4 (LEA): Put also movl_eip_XX into EPILOGUE_cpu.
	Expect target register to have prepended %.

	* mpn/x86_64/add_n.asm: Use L() for labels.
	* mpn/x86_64/addlsh1_n.asm: Likewise.
	* mpn/x86_64/addmul_2.asm: Likewise.
	* mpn/x86_64/aorrlsh_n.asm: Likewise.
	* mpn/x86_64/aorsmul_1.asm: Likewise.
	* mpn/x86_64/com_n.asm: Likewise.
	* mpn/x86_64/copyd.asm: Likewise.
	* mpn/x86_64/copyi.asm: Likewise.
	* mpn/x86_64/diveby3.asm: Likewise.
	* mpn/x86_64/logops_n.asm: Likewise.
	* mpn/x86_64/lshsub_n.asm: Likewise.
	* mpn/x86_64/mul_1.asm: Likewise.
	* mpn/x86_64/mul_2.asm: Likewise.
	* mpn/x86_64/mul_basecase.asm: Likewise.
	* mpn/x86_64/popham.asm: Likewise.
	* mpn/x86_64/redc_1.asm: Likewise.
	* mpn/x86_64/rsh1add_n.asm: Likewise.
	* mpn/x86_64/rsh1sub_n.asm: Likewise.
	* mpn/x86_64/rshift.asm: Likewise.
	* mpn/x86_64/sub_n.asm: Likewise.
	* mpn/x86_64/sublsh1_n.asm Likewise.
	* mpn/x86_64/pentium4/aors_n.asm: Likewise.
	* mpn/x86_64/pentium4/lshift.asm: Likewise.
	* mpn/x86_64/pentium4/rshift.asm: Likewise.

	* mpn/x86_64/x86_64-defs.m4: New file, defining LEA, DEF_OBJECT, and
	END_OBJECT.

	* mpn/generic/mul.c: Put TMP_DECL as last decl.

2007-10-06  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/pentium4/sse2/popcount.asm: New file.

2007-09-26  Torbjorn Granlund  <tege@swox.com>

	* mpz/get_str.c: Cast a char index to int to shut up compilers.

	* mpn/generic/dc_div_qr.c: Pass dummy scratch argument to mpn_invert.
	* mpn/generic/dc_divappr_q.c: Likewise.
	* mpn/generic/mu_div_qr.c: Likewise.
	* mpn/generic/mu_divappr_q.c: Likewise.
	* mpn/generic/mu_div_q.c: Likewise.
	* mpn/generic/divexact.c: Likewise.

	* mpn/generic/invert.c: New file, placeholder for now.

2007-09-24  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/toom_interpolate_5pts.c: New file, contents from
	mpn/generic/mul_n.c
	* mpn/generic/mul_n.c (mpn_toom3_interpolate): Function removed.

	* mpn/generic/toom_interpolate_7pts.c: New file.

	* mpn/x86/k7/mmx/popham.asm: Table cycle counts.

	* mpn/x86/k6/README: Update URLs.

	* mpn/powerpc32/README: Update URL's, company names.

	* mpn/generic/get_d.c: Complete rewrite.

	* mpn/generic/mul_toom33.c: New file.

	* mpn/generic/mul_toom22.c: Make orthogonal with other toomXY files.
	* mpn/generic/mul_toom32.c: Likewise.
	* mpn/generic/mul_toom42.c: Likewise.

	* mpn/alpha/invert_limb.asm: Update cycle counts.  Fix a comment typo.

	* mpf/get_str.c: Include stdlib.h, not stdio.h for NULL.

	* doc/gmp.texi: Fix a typo.

	* memory.c (__gmp_default_allocate, __gmp_default_reallocate):
	Cast size operands in error fprintf's.

	* longlong.h (sub_ddmmss) [powerpc 64]: Add more variants for constant
	args.

	* gmp-impl.h (udiv_qrnnd_preinv3): New define.
	* gmp-impl.h (ULONG_PARITY): Exclude masquerading __INTEL_COMPILER from
	ia64 asm.

	* gmp-h.in (mpn_neg_n): New function.

2007-09-18  Torbjorn Granlund  <tege@swox.com>

	* demos/pexpr.c (main): Add -v option.
	(enum op_t): New tag TIMING.
	(mpz_eval_expr): Execute TIMING.
	(fns): Add TIMING entry.

	* gmp-impl.h: Add decls and THRESHOLDs for new toom multiplication
	functions and division functions.

2007-09-10  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/addlsh1_n.asm: Use L() for labels.
	* mpn/powerpc32/sublsh1_n.asm: Likewise.

2007-09-09  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/x86-defs.m4 (LEA): New define.
	* mpn/x86/darwin.m4: New file, for now just defining LEA.
	* configure.in: Pick up x86/darwin.m4.
	* mpn/x86/*: Use LEA for PIC references.

	* configure.in: For X86/32, treat core2 like pentium3.

2007-09-06  Torbjorn Granlund  <tege@swox.com>

	* tests/amd64check.c (calling_conventions_values): Put constants,
	dynamic values in this array (was in scalars).
	(calling_conventions_check): Corresponding changes.
	* tests/amd64call.asm: Rewrite to be PIC, smaller, using amd64check.c's
	array.

2007-09-04  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/pentium4/sse2/mul_basecase.asm: Misc cleanups.
	* mpn/x86/pentium4/sse2/sqr_basecase.asm: Likewise.

	* mpn/x86_64/mod_34lsub1.asm: Optimize loop, reduce code size.

	* tests/amd64call.asm: Remove bogus no-op moves.

2007-09-03  Torbjorn Granlund  <tege@swox.com>

	From Richard Guenther:
	* gmp-h.in (__GMP_EXTERN_INLINE): Declare conditionally on
	__GNUC_STDC_INLINE__.

	* tests/cxx/t-locale.cc: #include <cstdlib>, for abort.

	* mpn/x86_64/core2/popcount.asm: New file.
	* mpn/x86_64/pentium4/popcount.asm: New file.

	* mpn/x86_64/addmul_2.asm: New file.
	* mpn/x86_64/mul_2.asm: New file.

	* mpn/x86_64/aorsmul_1.asm: Use 32-bit mov for zeroing registers
	(saves space).

2007-09-01  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Handle athlon64, core2, and pentium4 separately for
	64-bit ABI.

	* config.sub: Recog athlon64, core2, and opteron.

	* config.guess: Do two x86 variants, for 32-bit ABI and 64-bit ABI.
	Return "athlon64" and "core2", not x86_64.

2007-08-31  Torbjorn Granlund  <tege@swox.com>

	From Patrick Pelissier:
	* gmp-h.in: Don't refer to FILE from C++ unless we've seen FILE.

2007-08-30  Torbjorn Granlund  <tege@swox.com>

	* demos/isprime.c: Include string.h for strcmp.

	* demos/factorize.c (main): Declare to int.

2007-06-22  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/pentium4/lshift.asm: Minor tuning.
	* mpn/x86_64/pentium4/rshift.asm: Likewise.

2007-05-30  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode64/aors_n.asm: Add _nc entry points.

2007-05-22  Torbjorn Granlund  <tege@swox.com>

	* tests/memory.c: Cast calls to new mem* calls to avoid unaligned ops.

2007-05-16  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/convert.c: Tweak operand sizes for best coverage.

	* tests/memory.c: Add red zones around allocations.

2007-05-15  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/mul_1.asm: Make mul_1c entry point actually work.

	* mpn/generic/set_str.c (mpn_dc_set_str): Avoid calling mpn_add_n when
	ln == 0.

	* tests/mpz/convert.c (string_urandomb): New function.
	(main): Use it by enabling ifdef'ed out code.

2007-04-30  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/mul_basecase.asm: Complete rewrite.

	* mpn/x86_64/copyi.asm: Use short shift-by-one form.  Misc cleanups.
	* mpn/x86_64/copyi.asm: Likewise.
	* mpn/x86_64/popham.asm: Likewise.

	* mpn/x86_64/aorsmul_1.asm: Cleanup formatting.

2007-04-25  Torbjorn Granlund  <tege@swox.com>

	* mpz/divexact.c: Handle undefined case of |N| < |D| to avoid segfaults.

2007-02-24  Torbjorn Granlund  <tege@swox.com>

	* doc/gmp.texi (Toom 3-Way Multiplication): Fix typo.
	(mpz_scan0, mpz_scan1): Fix typos.
	(Float Internals): Rewrite paragraph about struct types.

2007-02-12  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/pentium4/sse2/sqr_basecase.asm: Complete rewrite (except
	diagonal code).

2007-02-05  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul_fft.c (mpn_fft_fft): New name for mpn_fft_fft_sqr,
	old mpn_fft_fft removed.
	(mpn_mul_fft_internal): Call mpn_fft_fft separately for each operand.
	(mpn_fft_add_modF): Rewrite to avoid random branches.
	(mpn_fft_sub_modF): Likewise.

	* mpn/x86/pentium4/sse2/addmul_1.asm: Complete rewrite.
	* mpn/x86/pentium4/sse2/mul_1.asm: Complete rewrite.
	* mpn/x86/pentium4/sse2/mul_basecase.asm: Complete rewrite, based on
	new addmul and mul code.

2007-01-31  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/get_str.c (mpn_sb_get_str): Get loop count for frac
	development right.

	* mpn/powerpc32/vmx/mod_34lsub1.asm: New file.

	* mpn/powerpc32/aors_n.asm: New file, complete rewrite.
	* mpn/powerpc32/add_n.asm: Remove.
	* mpn/powerpc32/sub_n.asm: Remove.

2007-01-25  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/core2/aors_n.asm: Add _nc entry points, minor cleanups.

	* mpn/x86_64/core2/lshift.asm: Rewrite.
	* mpn/x86_64/core2/rshift.asm: Rewrite.

	* mpn/x86_64/pentium4/lshift.asm: Swap some loop insns for a small
	speedup.
	* mpn/x86_64/pentium4/rshift.asm: New file, based on lshift.asm.

	* mpn/x86_64/pentium4/gmp-mparam.h: New file.

	* mpn/x86_64/pentium4/aors_n.asm: Complete rewrite of add/subtract
	code.
	* mpn/x86_64/pentium4/add_n.asm: Remove.
	* mpn/x86_64/pentium4/sub_n.asm: Remove.

2007-01-20  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/lshift.asm: Add special case for cnt=1.

2007-01-19  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/aorsmul_1.asm: New file, written from scratch, finally at
	3.0 c/l on K8 (addmul_1 was 3.3; submul_1 was 3.5).
	* mpn/x86_64/addmul_1.asm: Remove.
	* mpn/x86_64/submul_1.asm: Remove.

2006-12-29  Torbjorn Granlund  <tege@swox.com>

	* randmt.c (__gmp_randclear_mt): Initialize ALLOC field, like in
	__gmp_randinit_mt_noseed.
	(__gmp_randclear_mt, __gmp_randinit_mt_noseed): Make similar functions
	look similar.
	(__gmp_randclear_mt): Pass actually allocated size.

	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES): Add mul_toom22.c,
	mul_toom32.c, mul_toom42.c.

	* configure.in: Recognize athlon64 and core2 as alternatives to x86_64.
	Provide special settings for core2.

	* configure.in (gmp_mpn_functions): Add mul_toom22, mul_toom32,
	mul_toom42.

	* mpn/generic/mul_toom22.c: New file.
	* mpn/generic/mul.c: Use mpn_mul_toom22.  Trim cutoff points between
	the mpn_mul_toomN2 functions.  Handle balanced operands at function
	entry.

2006-12-29  Marco Bodrato  <bodrato@mail.dm.unipi.it>

	* mpn/generic/mul_n.c: Rewrite interpolation code.

2006-12-28  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul_toom32.c: New file.
	* mpn/generic/mul_toom42.c: New file.
	* mpn/generic/mul.c: Use mpn_mul_toom32 and mpn_mul_toom42 for
	unbalanced operands.

2006-12-17  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/aorrlsh_n.asm: New file.
	* mpn/x86_64/lshsub_n.asm: New file.

	* mpn/x86_64/core2/aors_n.asm: New file.
	* mpn/x86_64/core2/lshift.asm: New file.
	* mpn/x86_64/core2/rshift.asm: New file.

	* mpn/x86/p6/aors_n.asm: Replace K7 grabbing code with P6 specific
	code.

	* mpn/x86/p6/lshsub_n.asm: New file.

2006-11-23  Torbjorn Granlund  <tege@swox.com>

	* tune/speed.h (SPEED_ROUTINE_MPN_MUL_BASECASE): Allocate space for xp
	locally, s->xp might be insufficient.

2006-11-22  Torbjorn Granlund  <tege@swox.com>

	* randmt.c (__gmp_randinit_mt_noseed): Initialize ALLOC field of result
	param.

2006-11-06  Torbjorn Granlund  <tege@swox.com>

	* tune/set_strp.c: New file.

2006-11-04  Torbjorn Granlund  <tege@swox.com>

	* extract-dbl.c: Rewrite to handle nails better, and for general
	optimization.

	* mpz/bin_uiui.c: Simplify.

	* longlong.h (umul_ppmm) [mmix]: New.

	* tune/tuneup.c, tune/common.c, tune/speed.c, tune/speed.h,
	tune/set_strb.c, tune/set_strs.c: Add tuning and speed measurements
	of separate SET_STR_DC_THRESHOLD and SET_STR_PRECOMPUTE_THRESHOLD.
	Add tuning and speed measurement of mpn_addsub_n.

2006-10-31  Torbjorn Granlund  <tege@swox.com>

	* gmpxx.h: Remove ternary stuff, it is hardly an optimization and it
	writes to destination before reading all source operands.

2006-10-25  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/set_str.c: Complete rewrite.
	* mpn/generic/get_str.c: Likewise.

	* gmp-impl.h (struct powers, powers_t): New types.
	Restructure GET_STR_* and SET_STR_* thresholds.

2006-09-21  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/rootrem.c: Remove some redundant casts.

2006-07-12  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/ev6/nails/addmul_2.asm: Make it run at claimed speed.
	* mpn/alpha/ev6/nails/addmul_4.asm: Likewise.

	* mpf/get_str.c: Avoid copying result when not needed.  Misc cleanups.

	* tests/amd64call.asm: Use jmp instead of jmpq to placate Solaris.

2006-06-30  Torbjorn Granlund  <tege@swox.com>

	* configure.in (powerpc-*): Remove repeated path component.

2006-06-15  Torbjorn Granlund  <tege@swox.com>

	* configure.in: (ia64-*-linux*): Don't use -O3.

2006-06-14  Torbjorn Granlund  <tege@swox.com>

	* mpq/get_str.c: Fix upper base limit boundary in an ASSERT.

	* tests/refmpn.c (refmpn_sb_divrem_mn): Use ASSERT_CARRY for add-back.

2006-05-31  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-set_d.c (check_data): Add more data points.

	* mpz/set_d.c: Handle negative return values from __gmp_extract_double.

2006-05-17  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Clear out gcc_cflags_cpu and gcc_cflags_arch for a fat
	build.

2006-05-16  Torbjorn Granlund  <tege@swox.com>

	* demos/primes.c (find_primes): Increase mpz_probab_prime_p cnt to 10.

	* mpn/generic/addsub_n.c: Fix criteria form when to call _nc functions.

2006-05-12  Torbjorn Granlund  <tege@swox.com>

	* config.guess: Recognize more ppc processor types.

2006-05-11  Torbjorn Granlund  <tege@swox.com>

	* tune/speed.c (usage): Update URL for gnuplot and quickplot.

2006-05-10  Torbjorn Granlund  <tege@swox.com>

	* configure.in (powerpc-*-*): Pass -maltivec to assembler for
	appropriate CPUs.

2006-05-08  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/aix.m4 (LEA): Remove [RW] attribute.

2006-05-03  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/vmx/popcount.asm: Conditionally zero extend n.

2006-04-27  Torbjorn Granlund  <tege@swox.com>

	* mpz/divexact.c: Call mpz_tdiv_q for large operands.

	* configure.in (powerpc-*-darwin): Remove -fast, it affects PIC.

2006-04-26  Torbjorn Granlund  <tege@swox.com>

	* config.guess: Try to recognize Ultrasparc T1 (as ultrasparct1).
	* config.sub: Handle ultrasparct1.

2006-04-25  Torbjorn Granlund  <tege@swox.com>

	* mpn/sparc64/gmp-mparam.h: Retune, without separation of GNUC and
	non-GNUC data.

2006-04-20  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/convert.c: Increase operands range.

2006-04-19  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Support powerpc eABI.
	* mpn/powerpc32/eabi.m4: New file.

	* configure.in: Support powerpc *bsd.
	* mpn/powerpc64/elf.m4: New name for mpn/powerpc64/linux64.m4.
	* mpn/powerpc32/elf.m4: New name for mpn/powerpc32/linux.m4.

	* mpn/powerpc64/linux64.m4 (ASM_END): Quote TOC_ENTRY.

2006-04-18  Torbjorn Granlund  <tege@swox.com>

	* configure.in (gmp_mpn_functions_optional): Add lshiftc.
	(HAVE_NATIVE): Add lshiftc.

	* mpn/powerpc64/mode64/invert_limb.asm: Use LEA, not LDSYM.
	* mpn/powerpc64/mode64/mode1o.asm: Likewise.
	* mpn/powerpc64/mode64/dive_1.asm: Likewise.

	* mpn/powerpc64/linux64.m4 (TOC_ENTRY): Define to empty.
	* mpn/powerpc64/aix.m4 (TOC_ENTRY): Likewise.
	* mpn/powerpc32/aix.m4 (TOC_ENTRY): Likewise.

	* mpn/powerpc32/aix.m4 (EXTERN): New, copied form powerpc64/aix.m4.
	* mpn/powerpc32/mode1o.asm: Use EXTERN.
	* mpn/powerpc32/linux.m4 (EXTERN): Provide dummy definition.
	* mpn/powerpc32/darwin.m4 (EXTERN): Likewise.

2006-04-13  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul_fft.c: Use new thresholds mechanism if MUL_FFT_TABLE2
	is defined.
	(mpn_lshiftc): New name for mpn_lshift_com (for consistency with some
	stuff already in 4.1.4.
	(mpn_fft_mul_2exp_modF): Reorganize initial operand reductions to avoid
	divisions.

	* tests/devel/try.c (choice_array): Add mpn_addsub_n[c].

2006-04-11  Torbjorn Granlund  <tege@swox.com>

	* aclocal.m4: Regenerate with patched libtool.

	* mpn/asm-defs.m4 (ASM_END): Provide (empty) default.

2006-04-08  Torbjorn Granlund  <tege@swox.com>

	* configure.in (gmp_mpn_functions_optional): Add addsub.

	* gmpxx.h: Remove missed MPFR references.

	* gmp-impl.h (LIMBS_PER_DOUBLE): Adjust formula to not be pessimistic.

	* gmp-impl.h (TMP_*, WANT_TMP_DEBUG): Don't expect marker argument;
	define TMP_SALLOC and TMP_BALLOC.

	* mpn/minithres/gmp-mparam.h: New file.

	* tests/mpz/t-io_raw.c: Fix printf type/arg mismatches.
	* tests/mpz/t-export.c: Likewise.
	* tests/mpz/io.c: Likewise.
	* tests/t-constants.c: Likewise.

	* mpn/ia64/popcount.asm: Append "cond.dptk" to conditional branches to
	placate icc.
	* mpn/ia64/hamdist.asm: Likewise.
	* mpn/ia64/lorrshift.asm: Likewise.
	* mpn/ia64/dive_1.asm: Likewise.

2006-04-05  Torbjorn Granlund  <tege@swox.com>

	* tal-notreent.c (__gmp_tmp_mark): Add "struct" tag for tmp_marker.
	(__gmp_tmp_free): Likewise.

	* mpn/generic/mul_fft.c: Optimize many scalar divisions and mod
	operations into masks and shifts.
	(mpn_fft_mul_modF_K): Fix a spurious ASSERT_NOCARRY.

2006-03-26  Torbjorn Granlund  <tege@swox.com>

	* Version 4.2 released.

	* mpn/powerpc64/aix.m4 (LEA): Renamed from LDSYM.
	* mpn/powerpc64/darwin.m4: Likewise.
	* mpn/powerpc64/linux64.m4: Likewise.
	* mpn/powerpc64/vmx/popcount.asm: Use LEA, not LDSYM.

2006-03-23  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h: (class gmp_allocated_string): Prefix strlen with std::.

	* gmpxx.h (__GMP_DEFINE_TERNARY_EXPR2): Remove for now.
	(struct __gmp_ternary_addmul2): Likewise.
	(struct __gmp_ternary_submul2): Likewise.

	* gmpxx.h: #include <cstring>.
	(struct __gmp_alloc_cstring): Prefix strlen with std::.

	* mpn/x86/pentium/com_n.asm: Add TEXT and ALIGN.
	* mpn/x86/pentium/copyi.asm: Likewise.
	* mpn/x86/pentium/copyd.asm: Likewise.

2006-03-22  Torbjorn Granlund  <tege@swox.com>

	* gmp-h.in: Add a "using std::FILE" for C++.
	(_GMP_H_HAVE_FILE): Check also _ISO_STDIO_ISO_H.

	* gmpxx.h: Remove mpfr code.
	* tests/cxx: Likewise.

	* gmp-impl.h (FORCE_DOUBLE): Rename a tempvar to avoid a clash with
	GNU/Linux public include file.

	* configure.in (powerpc64, darwin): New optional, gcc_cflags_subtype.
	Grab powerpc32/darwin.m4 for ABI=mode32.

	* configure.in: Use host_cpu whenever just the cpu type is needed.

2006-03-08  Torbjorn Granlund  <tege@swox.com>

	* mpz/get_si.c: Fix a typo.

	* tests/mpq/t-get_d.c (check_random): Improve random generation for
	nails.

2006-02-28  Torbjorn Granlund  <tege@swox.com>

	* tests/mpq/t-get_d.c (check_random): New function.
	(main): Call check_random.

	* mpq/set_d.c: Make choices based on LIMBS_PER_DOUBLE, not
	BITS_PER_MP_LIMB.  Make it work for LIMBS_PER_DOUBLE == 4.
	Use MPZ_REALLOC.

	* mpz/set_d.c: Make it work for LIMBS_PER_DOUBLE == 4.

	* extract-dbl.c: Make it work for LIMBS_PER_DOUBLE > 3.

2006-02-27  Torbjorn Granlund  <tege@swox.com>

	* mpz/cmp_d.c: Declare `i'.
	* mpz/cmpabs_d.c: Likewise.

2006-02-23  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/vmx/copyd.asm: Set right VRSAVE bits.
	* mpn/powerpc32/vmx/copyi.asm: Likewise.

2006-02-22  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/vmx/logops_n.asm: New file.

	* mpn/powerpc32/diveby3.asm: Rewrite.

2006-02-21  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/vmx/copyi.asm: New file.
	* mpn/powerpc32/vmx/copyd.asm: New file.

2006-02-17  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/ev6/nails/aors_n.asm (CYSH): Import proper setting from
	deleted mpn_sub_n.

2006-02-16  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/ev6/addmul_1.asm: Correct slotting comments.

2006-02-15  Torbjorn Granlund  <tege@swox.com>

	* tests/devel/anymul_1.c: Copy error reporting code from addmul_N.c.

	* tests/devel/addmul_N.c: New file.
	* tests/devel/mul_N.c: New file.

	* mpn/alpha/default.m4 (PROLOGUE_cpu): Align functions at 16-byte
	boundary.

	* mpn/alpha/ev6/nails/aors_n.asm: New file.
	* mpn/alpha/ev6/nails/add_n.asm: Remove.
	* mpn/alpha/ev6/nails/sub_n.asm: Remove.

	* mpn/alpha/ev6/nails/addmul_1.asm: Rewrite.
	* mpn/alpha/ev6/nails/submul_1.asm: Likewise.
	* mpn/alpha/ev6/nails/mul_1.asm: Likewise.

	* mpn/alpha/ev6/nails/addmul_2.asm: Use L() for labels.
	* mpn/alpha/ev6/nails/addmul_3.asm: Use L() for labels.
	* mpn/alpha/ev6/nails/addmul_4.asm: Use L() for labels.

2006-02-13  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/diveby3.asm: Trivially reorder loop insns to save
	1 c/l.

	* mpn/x86_64/dive_1.asm: Use movabsq to support large model non-PIC.

	* mpn/x86_64/rsh1add_n.asm: Replace high register with rbx.
	* mpn/x86_64/rsh1sub_n.asm: Likewise.

2006-02-10  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/sqr_diagonal.asm: Software pipeline.

	* mpn/powerpc64/vmx/popcount.asm: Add prefetching.

2006-02-07  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode64/diveby3.asm: Rewrite.

2006-02-04  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/vmx/popcount.asm: Remove mpn_hamdist partial code.
	Move compare for huge n so that it is always executed.

2006-02-03  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/linux.m4 (LEA): Add support for PIC.

	* configure.in (powerpc): New optional, gcc_cflags_subtype.

	* mpn/x86_64/pentium4/add_n.asm: New file.
	* mpn/x86_64/pentium4/sub_n.asm: New file.
	* mpn/x86_64/pentium4/lshift.asm: New file.

	* mpn/powerpc64/linux64.m4 (PROLOGUE_cpu): Align function start to
	16-multiple.
	* mpn/powerpc64/aix.m4: Likewise.
	* mpn/powerpc64/darwin.m4: Likewise.

	* mpn/powerpc64/copyi.asm: Align loop to 16-multiple.
	* mpn/powerpc64/copyd.asm: Likewise

	* configure.in (powerpc): Add vmx to relevant paths.

	* mpn/powerpc64/linux64.m4 (DEF_OBJECT): Accept 2nd argument, for
	alignment.
	* mpn/powerpc64/aix.m4: Likewise.
	* mpn/powerpc64/darwin.m4: Likewise.

	* mpn/powerpc32/linux.m4 (DEF_OBJECT, END_OBJECT): New macros,
	inherited from powerpc64 versions.
	* mpn/powerpc32/aix.m4: Likewise.
	* mpn/powerpc32/darwin.m4: Likewise.

	* mpn/powerpc64/vmx/popcount.asm: New file, for ppc32 and ppc64.
	* mpn/powerpc32/vmx/popcount.asm: New file, grabbing above file.

2006-01-22  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Generalize OS-dependent patterns for powerpcs.

2006-01-20  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/popham.asm: Optimize.

	* config.guess: Recognize power4 and up under linux-gnu.
	* config.sub: Generalize power recognition code.
	* acinclude.m4 (POWERPC64_PATTERN): Add 64-bit powerpc processors.
	* configure.in: Recognize powerpc processors masquerading as power
	processors.

2006-01-19  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/logops_n.asm: Rewrite for more stable speed and smaller
	code.
	* mpn/x86_64/com_n.asm: Likewise.

2006-01-18  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/addlsh1_n.asm: Rewrite to use indexed addressing.
	* mpn/x86_64/sublsh1_n.asm: Likewise.

2006-01-17  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/diveby3.c: Use GMP standard parameter names.  Nailify
	alternative code.  Use restrict for params.

	* configure.in: Recognize andn_n as not needing nailification.

	* tests/mpq/t-equal.c (check_various): Disable a test that gives common
	factors for GMP_NUMB_BITS == 62.

2006-01-16  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/get_str.c (mpn_sb_get_str): Fix digit count computation,
	was inaccurate for nails.

2006-01-15  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/mode1o.asm: Remove unneeded carry register zeroing.

2006-01-08  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/ev6/sqr_diagonal.asm: New file.

2006-01-06  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode64/mod_34lsub1.asm: Tune to 1.5 c/l.

	* mpn/generic/mullow_n.c (MUL_BASECASE_ALLOC): New #define.
	(mpn_mullow_n): Use it.

	* mpn/powerpc64/mode64/dive_1.asm: Use EXTERN.
	* mpn/powerpc64/mode64/mode1o.asm: Likewise.

	* mpn/powerpc64/aix.m4 (EXTERN): Define to import symbol.
	(LDSYM): Remove [RW] attribute.
	* mpn/powerpc64/linux64.m4 (EXTERN): Dummy definition.
	* mpn/powerpc64/darwin.m4 (EXTERN): Likewise.

2006-01-05  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode64/mode1o.asm: New file.

	* mpn/powerpc64/mode64/dive_1.asm: Use L() for labels.  Invoke ASM_END.

	* mpn/powerpc64/mode64/invert_limb.asm: Invoke ASM_END.

	* mpn/powerpc64/linux64.m4: Move toc entry generation from direct at
	DEF_OBJECT to delayed via LDSYM, define ASM_END to output it.
	* mpn/powerpc64/aix.m4: Likewise.
	* mpn/powerpc64/darwin.m4: Define a dummy ASM_END.

	* mpn/powerpc64/mode64/addmul_1.asm: Add POWER5 timings.
	* mpn/powerpc64/mode64/mul_1.asm: Likewise.

	* mpn/powerpc64/mode64/submul_1.asm: Tweak to save 1.5 c/l for POWER5.

2006-01-04  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode64/dive_1.asm: New file.

	* mpn/powerpc64/mode64/invert_limb.asm: Add missing ASM_START.

	* mpn/powerpc64/mode64/addmul_1.asm: Fix a comment typo.

	* mpn/x86_64/diveby3.asm: Rewrite.

2006-01-03  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Update bugs reporting address.

	* mpn/powerpc64/mode64/diveby3.asm: Trim a cycle off of POWER4 timing.
	Misc cleanup.

2006-01-02  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/linux64.m4 (CALL): New macro.
	* mpn/powerpc64/aix.m4: Likewise.
	* mpn/powerpc64/darwin.m4: Likewise, also define macro "DARWIN".

2005-12-28  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode64/mod_34lsub1.asm: New file.

2005-12-26  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/mod_34lsub1.asm: New file.

2005-12-20  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86_64/submul_1.asm: Save a push/pop by not using register r12.
	Use addq instead of leaq for pointer updates; schedule them.  (These
	changes shaves one cycle of overhead and 0.25 c/l.)

2005-12-18  Torbjorn Granlund  <tege@swox.com>

	* mpf/ui_div.c: Implement workaround for GCC bug triggered on alpha.
	* mpf/set_q.c: Likewise.

2005-12-16  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/tdiv_qr.c: Remove statement with no effect.
	Rename dead variable to `dummy'.

2005-12-15  Torbjorn Granlund  <tege@swox.com>

	* demos/pexpr.c (setup_error_handler): Add a missing ";".

2005-11-27  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul.c: Crudely call mpn_mul_fft_full before checking
	for unbalanced operands.

	* mpn/generic/mul_fft.c: Remove many scalar divisions.
	(mpn_mul_fft_lcm): Simplify.
	(mpn_mul_fft_decompose): Rewrite to handle arbitrarily unbalanced
	operands.

2005-11-22  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Properly recognize all 32-bit Solaris releases.

2005-11-10  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul_fft.c: Inline mpn_fft_mul_2exp_modF,
	mpn_fft_add_modF and mpn_fft_normalize.

2005-11-02  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/reuse.c: Increase operand size, decrease # of reps.

	* mpz/rootrem.c: Adapt to new mpn_rootrem.
	* mpz/root.c: Likewise.

	* tests/mpz/reuse.c: Test mpz_rootrem.

	With Paul Zimmermann:
	* mpn/generic/rootrem.c: Complete rewrite.

2005-10-31  Torbjorn Granlund  <tege@swox.com>

	* mpz/pprime_p.c (mpz_probab_prime_p): Considerably limit trial
	dividing.

	* mpz/perfpow.c (mpz_perfect_power_p): Use mpz_divisible_ui_p instead
	of mpz_tdiv_ui.

	* mpz/divegcd.c: Correct probability number for GCD == 1.

	* mpn/x86_64/mul_basecase.asm: Remove an obsolete comment.

	* mpn/x86: Add cycle counts for array of x86 processors.

	* mpn/x86/k7/mod_34lsub1.asm: Remove spurious mentions of ebp.

	* mpn/powerpc32: Add POWER5 timings.

	* mpn/powerpc32/README: Describe global reference variations.

	* mpn/ia64/divrem_2.asm: Add some comments.

	* mpn/ia64/divrem_1.asm: Reformat.

	* mpn/ia64/addmul_2.asm: Correct a comment on slotting.
	* mpn/ia64/logops_n.asm: Likewise.

	* mpn/ia64/addmul_1.asm: Remove a redundant preg mutex decl.

	* mpn/generic/dive_1.c: Whitespace cleanup.

	* mpn/alpha/ev6/nails/addmul_1.asm: Correct comments on slotting.
	* mpn/alpha/ev6/nails/addmul_2.asm: Likewise.
	* mpn/alpha/ev6/nails/addmul_4.asm: Likewise.

	* mpf/out_str.c: List some allocation improvement ideas.

	* doc/gmp.texi: Update many URLs and email addresses.

	* gmp-h.in (_GMP_H_HAVE_FILE): Check also _STDIO_H_INCLUDED.

2005-10-26  Torbjorn Granlund  <tege@swox.com>

	* tune/tuneup.c (tune_mullow): Update param.max_size for each threshold
	measurement.

	* configure.in (POWERPC64_PATTERN/*-*-darwin*): Set
	SPEED_CYCLECOUNTER_OBJ_mode64 and cyclecounter_size_mode64.
	(POWERPC64_PATTERN/*-*-linux*): Likewise.

2005-10-03  Torbjorn Granlund  <tege@swox.com>

	* demos/factorize.c (factor_using_division_2kp): Honor verbose flag.
	(factor_using_pollard_rho): Divide out new factor before it's
	clobbered.  Don't stop factoring after a composite factor was found.

2005-09-17  Torbjorn Granlund  <tege@swox.com>

	* demos/pexpr.c (fns): Add factorial keywords.

2005-08-16  Torbjorn Granlund  <tege@swox.com>

	* tune/Makefile.am (EXTRA_DIST): Change "amd64" => "x86_64".
	* mpn/Makefile.am (TARG_DIST): Change "amd64" => "x86_64".

2005-08-15  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Change "amd64" => "x86_64".

2005-06-13  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/pre_mod_1.c: Canonicalize variable names.

	* mpn/generic/divrem.c: Rate qxn test as UNLIKELY.

	* mpn/generic/gcdext.c (sanity_check_row): Invoke TMP_MARK.

	* tune/tuneup.c (tune_mullow): Fix all max_size fields.

	* gmp-impl.h (SQR_TOOM3_THRESHOLD_LIMIT): New #define.
	* tune/tuneup.c (tune_sqr): Use SQR_TOOM3_THRESHOLD_LIMIT.
	(sqr_toom3_threshold): Initialize from SQR_TOOM3_THRESHOLD_LIMIT.

	* mpn/generic/mul_n.c (mpn_sqr_n): Use SQR_TOOM3_THRESHOLD_LIMIT.

	* gmp-impl.h (mpn_nand_n, mpn_iorn_n, mpn_nior_n, mpn_xnor_n):
	Handle nails.

2005-06-13  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcdext.c (gcdext_schoenhage): Check for the
	(unlikely) case that one of the hgcd/euclid steps results in two
	remainders of one limb each. Then use gcdext_1.

2005-06-12  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/ev6/sub_n.asm: Analogous changes as to add_n.asm last.

2005-06-11  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/ev6/add_n.asm: Rewrite inner loop to load later.
	Add mpn_add_nc entry.

	* mpn/alpha/ev6/addmul_1.asm: Remove redundant initial loads.

2005-06-09  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/dive_1.asm: Fix issues with HP-UX.

2005-06-08  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/diveby3.asm: Update TODO list.

	* mpn/ia64/mode1o.asm: Fix comment typos.

	* mpn/ia64/dive_1.asm: New file.

2005-06-07  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/mode1o.asm: Add prefetching.

	* mpn/generic/dive_1.c: Use variable h for upper umul_ppmm result.

2005-06-06  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/hamdist.asm: Complete rewrite.
	* mpn/ia64/popcount.asm: Rewrite to use multi-pronged feed-in.

	* mpn/ia64/aors_n.asm: Rewrite feed-in code.
	* mpn/ia64/rsh1aors_n.asm: Likewise.
	* mpn/ia64/aorslsh1_n.asm: Likewise.
	* mpn/ia64/lorrshift.asm: Likewise.

2005-06-04  Torbjorn Granlund  <tege@swox.com>

	* tests/devel/try.c (choice_array): Exclude mpn_preinv_mod_1 unless
	USE_PREINV_MOD_1.
	(choice_array): Exclude mpn_sqr_basecase if SQR_KARATSUBA_THRESHOLD
	is zero.

2005-06-03  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/ev6/addmul_1.asm: Prefix all labels with "$".
	* mpn/alpha/ev6/mul_1.asm: Likewise.

2005-06-02  Torbjorn Granlund  <tege@swox.com>

	* tests/refmpn.c (refmpn_divmod_1c_workaround): Implement workaround
	to gcc 3.4.x bug triggered on powerpc64 with 32-bit ABI.

2005-06-01  Torbjorn Granlund  <tege@swox.com>

	* tests/devel/try.c (main): Fix a typo.

2005-05-31  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/ev6/addmul_1.asm: Rewrite for L1 cache, add prefetch.

2005-05-30  Torbjorn Granlund  <tege@swox.com>

	* tests/misc.c (tests_rand_start): Mask random seed to 32 bits.

2005-05-29  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode32/mul_1.asm: Handle BROKEN_LONGLONG_PARAM.
	* mpn/powerpc64/mode32/addmul_1.asm: Likewise.
	* mpn/powerpc64/mode32/submul_1.asm: Likewise.

	* mpn/powerpc32/mode1o.asm: Rewrite to actually work.

	* mpn/powerpc32/aix.m4 (LEA): New macro.
	(ASM_END): New macro.

	* mpn/powerpc32/linux.m4: New file.
	* mpn/powerpc32/darwin.m4: New file.
	* configure.in: Use linux.m4 and darwin.m4.
	(powerpc64-linux-gnu): Add support for mode32.

2005-05-25  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mullow_n.c: Remove FIXME mentioning fixed flaw.

	* tests/mpz/t-cmp_d.c (check_one): Fix printf fmt string typo.

	* demos/isprime.c: #include stdlib.h.
	* tests/rand/t-urbui.c: Likewise.
	* tests/rand/t-urmui.c: Likewise.

	* tests/mpz/t-popcount.c (check_random): Remove spurious printf arg.

	* mpn/ia64/lorrshift.asm: Cleanup code layout.
	* mpn/ia64/popcount.asm: Likewise.

2005-05-24  Torbjorn Granlund  <tege@swox.com>

	* tests/devel/try.c (param_init) [TYPE_GET_STR]: Set retval field.
	(compare): Handle SIZE_GET_STR as SIZE_RETVAL.

	* tests/refmpn.c (refmpn_get_str): Rewrite to make it work.

2005-05-23  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/add_n.asm: Add mpn_add_nc entry point.
	* mpn/amd64/sub_n.asm: Add mpn_sub_nc entry point.

	* longlong.h (many places): Remove lvalue casts.

	* gmp-impl.h (MPF_SIGNIFICANT_DIGITS): Cast prec to avoid overflow
	for > 4G digits.

	* mpn/alpha/ev6/add_n.asm: Prefetch using ldl.
	* mpn/alpha/ev6/sub_n.asm: Likewise.

	* mpn/alpha/ev6/slot.pl (optable): Recognize negq and ldl.

	* mpn/ia64/aors_n.asm: Prefetch using lfetch.
	* mpn/ia64/lorrshift.asm: Likewise.
	* mpn/ia64/popcount.asm: Likewise.
	* mpn/ia64/diveby3.asm: Likewise.

2005-05-22  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/ev67/popcount.asm: Prefetch.
	* mpn/alpha/ev67/hamdist.asm: Prefetch.

	* longlong.h (add_ssaaaa) [x86]: Remove lvalue casts.
	(sub_ddmmss) [x86]: Likewise.

	* tests/devel/try.c (param_init) [TYPE_MPZ_JACOBI]: Add DATA_SRC1_ODD.
	(param_init) [TYPE_MPZ_KRONECKER]: Clear inherited DATA_SRC1_ODD.
	(param_init) [TYPE_DIVEXACT_1]: Use symbolic name DIVISOR_LIMB.

2005-05-21  Torbjorn Granlund  <tege@swox.com>

	* tests/devel/try.c (param_init) [TYPE_MPZ_JACOBI]: Initialize divisor
	field according to UDIV_NEEDS_NORMALIZATION.

	* mpz/mul_i.h: Remove left-over TMP_XXXX marker arguments.

2005-05-20  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/pentium4/sse2/addmul_1.asm (mpn_addmul_1c): Put carry in
	proper register.

	* mpn/generic/sqr_basecase.c (mpn_sqr_basecase, addmul_2 version):
	Avoid accesses out-of-bound in MPN_SQR_DIAGONAL applicate code.

2005-05-19  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/diveby3.asm: Make it actually work.

	* gmp-impl.h (MULLOW_BASECASE_THRESHOLD_LIMIT): New #define.
	* mpn/generic/mullow_n.c: Use fixed stack allocation for the smallest
	operands; use TMP_S* allocation for medium operands.

	* gmp-impl.h: Remove nested TUNE_PROGRAM_BUILD test.

2005-05-18  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul_n.c: Make squaring and multiplication code more
	similar.  Use TMP_S* functions.

	* gmp-impl.h (TMP_DECL, TMP_MARK, TMP_FREE): Get rid of argument.
	(TMP_SALLOC): New macro for "small" allocations.
	(TMP_BALLOC): New macro for "big" allocations.
	(TMP_SDECL, TMP_SMARK, TMP_SFREE): New macros for functions that use
	just TMP_SALLOC.
	(WANT_TMP_ALLOCA): Make default functions choose alloca or reentrant
	functions, depending on size.

	* *.c: Remove TMP_XXXX marker arguments.

	* acinclude.m4 (WANT_TMP): Want tal-reent.lo also for alloca case.

2005-05-16  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/gmp-mparam.h: Further extend FFT tables.

2005-05-15  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (udiv_qrnnd_preinv2): Pull an add into add_ssaaaa.
	(udiv_qrnnd_preinv2gen): Likewise.

2005-05-14  Torbjorn Granlund  <tege@swox.com>

	* longlong.h (add_ssaaaa) [x86_64]: Restrict allowed immediate
	operands.
	* (sub_ddmmss) [x86_64]: Likewise.

2005-05-02  Torbjorn Granlund  <tege@swox.com>

	* acinclude.m4 (GMP_HPC_HPPA_2_0): Make gmp_tmp_v1 sed pattern handle
	version numbers like B.11.X.32509-32512.GP.

	* mpn/m68k/aors_n.asm: Correct MULFUNC_PROLOGUE.

	* mpn/powerpc64/mode64/aors_n.asm: Add a MULFUNC_PROLOGUE.

	* mpf/inp_str.c: Use plain int for mpf_set_str return value (works
	around gcc 4 bug).

	* acinclude.m4 (GMP_ASM_POWERPC_PIC_ALWAYS): Handle darwin's assembly
	syntax.
	(long long reliability test 1): New GMP_PROG_CC_WORKS_PART test.
	(long long reliability test 2): New GMP_PROG_CC_WORKS_PART test.

	* configure.in: Add mode64 support for darwin.  Use darwin.m4.
	Add cflags_opt flags for mode32 darwin.

	* mpn/powerpc64: Use L() for all asm files.

	* mpn/asm-defs.m4 (PIC_ALWAYS): Define PIC just iff PIC_ALWAYS = "yes".

	* mpn/powerpc64/darwin.m4: New file.

	* mpn/powerpc64/linux64.m4: Remove TOCREF, add LDSYM.
	Rework DEF_OBJECT to need just one argument.
	* mpn/powerpc64/aix.m4: Likewise.

	* mpn/powerpc64/mode64/invert_limb.asm: Load approx_tab address with
	LDSYM.  Optimize somewhat.  Remove 2nd DEF_OBJECT operand.

2005-05-01  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/popham.c: Compute final summation differently for 64-bit.

	* tests/mpz/t-popcount.c (check_random): New function.
	(main): Call it.

2005-04-28  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/add_n.asm: Use r9 instead of rbx to save push/pop.
	* mpn/amd64/sub_n.asm: Likewise.

2005-04-09  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/copyi.asm: If HAVE_ABI_mode32, ignore upper 32 bits of
	mp_size_t argument.
	* mpn/powerpc64/copyd.asm: Likewise.
	* mpn/powerpc64/sqr_diagonal.asm: Likewise.
	* mpn/powerpc64/lshift.asm: Likewise.
	* mpn/powerpc64/rshift.asm: Likewise.
	* mpn/powerpc64/logops_n.asm: Likewise.
	* mpn/powerpc64/com_n.asm: Likewise.

2005-04-08  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/rootrem.c: Allocate PP_ALLOC limbs also for qp.

2005-04-07  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/add_n.asm: Add nc entry point.
	* mpn/powerpc32/sub_n.asm: Likewise.

	* mpn/amd64/*.asm: Add Prescott/Nocona cycle/limb numbers.

	* mpn/alpha/add_n.asm: Add correct cycle/limb numbers.
	* mpn/alpha/sub_n.asm: Likewise.
	* mpn/alpha/ev5/add_n.asm: Likewise.
	* mpn/alpha/ev5/sub_n.asm: Likewise.

2005-03-31  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/k7/gmp-mparam.h: Fix typo in last change.

2005-03-19  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/gmp-mparam.h: Update.

	* mpn/alpha/gmp-mparam.h: Update.
	* mpn/alpha/ev5/gmp-mparam.h: Update.
	* mpn/alpha/ev6/gmp-mparam.h: Update.

	* mpn/ia64/gmp-mparam.h: Update.

	* mpn/x86/p6/mmx/gmp-mparam.h: Update.
	* mpn/x86/pentium4/sse2/gmp-mparam.h: Update.
	* mpn/x86/k7/gmp-mparam.h: Update.

	* tests/mpz/t-gcd.c (main): Honor command line reps argument.

	* tune/speed.h (SPEED_ROUTINE_MPN_GCD_CALL): Simplify and correct code
	for generating test operands.

2005-03-17  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (qstack_adjust): New argument d, saying how much
	to adjust the top quotient.
	(hgcd_adjust): The quotient can be off by either 1 or 2.

2005-03-16  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-gcd.c (MAX_SCHOENHAGE_THRESHOLD): Set to largest of
	gcd,gcdext thresholds.

2005-03-15  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcdext.c (gcdext_schoenhage): When calling gcdext_lehmer,
	reuse all temporary limb storage, including the storage used for the
	qstack.

2005-03-09  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/logops_n.asm: Add MULFUNC_PROLOGUE.

2005-03-05  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/gmp-mparam.h: Extend MUL_FFT_TABLE and SQR_FFT_TABLE.
	* mpn/ia64/gmp-mparam.h: Likewise.

2005-02-17  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/divrem_1.asm: Add preinv entry point.

2005-01-13  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (MPN_SIZEINBASE): Count bits in type size_t.
	(MPN_SIZEINBASE_16): Likewise.

2004-12-17  Torbjorn Granlund  <tege@swox.com>

	* tune/speed.c (run_gnuplot): Use lines, not linespoints.
	Output a reset gnuplot command initially.

2004-12-04  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/random2.c (gmp_rrandomb): Rework again.
	* mpz/rrandomb.c (gmp_rrandomb): Likewise.

	* mpn/amd64/redc_1.asm: Call via PLT when PIC.

2004-11-29  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/divrem_1.asm: Add preinv entry point.
	* mpn/amd64/gmp-mparam.h: Set USE_PREINV_DIVREM_1 to 1.

2004-11-24  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/diveby3.asm: Use correct prefetch instruction.

2004-11-19  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/diveby3.asm: Add ",gp" glue in PROLOGUE.
	Add r31 dummy operand to `br' instruction.

2004-11-17  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode64/addmul_1.asm: Rewrite.
	* mpn/powerpc64/mode64/mul_1.asm: Rewrite.

	* configure.in: Invoke AC_C_RESTRICT.

2004-11-16  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/diveby3.asm: New file.

2004-11-13  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/popham.asm: New file.

2004-11-12  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/add_n.asm: Correct cycle count.
	* mpn/amd64/sub_n.asm: Likewise.

	* mpn/amd64/dive_1.asm: Speed divisors with many factors of 2.

2004-11-11  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/dive_1.asm: New file.

2004-11-10  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/popham.c: Add comment.

2004-11-09  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/com_n.asm: New file.

	* mpn/amd64/logops_n.asm: New file.

2004-11-08  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/com_n.asm: New file.

2004-11-05  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/diveby3.asm: New file.

	* config.guess: Strip any PPC string in /proc/cpuinfo.
	Recognize 970 in that code.

2004-11-01  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/mul_basecase.asm: New file.

	* mpn/amd64/redc_1.asm: New file.

2004-10-25  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode64/addlsh1_n.asm: Correct cycle counts.

	* mpn/powerpc64/README: Update POWER5/PPC970 pipeline information.

	* mpn/generic/mul_basecase.c (MAX_LEFT): Add comment.

	* doc/gmp.texi: Consistently use "x86" denotation.
	(Assembler SIMD Instructions): Mention SSE2 usage.

	* demos/pexpr.c (main): Handle "negative" base in mpz_sizeinbase call.

2004-10-18  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode64/submul_1.asm: Shave 2 cycles/limb with new carry
	inversion trick.

2004-10-16  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Support icc under x86.
	(ia64-*-linux*): Pass -no-gcc to icc.

2004-10-15  Torbjorn Granlund  <tege@swox.com>

	* longlong.h (ia64 umul_ppmm): Add version for icc.

	* configure.in: Support icc under ia64-*-linux*.

	* acinclude.m4: New "compiler works" test for icc 8.1 bug.
	(GMP_PROG_CC_IS_GNU): Don't let Intel's icc fool us it is GCC.

2004-10-14  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/gcdext.c: Add a few missing TMP_MARK.

2004-10-14  Torbjorn Granlund  <tege@swox.com>

	* acinclude.m4 (GMP_ASM_W32): Try also "data4".

	* mpn/ia64/logops_n.asm: Don't use naked "br", rejected by Intel
	assembler.
	* mpn/ia64/aors_n.asm: Likewise.

	* mpn/ia64/divrem_2.asm: Add ".prologue".

	* mpn/ia64/hamdist.asm: Put alloc first in bundle, enforced by the
	Intel assembler.

	* longlong.h: Exclude masquerading __INTEL_COMPILER from ia64 asm.
	* gmp-impl.h: Likewise.

2004-10-12  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/mul_2.asm: Rewrite function entry code, write new code for
	n=2.
	* mpn/ia64/addmul_2.asm: Likewise.

	* tests/devel/try.c: Handle mpn_mul_2 like mpn_addmul_2.

	* tune/speed.c (routine): Make R parameter optional for mpn_mul_2.

2004-10-11  Torbjorn Granlund  <tege@swox.com>

	* mpn/sparc64/addmul_1.asm: Update a comment.

	* tests/devel/aors_n.c: #include tests.h.
	* tests/devel/anymul_1.c: Likewise.
	* tests/devel/shift.c: Likewise.
	* tests/devel/copy.c: Likewise.

	* tests/devel/aors_n.c: Handle also mpn_addlsh1_n, mpn_sublsh1_n,
	mpn_rsh1add_n, and mpn_rsh1sub_n.

	* mpn/ia64/submul_1.asm: Add TODO item.

	* mpn/ia64/aors_n.asm: Rewrite function entry code (again).
	* mpn/ia64/aorslsh1_n.asm: Likewise.
	* mpn/ia64/logops_n.asm: Likewise.

	* mpn/ia64/rsh1aors_n.asm: Tune function entry and feed-in code.
	* mpn/ia64/lorrshift.asm: Likewise.  Remove several spurious loads.

	* tests/devel/Makefile.am (EXTRA_PROGRAMS): Updates for yesterday's
	file removals and additions.

2004-10-10  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/copyi.asm: Tune function entry code.
	* mpn/ia64/copyd.asm: Likewise.

	* mpn/ia64/logops_n.asm: Tune function entry and feed-in code for speed
	and size.
	* mpn/ia64/aors_n.asm: Likewise.

	* mpn/powerpc64/logops_n.asm: Correct cycles counts.
	* mpn/powerpc64/mode64/aors_n.asm: Likewise.

	* tests/devel/copy.c: Handle both MPN_COPY_INCR and MPN_COPY_DECR.

	* tests/devel/logops_n.c: New file, handle all logical operations.

	* tests/devel/anymul_1.c: New file, handle mpn_mul_1, mpn_addmul_1, and
	mpn_submul_1
	* tests/devel/mul_1.c: Remove.
	* tests/devel/addmul_1.c: Remove.
	* tests/devel/submul_1.c: Remove.

	* tests/devel/shift.c: New file, handle mpn_lshift and mpn_rshift.
	* tests/devel/lshift.c: Remove.
	* tests/devel/rshift.c: Remove.

	* tests/devel/aors_n.c: New file, handle mpn_add_n and mpn_sub_n.
	* tests/devel/add_n.c: Remove.
	* tests/devel/sub_n.c: Remove.

2004-10-09  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/linux64.m4: Define DEF_OBJECT, END_OBJECT, and TOCREF.
	* mpn/powerpc64/aix.m4: Likewise.
	* mpn/powerpc64/mode64/invert_limb.asm: Use DEF_OBJECT, END_OBJECT, and
	TOCREF for approx_tab.

	* mpn/amd64/mul_1.asm: Add mpn_mul_1c entry point.

2004-10-08  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/copyi.asm: New file.
	* mpn/powerpc64/copyd.asm: New file.
	* gmp-h.in: Remove PPC MPN_COPY variants.
	* gmp-impl.h: Likewise.

	* mpn/powerpc64/logops_n.asm: New file.

	* mpn/powerpc64/mode64/invert_limb.asm: New file.

2004-10-07  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode64/aors_n.asm: New file, optimized for POWER4 and
	its derivatives.
	* mpn/powerpc64/mode64/add_n.asm: Delete.
	* mpn/powerpc64/mode64/sub_n.asm: Delete.

	* configfsf.guess: Patch HP-UX code to accommodate HP compiler's new
	inability to read from stdin.

	* mpn/powerpc64/mode64/addsub_n.asm: Remove accidentally added file.

2004-10-02  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/README: Update for new developments, fix typos.

	* mpn/amd64/mul_1.asm: Tweak addressing (3.25 => 3.0 cycles/limb).

	* mpn/amd64/addmul_1.asm: Remove unreachable code block.

2004-09-30  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/addmul_1.asm: Rewrite, now 3.25 cycles/limb.

	* mpn/ia64/addmul_1.asm: Slightly enhance cross-jumping for code
	density.
	* mpn/ia64/mul_1.asm: Analogous changes.

2004-09-29  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (x86 ULONG_PARITY): Work around GCC change of "q" register
	flag.

2004-09-28  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/divrem_1.asm: Add cycle counts to loop.

	* mpn/ia64/divrem_2.asm: New file.

2004-09-28  Paul Zimmermann  <Paul.Zimmermann@loria.fr>

	* mpn/generic/mul_fft.c (mpn_mul_fft): Fix a bug in the choice of the
	recursive fft parameters.

2004-09-20  Torbjorn Granlund  <tege@swox.com>

	* tests/misc.c (tests_rand_start): Default to strtoul for re-seeding.

	* tests/mpz/t-mul.c (ref_mpn_mul): Fudge tmp allocation for toom3.

2004-09-19  Torbjorn Granlund  <tege@swox.com>

	* tests/misc.c (tests_rand_start): Shift tv_usec for better seeding.

2004-09-18  Torbjorn Granlund  <tege@swox.com>

	* tests/misc.c (tests_rand_start): Invoke fflush after printing seed.

	* tests/mpz/t-mul.c (main): Check environment for GMP_CHECK_FFT, run
	extra FFT tests if set.
	(ref_mpn_mul): Use library code for kara and toom, but skewded so that
	we never use the same algorithm that we're testing.
	(mul_kara): Delete.
	(debug_mp): Print just one line of large numbers.
	(ref_mpn_mul): Rework usage of tp temporary space.

2004-09-15  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/mul_2.asm: For HAVE_ABI_32, convert vp.
	* mpn/ia64/addmul_2.asm: Likewise.

2004-09-13  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/invert_limb.asm: Rewrite.

	* mpn/ia64/logops_n.asm: Insert some more stops.

2004-09-12  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/gmp-mparam.h: Update.
	* mpn/amd64/gmp-mparam.h: Update.

	* mpn/ia64/sqr_diagonal.asm: Shave off a few cycles.

2004-09-11  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/mul_2.asm: New file.
	* mpn/ia64/addmul_2.asm: New file.

	* mpn/ia64/addmul_1.asm: Tune a cycle from prologue.

	* mpn/ia64/lorrshift.asm: Insert stops after several branches.
	* mpn/ia64/aorslsh1_n.asm: Likewise.
	* mpn/ia64/rsh1aors_n.asm: Likewise.

	* mpn/generic/sqr_basecase.c: In variant for HAVE_NATIVE_mpn_addmul_2,
	accumulate carry also for when HAVE_NATIVE_mpn_addlsh1_n.

2004-09-07  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/submul_1.asm: Rewrite.

	* mpn/ia64/addmul_1.asm: Format to placate HP-UX assembler.
	* mpn/ia64/mul_1.asm: Likewise.

2004-09-02  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/mul_1.asm: Optimize feed-in code.
	* mpn/ia64/addmul_1.asm: Rewrite feed-in code.

2004-08-29  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-sizeinbase.c: Disable mpz_fake_bits and check_sample.

2004-07-16  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/addmul_1.asm: Format to placate HP-UX assembler.

2004-06-17  Kevin Ryde  <kevin@swox.se>

	* doc/gmp.texi: Use @. when sentence ends with a capital, for good
	spacing in tex.
	(Language Bindings): Add gmp-d, reported by Ben Hinkle.  Update SWI
	Prolog URL, reported by Jan Wielemaker.

2004-06-09  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Handle --enable-fat.  Use that to enable x86 fat
	builds, remove magic meaning of i386-*-*.

2004-06-03  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (memset): Use a local char* pointer, in case parameter is
	something else (eg. tune/common.c).  Reported by Emmanuel Thomé.

2004-06-01  Kevin Ryde  <kevin@swox.se>

	* config.guess (i?86-*-*): Avoid "Illegal instruction" message which
	goes to stdout on 80386 freebsd4.9.

2004-05-23  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcdext.c (gcdext_1_u): New function.
	(mpn_gcdext): Use it.

2004-05-23  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/gcdext.c (gcdext_1_odd): Use masking to avoid jumps.

2004-05-22  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/pentium4/sse2/addmul_1.asm: Add Prescott cycle numbers.

	* mpn/amd64/divrem_1.asm: Shave a cycle from fraction development code.

	* mpn/powerpc32/lshift.asm: Add more cycle numbers.
	* mpn/powerpc32/rshift.asm: Likewise.

	* mpn/ia64/addmul_1.asm: Reformat.

2004-05-21  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (mpn_mullow_n, mpn_mullow_basecase): Declare.

	* tune/Makefile.am: Compile gcdext.c.

	* gmp-impl.h (GET_STR_THRESHOLD_LIMIT): Lower outrageous value to 150.
	(GCDEXT_SCHOENHAGE_THRESHOLD): Set reasonable default.  Override when
	TUNE_PROGRAM_BUILD.
	(GCDEXT_THRESHOLD): Remove.

	* tune/tuneup.c (gcdext_schoenhage_threshold): New variable.
	(gcdext_threshold): Remove variable.
	(tune_gcd_schoenhage): Lower step_factor to 0.1.
	(tune_gcdext_schoenhage): New function, based on tune_gcd_schoenhage.
	(tune_gcdext): Remove function.
	(all): Corresponding changes.

2004-05-21  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/gcdext.c: Complete rewrite.  Uses fast Lehmer code for
	small operands, and Schoenhage code for large operands.

	* tune/speed.h (SPEED_ROUTINE_MPN_GCD_CALL): Ensure first operand is
	not smaller than 2nd operand.

2004-05-17  Kevin Ryde  <kevin@swox.se>

	* gmp-h.in (mpz_get_ui): Use #if instead of plain if, and for nails
	use ?: same as normal case, to avoid warnings from Borland C++ 6.0.
	Reported by delta trinity.

2004-05-15  Kevin Ryde  <kevin@swox.se>

	* tune/time.c (getrusage_backwards_p): New function
	(speed_time_init): Use it to exclude broken netbsd1.4.1 getrusage.
	* configure.in (m68*-*-netbsd1.4*): Remove code pretending getrusage
	doesn't exist.
	* tune/README (NetBSD 1.4.1 m68k): Update notes.

	* configure.in (mips*-*-* ABI=n32): Remove gcc_n32_ldflags and
	cc_n32_ldflags, libtool knows to put the linker in n32 mode.

2004-05-15  Torbjorn Granlund  <tege@swox.com>

	* config.guess (powerpc*-*-*): Add more processor types to mfpvr code.
	* configure.in: Generalize powerpc subtype matching code.

	* mpz/fac_ui.c: Misc cleanups, spelling corrections.

2004-05-14  Kevin Ryde  <kevin@swox.se>

	* mpf/sub.c: When one operand cancels high limbs of the other, strip
	high zeros on the balance before truncating to destination precision.
	Truncating first loses accuracy and can lead to a result 0 despite
	operands being not equal.  Reported by John Abbott.
	Also, ensure exponent is zero when result is zero, for instance if
	operands are exactly equal.
	* tests/mpf/t-sub.c (check_data): New function, exercising these.

2004-05-12  Kevin Ryde  <kevin@swox.se>

	* configure.in (AC_PROG_RANLIB): New macro, supposedly required by
	automake, though it doesn't complain.

	* demos/expr/Makefile.am (ARFLAGS): Add a default setting, to
	workaround an automake bug.

2004-05-10  Kevin Ryde  <kevin@swox.se>

	* */Makefile.in, install-sh, aclocal.m4: Update to automake 1.8.4.

	* doc/gmp.texi (Demonstration Programs): Add a remark about expression
	evaluation in the main gmp library.

	* demos/expr/exprfa.c (mpf_expr_a): Correction to mpX_init, use
	mpf_init2 to follow requested precision.
	* demos/expr/exprza.c, demos/expr/exprqa.c: Use wrappers for mpX_init,
	to make parameters match.

	* demos/expr/run-expr.c: Don't use getopt, to avoid needing configury
	for optarg declaration.  Remove TRY macro, rename foo and bar to var_a
	and var_b, for clarity.
	* demos/expr/expr-impl.h: Don't use expr-config.h.
	* configure.in (demos/expr/expr-config.h): Remove.
	* demos/expr/expr-config.in: Remove file.

2004-05-08  Kevin Ryde  <kevin@swox.se>

	* doc/configuration (Configure): Update for current automake not
	copying acinclude.m4 into aclocal.m4.

	* configure.in, Makefile.am, doc/gmp.texi, doc/configuration,
	tests/cxx/Makefile.am, demos/expr/Makefile.am, demos/expr/README,
	demos/expr/expr.c, demos/expr/expr.h, demos/expr/expr-config-h.in,
	demos/expr/expr-impl.h, demos/expr/run-expr.c, demos/expr/t-expr.c:
	MPFR now published separately, remove various bits.
	* mpfr/*, tests/cxx/t-headfr.cc, demos/expr/exprfr.c,
	demos/expr/exprfra.c: Remove.

2004-05-07  Kevin Ryde  <kevin@swox.se>

	* tests/cxx/Makefile.am (TESTS_ENVIRONMENT): Amend c++ shared library
	path hack, on k62-unknown-dragonfly1.0 /usr/bin/make runs its commands
	"set -e", so we need an "|| true" in case there's nothing to copy (for
	instance in a static build).

2004-05-06  Kevin Ryde  <kevin@swox.se>

	* mpn/alpha/mode1o.c: Remove, in favour of ...
	* mpn/alpha/mode1o.asm: New file.
	* mpn/alpha/alpha-defs.m4 (bwx_available_p): New macro.

	* tune/amd64.asm: Save rbx in r10 rather than on the stack.

	* configure.in (x86_64-*-*): Try also "-march=k8 -mno-sse2", in case
	we're in ABI=32 on an old OS not supporting xmm regs.
	(GMP_GCC_PENTIUM4_SSE2, GMP_OS_X86_XMM): Run these tests under
	-march=k8 too, and not under ABI=64.

	* doc/gmp.texi (Converting Integers): For mpz_get_d, note truncation
	and overflows.  For mpz_get_d_2exp note truncation, note result if
	OP==0, and cross reference libc frexp.
	(Rational Conversions): For mpq_get_d, note truncation and overflows.
	(Converting Floats): For mpf_get_d, note truncation and overflows.
	For mpf_get_d_2exp, note truncation, note result if OP==0.
	(Assembler Code Organisation): Note nails subdirectories.
	Clarification of get_d_2exp OP==0 reported by Sylvain Pion.

2004-05-05  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mullow_n.c, mpn/generic/mullow_basecase.c: New files
	(mainly by Niels Möller).
	* configure.in, mpn/Makefile.am: Add them.

	* gmp-impl.h (MULLOW_BASECASE_THRESHOLD, MULLOW_DC_THRESHOLD,
	MULLOW_MUL_N_THRESHOLD): Override for TUNE_PROGRAM_BUILD.

	* tune/Makefile.am: Compile mullow_n.c.
	* tune/common.c (speed_mpn_mullow_n, speed_mpn_mullow_basecase):
	New functions.
	* tune/speed.c (routine): Add entries for mpn_mullow_n and
	mpn_mullow_basecase.
	* tune/speed.h (SPEED_ROUTINE_MPN_MULLOW_N_CALL,
	SPEED_ROUTINE_MPN_MULLOW_BASECASE): New #defines.
	* tune/tuneup.c (tune_mullow): New function.

	* gmp-impl.h (invert_limb): Compute branch-freely.

2004-05-02  Kevin Ryde  <kevin@swox.se>

	* mpn/amd64/mode1o.asm: Use movabsq to support large model non-PIC.
	Use 32-bit insns to save code bytes, and to save a couple of cycles on
	the initial setup multiplies.

2004-05-01  Kevin Ryde  <kevin@swox.se>

	* doc/gmp.texi (References): Update gcc online docs url to
	gcc.gnu.org.

	* configure.in (mips*-*-irix[6789]*): Correction to m4 quoting of this
	pattern.  (Believe the mips64*-*-* part also used picks up all current
	irix6 tuples anyway.)  Reported by Rainer Orth.

2004-04-30  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_PROG_CC_X86_GOT_EAX_EMITTED,
	GMP_ASM_X86_GOT_EAX_OK): New macros.
	(GMP_PROG_CC_WORKS): Use them to detect an old gas bug tickled by
	recent gcc.  Reported by David Newman.

	* doc/gmp.texi (Reentrancy): Note also gmp_randinit_default as an
	alternative to gmp_randinit.

2004-04-29  Torbjorn Granlund  <tege@swox.com>

	* configfsf.guess: Update to 2004-03-12.
	* configfsf.sub: Likewise.

2004-04-27  Torbjorn Granlund  <tege@swox.com>

	* mpz/rrandomb.c (gmp_rrandomb): Rework to avoid extra limb allocation
	and to generate even numbers.
	* mpn/generic/random2.c (gmp_rrandomb): Likewise.

2004-04-25  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (FORCE_DOUBLE): Don't use an asm with a match constraint
	on a memory output, apparently not supported and provokes a warning
	from gcc 3.4.

2004-04-24  Kevin Ryde  <kevin@swox.se>

	* longlong.h (count_leading_zeros_gcc_clz,
	count_trailing_zeros_gcc_ctz): New macros.
	(count_leading_zeros, count_trailing_zeros) [x86]: Use them on gcc
	3.4.

	* configure.in (x86-*-* gcc_cflags_cpu): Give a -mtune at the start of
	each option list, for use by gcc 3.4 to avoid deprecation warnings
	about -mcpu.

	* mpz/aorsmul.c, mpz/aorsmul_i.c, mpz/cfdiv_q_2exp.c,
	mpz/cfdiv_r_2exp.c, mpq/aors.c, mpf/ceilfloor.c: Give REGPARM_ATTR()
	on function definition too, as demanded by gcc 3.4.

2004-04-22  Kevin Ryde  <kevin@swox.se>

	* tests/rand/t-lc2exp.c (check_bigc1): New test.

	* doc/fdl.texi: Tweak @appendixsubsec -> @appendixsec to match our
	preference for this in an @appendix, and because texi2pdf doesn't
	support @appendixsubsec directly within an @appendix.

2004-04-20  Kevin Ryde  <kevin@swox.se>

	* doc/texinfo.tex: Update to 2004-04-07.08 from texinfo 4.7.
	* doc/gmp.texi, mpfr/mpfr.texi (@copying): Don't put a line break in
	@ref within @copying, recent texinfo.tex doesn't like that.

	* demos/perl/GMP.xs (static_functable): Treat cygwin the same as mingw
	DLLs.

	* */Makefile.in, install-sh: Update to automake 1.8.3.
	* ltmain.sh, aclocal.m4, configure: Update to libtool 1.5.6.

	* gmp-impl.h (LIMB_HIGHBIT_TO_MASK): Use a compile-time constant
	expression, rather than a configure test.
	* acinclude.m4, configure.in (GMP_C_RIGHT_SHIFT): Remove, no longer
	needed.
	* tests/t-hightomask.c: New file.
	* tests/Makefile.am (check_PROGRAMS): Add it.

	* macos/configure (parse_top_configure): Look for PACKAGE_NAME and
	PACKAGE_VERSION now used by autoconf.
	(what_objects): Only demand 9 object files, as for instance occurs in
	the scanf directory.
	(asm files): Transform labels L(foo) -> Lfoo.  Take func name from
	PROLOGUE to support empty "EPILOGUE()".  Recognise and substitute
	register name "define()"s.
	* macos/Makefile.in (CmnObjs): Add tal-notreent.o.

2004-04-19  Torbjorn Granlund  <tege@swox.com>

	* tune/speed.h (SPEED_ROUTINE_MPN_ROOTREM): New #define.
	(speed_mpn_rootrem): Declare.
	* tune/common.c (speed_mpn_rootrem): New function.
	* tune/speed.c (routine): Add entry for mpn_rootrem.

2004-04-16  Kevin Ryde  <kevin@swox.se>

	* doc/fdl.texi: Update from FSF, just fixing a couple of typos.

	* macos/configure, macos/Makefile.in: Add printf and scanf directories.

	* tests/mpz/t-gcd.c (check_data): New function, exercising K6
	gcd_finda bug.

2004-04-14  Kevin Ryde  <kevin@swox.se>

	* doc/gmp.texi (Reentrancy, Random State Initialization): Note
	gmp_randinit use of gmp_errno is not thread safe.  Reported by Vincent
	Lefèvre.

	* doc/gmp.texi (Random State Initialization): Add index entries for
	gmp_errno and constants.

	* mpn/m68k/README: Update _SHORT_LIMB -> __GMP_SHORT_LIMB.

	* configure.in (--enable-mpbsd): Typo Berkley -> Berkeley in help msg.

2004-04-12  Kevin Ryde  <kevin@swox.se>

	* demos/perl/GMP.xs (static_functable): New macro, use it for all
	function tables, to support mingw DLL builds.
	* demos/perl/INSTALL (NOTES FOR PARTICULAR SYSTEMS): Remove note on
	DLLs, should be ok now.

	* demos/perl/sample.pl: Print the module and library versions in use.

	* demos/perl/GMP.pm, Makefile.PL (VERSION): Set to '2.00'.
	* demos/perl/GMP.pm (COPYRIGHT): New in the doc section.

	* Makefile.am: Note 4.1.3 libtool versioning info, and REVISION policy.

	* tal-debug.c: Add <stdlib.h> for abort.

2004-04-07  Torbjorn Granlund  <tege@swox.com>

	* tests/refmpf.c (refmpf_add_ulp): Adjust exponent when needed.

	* mpn/generic/random2.c: Rewrite (clone mpz/rrandomb.c).

2004-04-07  Kevin Ryde  <kevin@swox.se>

	* mpn/x86/k6/gcd_finda.asm: Correction jbe -> jb in initial setups.
	Zero flag is wrong here, it relects only the high limb of the compare,
	leading to n1>=n2 not satisfied and wrong results.  cp[1]==0x7FFFFFFF
	with cp[0]>=0x80000001 provokes this.

	* doc/gmp.texi (BSD Compatible Functions): Note "pow" name clash under
	the pow function description too.
	(Language Bindings): Add XEmacs (betas at this stage).  Reported by
	Jerry James.

	* tests/refmpn.c (refmpn_mod2): Correction to ASSERTs, r==a is allowed.

	* gen-psqr.c (generate_mod): Cast mpz_invert_ui_2exp args, for K&R.
	* gen-bases.c, gen-fib.c, gen-psqr.c: For mpz_out_str, use stdout
	instead of 0, in case a K&R treats int and FILE* params differently.

2004-04-04  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (BSWAP_LIMB) [amd64]: New macro.
	(FORCE_DOUBLE): Use this for amd64 too.

	* tests/amd64check.c, tests/amd64call.asm: New files, derived in part
	from x86check.c and x86call.asm.
	* tests/Makefile.am (EXTRA_libtests_la_SOURCES): Add them.
	* configure.in (x86_64-*-* ABI=64): Use them.

2004-04-03  Kevin Ryde  <kevin@swox.se>

	* mpn/amd64/mode1o.asm: New file.
	* mpn/amd64/amd64-defs.m4 (ASSERT): New macro.

	* mpn/x86/k7/mmx/divrem_1.asm, mpn/x86/pentium4/sse2/divrem_1.asm: Add
	note on how "dr" part of algorithm is handled.

	* mpn/x86/k7/dive_1.asm, mpn/x86/k7/mod_34lsub1.asm,
	mpn/x86/k7/mode1o.asm: Note Hammer (32-bit mode) speeds.

2004-03-31  Kevin Ryde  <kevin@swox.se>

	* doc/gmp.texi (Language Bindings): Add GOO, MLGMP and Numerix.

	* mpf/mul_2exp.c, mpf/div_2exp.c: Rate u==0 as UNLIKELY.

2004-03-28  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/divrem_1.asm: Trim a few cycles.

2004-03-27  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/sublsh1_n.asm: Fix typo.

	* mpn/generic/divrem_1.c: Fix typo.

	* mpn/generic/sqr_basecase.c: Fix typo.

	* mpn/amd64/divrem_1.asm: New file.

2004-03-20  Kevin Ryde  <kevin@swox.se>

	* longlong.h (power, powerpc): Add comments on how we select this code.

	* gmp-h.in (mpz_get_ui): Use ?: instead of mask style, gcc treats the
	two identically but ?: is a bit clearer.

	* insert-dbl.c: Remove file, no longer used, scaling is now integrated
	in mpn_get_d.
	* Makefile.am (libgmp_la_SOURCES): Remove insert-dbl.c.
	* gmp-impl.h (__gmp_scale2): Remove prototype.

2004-03-17  Kevin Ryde  <kevin@swox.se>

	* mpn/x86/fat/fat.c (__gmpn_cpuvec_init, fake_cpuid_table): Add x86_64.

	* mpq/get_d.c: Use mpn_tdiv_qr, demand den>0 per canonical form.

2004-03-16  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/sqr_basecase.c: Add versions using mpn_addmul_2 and
	mpn_addmul_2s.

2004-03-14  Kevin Ryde  <kevin@swox.se>

	* mpf/mul_ui.c: Incorporate carry from low limbs, for exactness.
	* tests/mpf/t-mul_ui.c: New file.
	* tests/mpf/Makefile.am (check_PROGRAMS): Add it.

	* mpf/div.c: Use mpn_tdiv_qr.  Use just one TMP_ALLOC.  Use full
	divisor, since truncating can lose accuracy.
	* tests/mpf/t-div.c: New file.
	* tests/mpf/Makefile.am (check_PROGRAMS): Add it.

	* tests/mpf/t-set_q.c, tests/mpf/t-ui_div.c (check_various): Amend
	bogus 99/4 test.
	* tests/mpf/t-ui_div.c (check_rand): Exercise r==v overlap.

	* tests/refmpf.c, tests/tests.h (refmpf_set_overlap): New function.

	* mpf/cmp_si.c [nails]: Correction, cast vval in exp comparisons, for
	when vval=-0x800..00 and limb==longlong.

	* mpf/cmp_si.c [nails]: Correction, return usign instead of 1 when
	uexp==2 but value bigger than an mp_limb_t.
	* tests/mpf/t-cmp_si.c (check_data): Add test cases.

	* tests/trace.c (mpf_trace): Use ABS(mp_trace_base) to allow for
	negative bases used for upper case hex in integer traces.

2004-03-12  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/sb_divrem_mn.c: Correct header comment.

2004-03-11  Kevin Ryde  <kevin@swox.se>

	* aclocal.m4, configure, ltmain.sh: Downgrade to libtool 1.5, version
	1.5.2 doesn't remove .libs/*.a files when rebuilding, which is bad for
	development when changing contents or with duplicate named files like
	we have.

	Revert this, ie restore AR_FLAGS=cq:
	* acinclude.m4 (GMP_PROG_AR): Remove AR_FLAGS=cq, libtool 1.5.2 now
	does this itself on detecting duplicate object filenames in piecewise
	linking mode.

	* randbui.c, randmui.c [longlong+nails]: Correction to conditionals
	for second limb.

	* mpz/aors_ui.h, mpz/cdiv_q_ui.c, mpz/cdiv_qr_ui.c, mpz/cdiv_r_ui.c,
	mpz/cdiv_ui.c, mpz/fdiv_q_ui.c, mpz/fdiv_qr_ui.c, mpz/fdiv_r_ui.c,
	mpz/fdiv_ui.c, mpz/gcd_ui.c, mpz/iset_ui.c, mpz/lcm_ui.c,
	mpz/set_ui.c, mpz/tdiv_q_ui.c, mpz/tdiv_qr_ui.c, mpz/tdiv_r_ui.c,
	mpz/tdiv_ui.c, mpz/ui_sub.c, mpf/div_ui.c, mpf/mul_ui.c
	[longlong+nails]: Amend #if to avoid warnings about shift amount.

2004-03-07  Kevin Ryde  <kevin@swox.se>

	* mpf/reldiff.c: Use rprec+ysize limbs for d, to ensure accurate
	result.  Inline mpf_abs(d,d) and mpf_cmp_ui(x,0), and rate the latter
	UNLIKELY.

	* mpf/ui_div.c: Use mpn_tdiv_qr.  Use just one TMP_ALLOC.  Use full
	divisor, since truncating can lose accuracy.
	* tests/mpf/t-ui_div.c: New file.
	* tests/mpf/Makefile.am (check_PROGRAMS): Add it.

	* mpf/set_q.c: Expand TMP_ALLOC_LIMBS_2, to make conditional clearer
	and avoid 1 limb alloc when not wanted.

	* gmp-impl.h (WANT_TMP_DEBUG): Define to 0 if not defined.
	(TMP_ALLOC_LIMBS_2): Use "if" within macro rather than "#if", for less
	preprocessor conditionals.

	* mpf/mul_2exp.c, mpf/div_2exp.c: Add some comments.

	* tests/refmpn.c (refmpn_sb_divrem_mn, refmpn_tdiv_qr): Nailify.

2004-03-04  Kevin Ryde  <kevin@swox.se>

	* gen-psqr.c (print): Add CNST_LIMB in PERFSQR_MOD_TEST, for benefit
	of K&R.
	* tests/mpn/t-perfsqr.c (PERFSQR_MOD_1): Use CNST_LIMB for K&R.

	* doc/configuration (Configure): Remove mkinstalldirs, no longer used.

	* acinclude.m4 (GMP_PROG_AR): Remove AR_FLAGS=cq, libtool 1.5.2 now
	does this itself on detecting duplicate object filenames in piecewise
	linking mode.

	* configure.in (hppa2.0*-*-*): Test sizeof(long) == 4 or 8 to verify
	ABI=2.0n versus ABI=2.0w.  In particular this lets CC=cc_bundled
	correctly fall back to ABI=2.0n (we don't automatically add CC=+DD64
	to that compiler, currently).

	* doc/gmp.texi (Reentrancy): Note C++ mpf_class constructors using
	global default precision.
	(Random State Miscellaneous): Describe gmp_urandomb_ui as giving N
	bits.
	(C++ Interface Floats): Describe operator= copying the value, not the
	precision, and what this can mean about copy constructor versus
	default constructor plus assignment.

	* mpf/set_q.c: Use mpn_tdiv_qr rather than mpn_divrem, so no shifting.
	Don't truncate the divisor, it can make the result inaccurate.
	* tests/mpf/t-set_q.c: New file.
	* tests/mpf/Makefile.am (check_PROGRAMS): Add it.

	* mpf/set.c: Use MPN_COPY_INCR, in case r==u and ABSIZ(u) > PREC(r)+1.
	No actual bug here, because MPN_COPY has thusfar been an alias for
	MPN_COPY_INCR, only an ASSERT failure.
	* tests/mpf/t-set.c: New file.
	* tests/mpf/Makefile.am (check_PROGRAMS): Add it.

	* mpf/set.c, mpf/iset.c: Do MPN_COPY last, for possible tail call.

	* mpf/set_d.c: Rate d==0 as UNLIKELY.  Store size before extract call,
	to shorten lifespan of "negative".

	* mpf/init.c, mpf/init2.c, mpf/iset_d.c, mpf/iset_si.c,
	mpf/iset_str.c, mpf/iset_ui.c: Store prec before alloc call, for one
	less live quantity across that call.
	* mpf/init.c, mpf/init2.c, mpf/iset_str.c: Store size and exp before
	alloc call, to overlap with other operations.

	* tests/refmpf.c, tests/tests.h (refmpf_fill, refmpf_normalize,
	refmpf_validate, refmpf_validate_division): New functions.

	* tests/refmpn.c, tests/tests.h (refmpn_copy_extend,
	refmpn_lshift_or_copy_any, refmpn_rshift_or_copy_any): New functions.

	* tal-debug.c: Add <string.h> for strcmp.

	* tests/cxx/t-istream.cc (check_mpz, check_mpq, check_mpf): Use size_t
	for loop index, to quieten g++ warning.

2004-03-02  Kevin Ryde  <kevin@swox.se>

	* tests/mpn/t-hgcd.c: Use __GMP_PROTO on prototypes.

2004-03-01  Torbjorn Granlund  <tege@swox.com>

	With Karl Hasselström:
	* mpn/generic/dc_divrem_n.c (mpn_dc_div_2_by_1): New function, with
	meat from old mpn_dc_divrem_n.  Accept scratch parameter.  Rewrite to
	avoid a recursive call.
	(mpn_dc_div_3_by_2): New function, with meat from old
	mpn_dc_div_3_halves_by_2.  Accept scratch parameter.
	(mpn_dc_divrem_n): Now just allocate scratch space and call new
	mpn_dc_div_2_by_1.

2004-02-29  Kevin Ryde  <kevin@swox.se>

	* longlong.h (count_leading_zeros) [alpha gcc]: New version, inlining
	mpn/alpha/cntlz.asm cmpbge technique.

	* aclocal.m4, configure, install-sh, missing, ltmain.sh,
	*/Makefile.in: Update to automake 1.8.2 and libtool 1.5.2.

	* doc/gmp.texi (C++ Interface Integers): Note / and % rounding follows
	C99 / and %.
	(Exact Remainder): Index entries for divisibility testing algorithm.

	* tune/time.c (speed_endtime): Return 0.0 for negative time measured.
	Revise usage comments for clarity.
	* tune/common.c (speed_measure): Recognise speed_endtime 0.0 for
	failed measurement.

	* tests/mpn/t-get_d.c (check_rand): Correction to nhigh_mask setup.

2004-02-27  Torbjorn Granlund  <tege@swox.com>

	* tune/tuneup.c (tune_dc, tune_set_str): Up param.step_factor.

	* tests/mpz/t-gcd.c: Decrease # of tests to 50.

2004-02-27  Kevin Ryde  <kevin@swox.se>

	* tests/devel/try.c: Add a comment that this is not for Cray systems.

	* mpf/set_q.c: Don't support den(q)<0, demand canonical form in the
	usual way.

2004-02-24  Torbjorn Granlund  <tege@swox.com>

	From Kevin:
	* mpn/generic/mul_fft.c (mpn_fft_add_modF): Loop until normalization
	criterion met.

2004-02-22  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_PROG_CC_WORKS, GMP_OS_X86_XMM, GMP_PROG_CXX_WORKS):
	Remove files that might look like compiler output, so our "||"
	alternatives are not fooled.

	* acinclude.m4 (GMP_PROG_CC_WORKS): Add test for lshift_com code
	mis-compiled by certain IA-64 HP cc at +O3.

	* gmp-impl.h (USE_LEADING_REGPARM): Disable under prof or gprof, for
	the benefit of freebsd where .mcount clobbers registers.  Spotted by
	Torbjorn.
	* configure.in (WANT_PROFILING_PROF, WANT_PROFILING_GPROF): New
	AC_DEFINEs.

2004-02-21  Kevin Ryde  <kevin@swox.se>

	* configure.in (sparc64-*-*bsd*): Amend -m32 setup for ABI=32, so it's
	not used in ABI=64 on the BSD systems.

2004-02-18  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpz/t-gcd.c (gcdext_valid_p): New function.
	(ref_mpz_gcd): Deleted function.
	(one_test): Rearranged to call mpz_gcdext first, so that the
	returned value can be validated.
	(main): Don't use ref_mpz_gcd.

2004-02-18  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (MPN_TOOM3_MAX_N): Move to !WANT_FFT section.

	* tests/mpz/t-mul.c: Exclude special huge operands unless WANT_FFT.

	* mpz/rrandomb.c (gmp_rrandomb): Rewrite.

	* mpn/generic/mul_n.c (mpn_toom3_sqr_n): Remove write-only variable c5.

2004-02-18  Kevin Ryde  <kevin@swox.se>

	* mpf/iset_si.c, mpf/iset_ui.c, mpf/set_si.c, mpf/set_ui.c [nails]:
	Always store second limb, to avoid a conditional.

	* tests/mpf/t-get_ui.c: New file.
	* tests/mpf/Makefile.am (check_PROGRAMS): Add it.
	* tests/mpf/t-get_si.c (check_limbdata): Further tests.
	* gmp-impl.h (MP_EXP_T_MAX, MP_EXP_T_MIN): New defines.

	* mpf/get_ui.c, mpf/get_si.c: Remove size==0 test, it's covered by
	other conditions.  Attempt greater clarity by expressing conditions as
	based on available data range.
	* mpf/get_si.c [nails]: Correction, don't bail on exp > abs_size,
	since may still have second limb above radix point available.
	* mpf/get_ui.c: Nailify.

2004-02-16  Kevin Ryde  <kevin@swox.se>

	* mpz/scan0.c, mpz/scan1.c: Use count_trailing_zeros, instead of
	count_leading_zeros on limb&-limb.

	* mpf/sqrt.c: Use "/ 2" for exp, avoiding C undefined behaviour on
	">>" of negatives.  Correction to comment, exp is rounded upwards.
	SIZ(r) always prec now, no need for tsize expression.  Store EXP(r)
	and SIZ(r) where calculated to reduce variable lifespans.  Make tsize
	mp_size_t not mp_exp_t, though of course those are currently the same.

	* gmp-h.in (GMP_ERROR_ALLOCATE, GMP_ERROR_BAD_STRING,
	GMP_ERROR_UNUSED_ERROR): Remove, never used or documented, and we
	don't want to use globals for communicating error information.

	* mpz/gcd_ui.c [nails]: Correction, actually return a value.

	* mpn/generic/addmul_1.c, mpn/generic/submul_1.c [nails==1]: Add code.

2004-02-15  Kevin Ryde  <kevin@swox.se>

	* tests/mpz/t-jac.c (check_data): Remove unnecessary variable
	"answer".

2004-02-14  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/aors_n.asm: Break a group with a RAW conflict.

2004-02-14  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_C_RIGHT_SHIFT): Note that it's "long"s which we're
	concerned about.

	* mpn/generic/mul_n.c: Add some remarks about toom3 high zero
	stripping.

	* mpn/generic/scan0.c, mpn/generic/scan1.c: Remove design issue
	remarks.  What to do about going outside `up' space is a problem, but
	anything to address it would be an incompatible change.

2004-02-12  Torbjorn Granlund  <tege@swox.com>

	* tests/mpn/t-hgcd.c: Remove unused variables.

	* mpn/ia64/hamdist.asm: Remove bundling incompatible with HP-UX
	assembler.  Misc HP-UX changes.
	* mpn/ia64/gcd_1.asm: Add some syntax to placid the HP-UX assembler.

2004-02-11  Kevin Ryde  <kevin@swox.se>

	* longlong.h (power, powerpc): Use HAVE_HOST_CPU_FAMILY_power and
	HAVE_HOST_CPU_FAMILY_powerpc rather than various cpp defines.

	* gmp-impl.h: Add remarks about limits.h and Cray etc.

	* mpn/ia64/mul_1.asm: Don't put .pred directives on labelled lines,
	hpux 11.23 assembler doesn't like that.
	* mpn/ia64/README: Add a note on this.

	* dumbmp.c (mpz_mul): Set ALLOC(r) for new data block used.  Reported
	by Jason Moxham.

	* mpn/pa32/README, mpn/pa64/README (REFERENCES): New sections.

2004-02-10  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-gcd.c: Decrease # of tests run.

	* mpn/*/gmp-mparam.h: Add HGCD values, update TOOM values.

2004-02-01  Torbjorn Granlund  <tege@swox.com>

	From Kevin:
	* config.guess: Recognize AMD's hammer processors, return x86_64.

2004-01-31  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (mpn_cmp_sum3): Declare static.

2004-01-25  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpn/Makefile.am (check_PROGRAMS): Add t-hgcd.

	* mpn/generic/hgcd.c (hgcd_jebelean): Simplify, use mpn_cmp_sum3.
	(mpn_cmp_sum3): New function.
	(mpn_diff_smaller_p): Remove.
	(hgcd_final, hgcd_jebelean, hgcd_small_1, hgcd_small_2, euclid_step):
	Remove tp,talloc arguments.  Callers changed.

2004-01-25  Torbjorn Granlund  <tege@swox.com>

	* tune/tuneup.c (all): Reenable calls of tune_gcd_schoenhage and
	tune_hgcd.

	* mpn/generic/gcd.c: Reenable Schoenhage code.

	With Niels Möller:
	* mpn/generic/hgcd.c: Add const and inline to several functions.
	(qstack_push_start qstack_push_end qstack_push_quotient): Remove.
	(euclid_step): Insert removed functions here.
	(hgcd_adjust): Simplify, don't handle d != 1.
	(qstack_adjust): Corresponding changes.
	(mpn_hgcd2_lehmer_step): Remove redundant tests for bh against zero.
	(hgcd_start_row_p): Tweak.
	(hgcd_final): Shorten life of ralloc.

2004-01-24  Kevin Ryde  <kevin@swox.se>

	* tests/mpf/t-sqrt.c (check_rand1): Further diagnostic printouts.

	* mpn/generic/sqrtrem.c (mpn_sqrtrem): Add ASSERT_MPN.
	(mpn_dc_sqrtrem): Add casts for K&R.

	* mpf/sqrt_ui.c: Nailify.

	* mpf/set_z.c: Do MPN_COPY last, for possible tail call.

	* doc/gmp.texi (Miscellaneous Float Functions): For mpf_random2, note
	exponent is in limbs.

	* mpn/ia64/README: Add remark about concentrating on itanium-2.

2004-01-22  Kevin Ryde  <kevin@swox.se>

	* mpf/sqrt.c: Change tsize calculation to get prec limbs result
	always, previously got prec+1 when exp was odd.
	* tests/mpf/t-sqrt.c (check_rand1): New function, code from main.
	(check_rand2): New function.

	* mpf/sqrt_ui.c: Change rsize calculation to get prec limbs result,
	previously got prec+1.
	* tests/mpf/t-sqrt_ui.c: New file.
	* tests/mpf/Makefile.am (check_PROGRAMS): Add it.

	* tests/refmpf.c, tests/tests.h (refmpf_add_ulp,
	refmpf_set_prec_limbs): New functions.

	* mpz/get_d_2exp.c, mpf/get_d_2exp.c: Remove x86+m68k force to double,
	mpn_get_d now does this.  Remove res==1.0 check for round upwards,
	mpn_get_d now rounds towards zero.  Move exp store to make mpn_get_d a
	tail call.

	* configure.in (x86-*-*): Use ABI=32 rather than ABI=standard.
	Use gcc -m32 when available, to force mode on bi-arch amd64 gcc.
	* configure.in, acinclude.m4 (x86_64-*-*): Merge into plain x86 setups
	as ABI=64.  Support ABI=32, using athlon code.  Use gcc -mcpu=k8,
	-march=k8.
	(amd64-*-*): Remove pattern, config.sub only gives x86_64.
	* doc/gmp.texi (ABI and ISA): Add x86_64 dual ABIs.

	* mpn/amd64/README: Add reference to ABI spec.

2004-01-17  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (hgcd_adjust): Backed out mpn_addlsh1_n
	change for now.

	* mpn/generic/hgcd.c (hgcd_adjust): Fixed calls of mpn_addlsh1_n.

2004-01-17  Kevin Ryde  <kevin@swox.se>

	* tune/README: Remove open/mpn versions of toom3, no longer exist.
	* tune/powerpc64.asm: Remove unused L(again).
	* tune/time.c (mftb): Note single mftb possible for powerpc64.

	* mpn/generic/mode1o.c: Use "c<s" to do underflow detection in last
	step, for better parallelism.

	* mpn/generic/get_d.c: Preserve comments about hppa fcnv,udw,dbl from
	previous mpz_get_d code.

	* tune/freq.c: Add some comments about systems not covered.

	* gmp-h.in (_GMP_H_HAVE_FILE): Add _MSL_STDIO_H for Metrowerks.
	Reported by Tomas Zahradnicky.

2004-01-16  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (mpn_diff_smaller_p): Use MPN_DECR_U.
	(hgcd_adjust): Use mpn_addlsh1_n when available.

2004-01-16  Kevin Ryde  <kevin@swox.se>

	* configure.in (powerpc64-*-linux*): Try gcc64.  Try -m64 with
	"cflags_maybe" to get it used in all probing.  Add sizeof-long-8 test
	to check the mode is right if -m64 is not applicable.

2004-01-15  Kevin Ryde  <kevin@swox.se>

	* configure.in (--with-readline=detect): Check for readline/readline.h
	and readline/history.h.  Report result of detection.

2004-01-14  Niels Möller  <nisse@lysator.liu.se>

	* tune/speed.c (routine): Disabled speed_mpn_hgcd_lehmer.
	* tune/common.c (speed_mpn_hgcd_lehmer): Disabled function.

	* mpn/generic/hgcd.c (mpn_hgcd_lehmer_itch, mpn_hgcd_lehmer)
	(mpn_hgcd_equal): Deleted functions.

	* mpn/generic/gcd.c (hgcd_start_row_p): Deleted function.
	(gcd_schoenhage): Deleted assertion code using mpn_hgcd_lehmer.

	* mpn/generic/hgcd.c (hgcd_final): Fixed ASSERT typos.
	(mpn_hgcd): To use Lehmer's algorithm, call hgcd_final directly,
	not mpn_hgcd_lehmer.

	* mpn/generic/gcd.c (gcd_schoenhage): Updated for changes to
	mpn_hgcd and mpn_hgcd_fix. (Schoenhage code is still disabled).

	* gmp-impl.h (mpn_hgcd_fix): Updated prototype.

	* mpn/generic/hgcd.c (mpn_hgcd_fix): Replaced a bunch of arguments
	by a pointer const struct hgcd_row *s. Updated callers.

	* mpn/generic/hgcd.c (hgcd_start_row_p): Use const for the input.
	Moved function definition before hgcd_jebelean.
	(hgcd_jebelean): Interface change, analogous to hgcd2.
	(mpn_hgcd_fix): Normalize v. Require that v > 0.
	(hgcd_adjust): Fix bug in carry update.
	(mpn_hgcd): Reorganized again, to adapt to mpn_hgcd/hgcd_jebelean
	now sometimes returning 1. Reintroduced hgcd_adjust.

	* mpn/generic/hgcd.c (hgcd_final): Streamlined logic for the first
	hgcd2 call.

	* mpn/generic/hgcd2.c (mpn_hgcd2): Interface change. Return 1
	instead of 2, in the no progress case r0=A, r1=B.

	* mpn/generic/hgcd.c (hgcd_adjust): Changed arguments and return
	value. Now takes a struct hgcd_row * and the uv size, and returns
	updated uvsize.
	(hgcd_final): Special handling of the case hgcd2 returning 1. Now
	uses hgcd_adjust, instead of a full Euclid division.

2004-01-13  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (euclid_step, hgcd_case0): Merged into a
	single function euclid_step.
	(mpn_hgcd): Reorganized the logic for the second recursive call.
	Avoid unnecessary Euclid steps.

	* tests/mpn/t-hgcd.c (hgcd_values): One more test value.

	* tests/mpn/t-hgcd.c (hgcd_values): Added values that trigged the
	hgcd_jebelean bug.

	* mpn/generic/hgcd.c (hgcd_jebelean): Fixed off by one error.
	(mpn_hgcd): Simplified the logic for the first recursive call. Now
	it uses only the correct values from the recursive call, and
	doesn't do tricks with hgcd_adjust (hgcd_adjust will probably be
	reintroduced later, though).

	* tests/mpn/t-hgcd.c (mpz_mpn_equal, hgcd_ref_equal)
	(hgcd_ref_init, hgcd_ref_clear): New functions.
	(hgcd_ref): Reference implementation of hgcd, using mpz.
	(one_test): Use hgcd_ref. Don't use mpn_hgcd_lehmer.
	(main): Skip one_step if both input values are zero.

2004-01-12  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (hgcd_final): Rewritten, now uses Lehmer
	steps instead of a division loop.
	(mpn_hgcd_lehmer): Deleted old Lehmer code, instead just
	initialize and then call hgcd_final.

	* tests/tests.h: Added refmpn_free_limbs prototype.
	* tests/refmpn.c (refmpn_free_limbs): New function.

	* tests/mpn/t-hgcd.c: Try the same kind of random inputs as for
	mpz/t-gcd.

2004-01-11  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (mpn_hgcd_lehmer): Rewritten, after some more
	analysis of the size reduction for one Lehmer step.

	* tests/mpn/t-hgcd.c: New file.

2004-01-11  Torbjorn Granlund  <tege@swox.com>

	With Niels Möller:
	* mpn/generic/hgcd.c (hgcd_normalize): Fix ASSERTs.
	(hgcd_mul): Normalize R[1].uvp[1].  Add some more ASSERTs.
	(hgcd_update_uv): Streamline.  ASSERT that input and output is
	normalized.

2004-01-11  Kevin Ryde  <kevin@swox.se>

	* mpn/alpha/ev6/slot.pl: New file, derived in part from
	mpn/x86/k6/cross.pl.

	* mpn/alpha/alpha-defs.m4 (ASSERT): New macro.

	* mpn/asm-defs.m4 (m4_ifdef): New macro, avoiding OSF 4.0 m4 bug.
	(m4_assert_defined): Use it.

	* mpn/alpha/default.m4, mpn/alpha/unicos.m4 (LDGP): New macro.
	* mpn/alpha/ev67/gcd_1.asm: Use it to re-establish gp after jsr.

	* configure.in, demos/calc/Makefile.am: Use -lcurses or -lncurses with
	readline, when available.

	* longlong.h (sub_ddmmss) [generic]: Use al<bl for the borrow rather
	than __x>al, since the former can be done without waiting for __x,
	helping superscalar chips, in particular alpha ev5 and ev6.

	* longlong.h (sub_ddmmss) [ia64]: New macro.

	* tests/t-sub.c: New file.
	* tests/Makefile.am (check_PROGRAMS): Add it.
	* tests/refmpn.c, tests/tests.h (refmpn_sub_ddmmss): New function.

2004-01-09  Kevin Ryde  <kevin@swox.se>

	* mpn/x86/p6/mod_34lsub1.asm: New file, derived in part from
	mpn/x86/mod_34lsub1.asm.

	* configure.in (IA64_PATTERN): Use -mtune on gcc 3.4.

2004-01-07  Kevin Ryde  <kevin@swox.se>

	* gmp-h.in, mp-h.in (__GMP_SHORT_LIMB): Renamed from _SHORT_LIMB, to
	keep in our namespace.  (Not actually used anywhere currently.)
	Reported by Patrick Pelissier.

	* mp-h.in: Use "! defined (__GMP_WITHIN_CONFIGURE)" in the same style
	as gmp-h.in (though mp-h.in is not actually used during configure).

	* mp-h.in (__GMP_DECLSPEC_EXPORT, __GMP_DECLSPEC_IMPORT) [__GNUC__]:
	Use __dllexport__ and __dllimport__ to keep out of application
	namespace.  Same previously done in gmp-h.in.

2004-01-06  Kevin Ryde  <kevin@swox.se>

	* configfsf.sub, configfsf.guess: Update to 2004-01-05.
	* configure.in (amd64-*-* | x86_64-*-*): Update comments on what
	configfsf.sub does.

2004-01-04  Kevin Ryde  <kevin@swox.se>

	* mpn/alpha/README (REFERENCES): Add tru64 assembly manuals.
	(ASSEMBLY RULES): Note what gcc says about !literal! etc.

2004-01-03  Kevin Ryde  <kevin@swox.se>

	* mpn/alpha/ev67/gcd_1.asm: New file.

	* mpn/x86/pentium4/sse2/rsh1add_n.asm: New file, derived in part from
	mpn/x86/pentium4/sse2/addlsh1_n.asm.

	* mpn/x86/p6/p3mmx/popham.asm: Note measured speeds.

	* mpn/ia64/hamdist.asm: Correction to inputs vs locals in alloc (makes
	no difference to the generated code).  Corrections to a couple of
	comments.

	* mpn/x86/pentium4/sse2/addlsh1_n.asm (PARAM_CARRY): Remove macro, not
	used, no such parameter.

	* mpn/generic/gcd.c: Use <stdio.h> for NULL.

	* doc/gmp.texi (Single Limb Division): Correction to tex expression
	for (1/2)x1.  And minor wording tweaks elsewhere.

	* gmp-impl.h (mpn_rsh1add_n, mpn_rsh1sub_n): Correction to comments
	about how carries returned.

	* longlong.h (umul_ppmm) [generic]: Add comments about squaring
	(dropped from tasks list)

2003-12-31  Kevin Ryde  <kevin@swox.se>

	* demos/perl/GMP.xs (scan0, scan1): Return ~0 for not-found.
	* demos/perl/GMP.pm: Describe this, remove the note about ULONG_MAX
	being the same as ~0 (which is not true in old perl).
	* demos/perl/test.pl: Update tests.
	* demos/perl/typemap (gmp_UV): New type.

	* demos/perl/test.pl (fits_slong_p): Comment out uv_max test, it won't
	necessarily exceed a long.

	* demos/perl/GMP.pm: Add a remark about get_str to the bugs section.

	* mpn/generic/sqrtrem.c, mpz/fac_ui.c, tests/mpf/reuse.c: Add casts
	for K&R.
	* tests/mpf/t-muldiv.c: Make ulimb, vlimb into ulongs, which is how
	they're used, for the benefit of K&R calling.

	* doc/gmp.texi (Square Root Algorithm): Add a summary of the algorithm.
	And add further index entries in various places.

	* mpz/lucnum_ui.c, mpz/lucnum2_ui.c: Use mpn_addlsh1_n when available.

	* gmp-impl.h, mpn/generic/mul_n.c (mpn_addlsh1_n, mpn_sublsh1_n,
	mpn_rsh1add_n, mpn_rsh1sub_n): Move descriptions to gmp-impl.h with
	the prototypes, for ease of locating.

2003-12-30  Torbjorn Granlund  <tege@swox.com>

	* tune/tuneup.c (all): Disable calls of tune_gcd_schoenhage and
	tune_hgcd for now.

2003-12-29  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-gcd.c: Rewrite, based on suggestions by Kevin.

	* mpn/ia64/mul_1.asm: Amend TODO list.

	* mpn/sparc64/README: Remove mpn_Xmul_2, done.
	Add blurb about L1 cache conflicts.

	* mpn/generic/gcd.c: Disable Schoenhage code for now.

2003-12-29  Kevin Ryde  <kevin@swox.se>

	* mpn/generic/mul_fft.c, mpz/root.c, mpq/cmp_ui.c: Add casts for K&R.

2003-12-27  Kevin Ryde  <kevin@swox.se>

	* tests/mpz/t-mul.c (mul_kara, mul_basecase): Use __GMP_PROTO.

	* mpn/generic/gcd.c (NHGCD_SWAP4_2, NHGCD_SWAP3_LEFT),
	mpn/generic/hgcd.c (HGCD_SWAP4_LEFT, HGCD_SWAP4_RIGHT, HGCD_SWAP4_2,
	HGCD_SWAP3_LEFT): Aggregate initializers for automatics is an
	ANSI-ism, avoid.

	* Makefile.am (AUTOMAKE_OPTIONS): Restore this, giving no directory on
	ansi2knr to avoid a circular build rule.
	* configure.in (AM_INIT_AUTOMAKE): Note options also in Makefile.am.

	* configure.in (cflags_maybe): Don't loop adding cflags_maybe if the
	user has set CFLAGS.

2003-12-24  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/gcd.c (gcd_schoenhage_itch): Avoid unary "+".
	(mpn_gcd): Allocate scratch space on heap for gcd_schoenhage.
	(mpn_gcd): Don't invoke MPN_NORMALIZE on input operands.

2003-12-23  Kevin Ryde  <kevin@swox.se>

	* configure.in (*sparc*-*-*): Test sizeof(long)==4 or 8 for ABIs, to
	get the right mode when the user sets the CFLAGS.
	(testlist): Introduce "any_<abi>_testlist" to apply to all compilers.

	* demos/perl/typemap (MPZ_ASSUME, MPQ_ASSUME, MPF_ASSUME): Remove
	output rules, these are only meant for inputs.
	(MPZ_MUTATE): Remove, not used since changes for magic.

	* demos/perl/GMP.xs (mpz_class_hv, mpq_class_hv, mpf_class_hv): New
	variables, initialized in BOOT.
	* demos/perl/GMP.xs, demos/perl/typemap: Use them and explicit
	sv_bless, to save a gv_stashpv for every new object.

2003-12-22  Kevin Ryde  <kevin@swox.se>

	* mpn/alpha/mode1o.c, mpn/alpha/dive_1.c: Moved from ev5/mode1o.c and
	ev5/dive_1.c, these are good for ev4, and would like them in a generic
	alpha build.

2003-12-21  Kevin Ryde  <kevin@swox.se>

	* doc/gmp.texi (Integer Logic and Bit Fiddling): Say "bitwise" in
	mpz_and, mpz_ior and mpz_xor, to avoid any confusion with what C means
	by "logical".  Reported by Rüdiger Schütz.

	* gmp-h.in (_GMP_H_HAVE_FILE): Note why defined(EOF) is not good.

2003-12-20  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/hgcd.c (mpn_diff_smaller_p): Use mpn_cmp instead of
	mpn_sub_n where possible.  Use mp_size_t for relevant variables.

2003-12-20  Kevin Ryde  <kevin@swox.se>

	* tune/speed.h (SPEED_TMP_ALLOC_LIMBS): Correction to last change,
	don't want "- 1" on the TMP_ALLOC_LIMBS.

	* demos/expr/expr.h: Test #ifdef MPFR_VERSION_MAJOR for when mpfr.h is
	included, not GMP_RNDZ which is now an enum.

	* demos/expr/exprfra.c (e_mpfr_ulong_p): Use mpfr_integer_p and
	mpfr_fits_ulong_p.
	(e_mpfr_get_ui_fits): Use mpfr_get_ui.

	* mpfr/*: Update to mpfr cvs head 2003-12-20.

	* configure, config.in: Update to autoconf 2.59.
	* */Makefile.in, configure, aclocal.m4, ansi2knr.c, install-sh,
	doc/mdate-sh: Update to automake 1.8.

	* mkinstalldirs: Remove, not required by automake 1.8.
	* doc/gmp.texi (Build Options): HTML is a usual target in automake 1.8.

	* configure.in (AC_PREREQ): Require autoconf 2.59.
	(AM_INIT_AUTOMAKE): Require automake 1.8.
	(AC_C_INLINE): Use rather than GMP_C_INLINE, now has #ifndef
	__cplusplus we want.
	(gettimeofday): Use AC_CHECK_FUNCS rather than our workaround code,
	autoconf now ok.

	* acinclude.m4 (GMP_C_INLINE): Remove.
	(GMP_H_EXTERN_INLINE): Use AC_C_INLINE.
	(GMP_PROG_AR): Comment on automake $ARFLAGS.

2003-12-19  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (mpn_diff_smaller_p): Rewrote function. Tried
	to explain how it works.
	(slow_diff_smaller_p, wrap_mpn_diff_smaller_p) [WANT_ASSERT]: Use
	CPP to wrap assertion checks around all calls to
	mpn_diff_smaller_p.

	* mpn/generic/hgcd.c (mpn_addmul2_n_1) [nails]: Fixed carry handling.

	* mpn/generic/hgcd.c (mpn_diff_smaller_p) [nails]: Use
	GMP_NUMB_MAX, not MP_LIMB_T_MAX.
	(mpn_hgcd_itch): Improved size calculation.
	(mpn_hgcd_max_recursion): Moved function from qstack.c. Should to
	be recompiled when HGCD_SCHOENHAGE_THRESHOLD is tuned.

	* mpn/generic/qstack.c (mpn_hgcd_max_recursion): ... moved from
	here.

2003-12-19  Torbjorn Granlund  <tege@swox.com>

	* tests/mpf/t-get_d.c: Print message before aborting.

	* mpn/generic/hgcd2.c (mpn_hgcd2): Substitute always-zero variable
	with 0.  Remove bogus comment.

	* mpn/generic/get_d.c: Make ONE_LIMB case actually work for nails.

2003-12-18  Niels Möller  <niels@lysator.liu.se>

	* mpn/generic/hgcd.c (hgcd_update_r): Assert that the output r2 is
	smaller than the input r1.

2003-12-18  Torbjorn Granlund  <tege@swox.com>

	* mpz/get_d.c: Don't include longlong.h.

	* tests/mpz/t-mul.c (ref_mpn_mul): Handle un == vn specially, to avoid
	a dummy r/w outside of allocated area.

2003-12-18  Kevin Ryde  <kevin@swox.se>

	* mpn/alpha/unicos.m4 (ALIGN): Add comments on what GCC does.

	* configure.in (fat setups), acinclude.m4 (GMP_INIT): Obscure
	include() from automake 1.8 aclocal.
	* acinclude.m4: Quote names in AC_DEFUN, for automake 1.8 aclocal.

2003-12-17  Niels Möller  <nisse@lysator.liu.se>

	* tune/common.c (speed_mpn_hgcd, speed_mpn_hgcd_lehmer) [nails]:
	Enabled code also for GMP_NAIL_BITS > 0.
	* tune/speed.c [nails]: Enable speed_mpn_hgcd and
	speed_mpn_hgcd_lehmer.
	* tune/tuneup.c (tune_hgcd) [nails]: Likewise.

	* mpn/generic/gcd.c [nails]: Use Schönhage's algorithm also for
	GMP_NAIL_BITS > 0.

	* mpn/generic/hgcd.c [nails]: Enable the code for GMP_NAIL_BITS > 0.
	(MPN_EXTRACT_LIMB) [nails]: Handle nails.
	(__gmpn_hgcd_sanity): Allocate temporaries on the heap, not on the
	stack. Also check that r[i] >= r[i+1].
	(mpn_hgcd2_lehmer_step) [nails]: Handle nails.
	(mpn_hgcd_lehmer): When we temporarily have r3 > r2, avoid
	trigging that assert in __gmpn_hgcd_sanity.
	(mpn_hgcd): Likewise.

	* mpn/generic/hgcd2.c (div2) [nails]: Alternative nail-aware
	version.
	(SUB_2): New macro of Kevin's, which reduces do sub_ddmmss in the
	non-nail case.
	(HGCD2_STEP): Use SUB_2, not sub_ddmmss. Added alternative version
	for K&R compilers.
	(mpn_hgcd2) [nails]: Use SUB_2, not sub_ddmmss. New nail-aware
	code for checking Jebelean's condition.

2003-12-13  Kevin Ryde  <kevin@swox.se>

	* mpq/get_d.c: Amend comments per mpn_get_d change.
	(limb2dbl): Remove, no longer used.

	* gmp-impl.h (DIVREM_1_NORM_THRESHOLD etc) [nails]: Correction to
	comments, MP_SIZE_T_MAX means preinv never.

	* gmp-impl.h (DIVEXACT_1_THRESHOLD, MODEXACT_1_ODD_THRESHOLD) [nails]:
	Remove overrides, divexact_1 and modexact_1 have been nailified.

	* mpz/inp_str.c (mpz_inp_str_nowhite): Use ASSERT_ALWAYS for EOF value
	requirement.

	* tests/refmpn.c (refmpn_rsh1add_n, refmpn_rsh1sub_n): Parens around
	GMP_NUMB_BITS - 1 with ">>", to quieten gcc -Wall.
	* tests/t-constants.c (main), tests/t-count_zeros.c (check_clz),
	tests/t-modlinv.c (one), tests/mpz/t-jac.c (try_si_zi),
	tests/mpq/t-get_d.c (check_onebit): : Correction to printfs.
	* tests/mpn/t-fat.c: Add <string.h> for memcpy.
	* tests/mpz/t-scan.c (check_ref): Remove unused variable "isigned".
	* tests/mpq/t-get_d.c (check_onebit): Remove unused variable "limit".
	* tests/mpf/t-set_si.c, tests/mpf/t-set_ui.c (check_data): Braces for
	initializers.
	* tests/devel/try.c (mpn_divexact_by3_fun, mpn_modexact_1_odd_fun):
	Correction to return values.

	* doc/gmp.texi (Miscellaneous Integer Functions): Note mpz_sizeinbase
	can be used to locate the most significant bit.  Reword a bit for
	clarity.

2003-12-12  Niels Möller  <niels@lysator.liu.se>

	* mpn/generic/hgcd.c (__gmpn_hgcd_sanity): Fixed stack buffer
	overrun.
	* mpn/generic/hgcd.c: Improved comments.

2003-12-11  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h: Change asm => __asm__, tabify.
	* mpz/get_d_2exp.c: Likewise.
	* mpf/get_d_2exp.c: Likewise.

	* tests/cxx/t-ops.cc: #if .. #endif out tests that cause ambiguities.

2003-12-10  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-gcd.c: Generate operands with sizes as a geometric
	progression, to allow for larger operands and less varying timing.

	* tune/tuneup.c (tune_gcd_schoenhage): Set param.step_factor.
	(tune_hgcd): Likewise.

2003-12-10  Kevin Ryde  <kevin@swox.se>

	* demos/perl/test.pl: Should be $] for perl version in old perl.

	* configure.in (sparc64-*-*): Single block of gcc configs for all
	systems, on unknown systems try both ABI 32 and 64.

	* configure.in (LIBGMP_LDFLAGS, LIBGMPXX_LDFLAGS): New AC_SUBSTs with
	options to generate .def files with windows DLLs.
	* Makefile.am (libgmp_la_LDFLAGS, libgmpxx_la_LDFLAGS): Use them.

	* mpn/generic/gcd.c: Use ABOVE_THRESHOLD / BELOW_THRESHOLD, to follow
	convention and cooperate with tune/tuneup.c.

	* tune/tuneup.c (tune_gcd_schoenhage): Increase max_size to 3000, side
	default 1000 is approx the crossover point on athlon.

	* tune/common.c, tune/speed.c, tune/speed.h, tune/speed-ext.c,
	tune/tuneup.c (SPEED_TMP_ALLOC_LIMBS): Take variable as parameter
	rather than returning a value, avoids alloca in a function call.
	* tune/common.c, tune/speed.h (speed_tmp_alloc_adjust): Remove, now
	inline in SPEED_TMP_ALLOC_LIMBS, and using ptr-NULL for alignment
	extraction.

	* gmpxx.h (__gmp_binary_equal, __gmp_binary_not_equal,
	__gmp_binary_less, __gmp_binary_less_equal, __gmp_binary_greater,
	__gmp_binary_greater_equal, __gmp_cmp_function): Use mpfr_cmp_si and
	mpfr_cmp_d.
	* tests/cxx/t-ops.cc: Exercise this.

	* demos/perl/Makefile.PL: Don't install sample.pl and test2.pl.

	* demos/perl/GMP.xs (use_sv): Prefer PV over IV or NV to avoid any
	rounding.
	* demos/perl/test.pl: Exercise this.

	* demos/perl/GMP/Mpf.pm (overload_string): Corrections to $# usage.
	* demos/perl/test.pl: Exercise this.

2003-12-08  Kevin Ryde  <kevin@swox.se>

	* demos/perl/GMP.pm: Correction to canonicalize example.

	* demos/perl/GMP.xs: New type check scheme, support magic scalars,
	support UV when available.  Remove some unused local variables.
	(coerce_long): Check range of double.
	(get_d_2exp): Remove stray printf.

	* demos/perl/test.pl: Exercise magic, rearrange to make it clearer
	what's being tested.

2003-12-07  Kevin Ryde  <kevin@swox.se>

	* mpn/generic/hgcd.c (mpn_hgcd): Use BELOW_THRESHOLD, to follow the
	convention of N<THRESH for the lower algorithm, not <=.  Fixes
	algorithm selection in tuneup.c.

	* tune/common.c (speed_mpn_hgcd, speed_mpn_hgcd_lehmer): Use intended
	align_xp, align_yp.

	* tune/tuneup.c (mul_toom3_threshold): Use MUL_TOOM3_THRESHOLD_LIMIT,
	for the benefit of ASSERT in mpn_mul_n.

	* tune/tuneup.c (tune_mul): Correction to toom3 param.min_size, should
	use MPN_TOOM3_MUL_N_MINSIZE.

	* tune/speed.c (check_align_option): Correction to printf format.
	* tune/freq.c (freq_sysctl_hw_model): Remove unused "i" variable.

	* scanf/doscan.c: Correction to a couple of trace printfs.
	Add <stdlib.h> for strtol.

	* tests/misc/t-scanf.c (test_sscanf_eof_ok): New function.
	(check_misc): Use it to suppress tests broken by libc.
	And should be EOF rather than -1 in various places.

2003-12-06  Torbjorn Granlund  <tege@swox.com>

	* tune/common.c (speed_mpn_hgcd, speed_mpn_hgcd_lehmer):
	Move SPEED_TMP_ALLOC_LIMBS invocations out from calls.

	* mpn/generic/get_str.c (mpn_get_str, POW2_P case):
	Don't append extra '\0' byte.

2003-12-05  Niels Möller  <niels@lysator.liu.se>

	* tune/common.c (speed_mpn_hgcd_lehmer, speed_mpn_hgcd):
	Updated for the renaming hgcd_sanity -> ASSERT_HGCD.

	* mpn/generic/gcd.c (gcd_schoenhage): TMP_DECL must be the final
	declaration in the declaration section of a block.

	* tune/speed.h (mpn_gcd_accel): Added prototype.

2003-12-05  Torbjorn Granlund  <tege@swox.com>

	* randmt.c (__gmp_mt_recalc_buffer): Put parens around "&" expressions
	inside "!=".

	* mpf/get_str.c: Remove unused variable "fracn".

2003-12-03  Kevin Ryde  <kevin@swox.se>

	* configure.in, Makefile.am (LIBGMP_LDFLAGS, LIBGMPXX_LDFLAGS): New
	AC_SUBSTs, use them to create .def files with Windows DLLs.
	* doc/gmp.texi (Notes for Particular Systems): Update notes on mingw
	DLL with MS C.

	* mpz/export.c: Allow NULL for countp.
	* doc/gmp.texi (Integer Import and Export): Describe this.
	Suggested by Jack Lloyd.

	* mpn/x86/p6/aors_n.asm: New file, grabbing the K7 code.
	Superiority of this reported by Patrick Pelissier.

2003-11-30  Kevin Ryde  <kevin@swox.se>

	* mpn/alpha/ev67/popcount.asm, mpn/alpha/ev67/hamdist.asm: New files.

	* mpn/alpha/ev67: New directory.
	* configure.in (alphaev67, alphaev68, alphaev7*): Use it.

	* doc/gmp.texi (GMPrefu, GMPpxrefu): Change back to plain ref and
	pxref, remove macros.
	(GMPreftopu, GMPpxreftopu): Remove URL parameter, rename to GMPreftop
	and GMPpxreftop.
	(Debugging): Remove debauch, seems to have disappeared.
	(Language Bindings): Corrections to URLs for CLN, Omni F77, Pike.

2003-11-29  Kevin Ryde  <kevin@swox.se>

	* demos/perl/GMP/Mpf.pm (overload_string): Use $OFMT to avoid warnings
	about $#.

	* demos/perl/GMP.xs (fits_slong_p): Use LONG_MAX+1 to avoid possible
	rounding of 0x7F..FF in a double on 64-bit systems.

	* configure.in (ppc601-*-*): Remove this case, it never matched
	anything, the name adopted is powerpc601.
	(powerpc601-*-*): Use gcc -mcpu=601, xlc -qarch=601.

	* configure.in: Introduce ${cc}_cflags_maybe, used if they work.
	(*sparc*-*-*) [ABI=32]: Add gcc_cflags_maybe=-m32 to force that mode.

	* doc/gmp.texi (Introduction to GMP): Add AMD64 to optimizations list.
	(Build Options): Add cpu types alphaev7 and amd64.  Update texinfo
	html cross reference.

2003-11-28  Niels Möller  <nisse@lysator.liu.se>

	* tune/tuneup.c (tune_hgcd): Disable if GMP_NAIL_BITS > 0.
	* tune/speed.c (routine): Likewise.
	* tune/common.c (speed_mpn_hgcd, speed_mpn_hgcd_lehmer): Likewise.

	* mpn/generic/gcd.c, mpn/generic/hgcd.c, mpn/generic/hgcd2.c
	[GMP_NAIL_BITS]: Disabled new code if we have nails.

	* mpn/generic/gcd.c (MPN_LEQ_P): Copied macro definition (needed
	for compilation with --enable-assert).

	* tune/tuneup.c (hgcd_schoenhage_threshold,
	gcd_schoenhage_threshold): New variables.
	(tune_hgcd, tune_gcd_schoenhage): New functions.
	(all): Call tune_hgcd and tune_gcd_schoenhage.

	* tune/common.c (speed_mpn_hgcd, speed_mpn_hgcd_lehmer)
	(speed_mpn_gcd_accel): New functions.
	* tune/speed.c (routine): Added mpn_hgcd, mpn_hgcd_lehmer and
	mpn_gcd _accel.
	* tune/speed.h: Added corresponding prototypes.

	* tune/gcd_accel.c: New file.

	* tune/gcd_bin.c (GCD_SCHOENHAGE_THRESHOLD): Set to MP_SIZE_T_MAX.

	* tune/Makefile.am (libspeed_la_SOURCES): Added gcd_accel.c.
	(TUNE_MPN_SRCS_BASIC): Added hgcd.c.

	* mpn/x86/k7/gmp-mparam.h (HGCD_SCHOENHAGE_THRESHOLD)
	(GCD_SCHOENHAGE_THRESHOLD): Tuned values.

	* mpn/generic/gcd.c (mpn_gcd, gcd_binary_odd): Renamed the
	old mpn_gcd function (which implements accelerated binary gcd) to
	gcd_binary_odd.
	(gcd_binary): New function, with the additional book keeping
	needed when using gcd_binary_odd to compute the gcd of non-odd
	numbers.
	(hgcd_tdiv): New function.
	(gcd_lehmer): New function, currently #if:ed out.
	(hgcd_start_row_p): New function, duplicated from hgcd.c.
	(gcd_schoenhage_itch): New function.
	(gcd_schoenhage): New function.
	(mpn_gcd): New advertised gcd function, which calls
	mpn_gcd_binary_odd or mpn_gcd_schoenhage, depending on the size of
	the input.

	* mpn/generic/hgcd.c (mpn_hgcd2_lehmer_step): Renamed function
	(was lehmer_step), and made non-static. Updated callers.

	* gmp-impl.h (GCD_LEHMER_THRESHOLD): #if:ed out this macro.
	(mpn_hgcd2_lehmer_step): Added prototype.

2003-11-27  Niels Möller  <nisse@lysator.liu.se>

	* tests/mpz/t-gcd.c (gcd_values): Moved definition, so that we
	don't need to forward declare the array.

2003-11-26  Niels Möller  <nisse@lysator.liu.se>

	* mpn/generic/hgcd.c (mpn_hgcd2_fix): Deleted duplicate definition
	(the function belongs to hgcd2.c).

2003-11-26  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-gcd.c: Generate random operands up to 32767 bits;
	decrease # of test to 1000.
	(gcd_values): Remove oversize test case.

2003-11-26  Niels Möller  <niels@lysator.liu.se>

	* gmp-impl.h: Added name mangling for hgcd-related functions. Also
	use __GMP_PROTO.
	(MPN_LEQ_P, MPN_EXTRACT_LIMB): Moved macros to hgcd.c.
	* mpn/generic/hgcd.c, mpn/generic/hgcd2.c, mpn/generic/qstack.c:
	Adapted to name changes.

	* tests/mpz/t-gcd.c (main): Added some tests with non-random
	input.

2003-11-25  Niels Möller  <nisse@lysator.liu.se>

	* gmp-impl.h (MPN_LEQ_P, MPN_EXTRACT_LIMB): New macros.
	(struct qstack, struct hgcd2_row, struct hgcd2, struct hgcd_row)
	(struct hgcd): New structs. Also added prototypes for new hgcd,
	hgcd2, qstack and gcd functions.

	* configure.in (gmp_mpn_functions): Added hgcd2, hgcd and qstack.

	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES): Added hgcd2.c,
	hgcd.c and qstack.c.

	* mpn/generic/hgcd.c, mpn/generic/hgcd2.c, mpn/generic/qstack.c:
	New files, needed for the sub-quadratic gcd.

2003-11-25  Kevin Ryde  <kevin@swox.se>

	* doc/gmp.texi (Language Bindings): Add Axiom.

2003-11-22  Kevin Ryde  <kevin@swox.se>

	* mpn/alpha/README: More notes on assembler syntax variations.

	* mpn/alpha/alpha-defs.m4, mpn/alpha/unicos.m4 (unop): Should be ldq_u
	not bis, and move to alpha-defs.m4 since it can be happily used
	everywhere.

	* mpn/alpha/alpha-defs.m4, mpn/alpha/default.m4, mpn/alpha/unicos.m4
	(bigend): Move to alpha-defs.m4 and base it on HAVE_LIMB_BIG_ENDIAN or
	HAVE_LIMB_LITTLE_ENDIAN, so as not to hard code system endianness.

	* mpn/alpha/alpha-defs.m4: New file.
	* configure.in (alpha*-*-*): Use it.

2003-11-21  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr-2-0-2-branch 2003-11-21.

	* mpn/alpha/ev5/com_n.asm: Change "not" to "ornot r31", since "not"
	isn't recognised by on Cray Unicos.  Add missing "gp" to PROLOGUE.
	* mpn/alpha/README: Add a note on "not".

2003-11-19  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/aorslsh1_n.asm: Slightly rework feed-in code, avoiding
	spurious reads beyond operand limits.

	* mpn/alpha/ev5/com_n.asm: Add ASM_START/ASM_END.

	* mpn/generic/mul_fft.c (mpn_fft_zero_p): Remove unused function.
	(mpn_lshift_com): Make static, nailify properly.

2003-11-19  Kevin Ryde  <kevin@swox.se>

	* mpn/generic/diveby3.c: Use a "q" variable to make it clearer what
	the code is doing.

	* mpn/powerpc32/750/lshift.asm, mpn/powerpc32/750/rshift.asm: New
	files.

	* mpn/alpha/ev5/com_n.asm: New file.

	* doc/gmp.texi (Assembler Functional Units, Assembler Writing Guide):
	New sections by Torbjorn, tweaked by me.

2003-11-17  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32: Add power4/powerpc970 cycle counts.
	Use cmpwi instead of cmpi to placate darwin.

2003-11-15  Kevin Ryde  <kevin@swox.se>

	* config.guess: Add comments on MacOS "machine" command.

	* tests/devel/try.c (main): Use gmp_randinit_default explicitly on
	__gmp_rands, since RANDS doesn't allow seeding.

	* doc/gmp.texi (Assigning Integers): Remove notes on possible change
	to disallow whitespace, this would be an incompatible change and
	really can't be made.
	(Toom 3-Way Multiplication): Updates for Paul's new code.

	* mpn/generic/mul_n.c (toom3_interpolate, mpn_toom3_mul_n): Put
	if/else braces around whole of #if code, for readability.

	* tests/refmpn.c (refmpn_addlsh1_n, refmpn_sublsh1_n,
	refmpn_rsh1add_n, refmpn_rsh1sub_n): Add ASSERTs for operand overlaps
	etc.

	* mpfr/*: Update to mpfr-2-0-2-branch 2003-11-15.

2003-11-14  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/aorslsh1_n.asm: Use Cray-friendly syntax for "br".

2003-11-13  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/aorslsh1_n.asm: New file.

2003-11-12  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_PROG_CC_WORKS): Add case provoking AIX power2
	assembler, test code by Torbjorn.
	* configure.in (power*-*-*): Add a comment about -mcpu=rios2 fallback.

	* tune/speed.c (main): Use gmp_randinit_default explicitly on
	__gmp_rands, since RANDS doesn't allow seeding.

	* mpfr/*: Update to mpfr-2-0-2-branch 2003-11-12.

	* gmp-impl.h, randmt.h (__gmp_randinit_mt_noseed): Move prototype to
	gmp-impl.h, for use by RANDS.

	* mpn/Makeasm.am (.s, .S, .asm): Quote $< in test -f, per automake.
	(.obj): Use test -f and $(CYGPATH_W) as per automake.

2003-11-11  Kevin Ryde  <kevin@swox.se>

	* configure.in: Make umul and udiv standard-optional objects, rather
	than under various extra_functions.

	* mpn/pa32/hppa1_1/pa7100/add_n.asm,
	mpn/pa32/hppa1_1/pa7100/addmul_1.asm,
	mpn/pa32/hppa1_1/pa7100/lshift.asm,
	mpn/pa32/hppa1_1/pa7100/rshift.asm,
	mpn/pa32/hppa1_1/pa7100/sub_n.asm,
	mpn/pa32/hppa1_1/pa7100/submul_1.asm: Use LDEF for labels.

	* mpf/set_str.c: Don't use memcmp for decimal point testing, just a
	loop is enough and avoids any chance of memcmp reading past the end of
	the given string.

	* randmts.c, randmt.h: New files.
	* Makefile.am (libgmp_la_SOURCES): Add them.
	* randmt.c: Move seeding to randmts.c, common defines in randmt.h.
	* gmp-impl.h (RANDS): Use __gmp_randinit_mt_noseed.
	* tests/misc.c (tests_rand_start): Use gmp_randinit_default
	explicitly, not RANDS.

	* mpn/ia64/ia64-defs.m4 (PROLOGUE_cpu): Use 32-byte alignment, for the
	benefit of itanium 2.
	* mpn/ia64/gcd_1.asm: Remove own .align 32.

	* mpn/ia64/ia64-defs.m4 (ALIGN): New define, using IA64_ALIGN_OK.
	* mpn/ia64/hamdist.asm: Use ALIGN instead of .align.

	* acinclude.m4 (GMP_ASM_IA64_ALIGN_OK): New macro.
	* configure.in (IA64_PATTERN): Use it.
	* mpn/ia64/README: Add notes on gas big endian align problem.

2003-11-10  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/mul_1.asm: Rewrite.

2003-11-08  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/aors_n.asm: Align loop to a multiple of 16.  Also align
	M4_function_n to a multiple of 16, to minimize alignment padding.
	Update P6 cycle counts reflecting improvements with new alignment.

2003-11-07  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (HAVE_HOST_CPU_alpha_CIX): New define.
	(ULONG_PARITY, popc_limb): Use it, to pick up ev7 as well as 67 and 68.
	* longlong.h (count_leading_zeros, count_trailing_zeros): Ditto.

	* doc/gmp.texi (Notes for Package Builds): Add notes on multi-ABI
	system packaging.
	(ABI and ISA): Add GNU/Linux ABI=64.
	(Binary GCD): Add notes on 1x1 GCD algorithms.

	* mpn/alpha/README: Add some literature references.

	* mpn/ia64/mode1o.asm: Various corrections to initial checkin.
	* mpn/ia64/ia64-defs.m4 (ASSERT): Correction to arg quoting.

2003-11-05  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/linux64.m4: New file.
	* configure.in (POWERPC64_PATTERN): Handle *-*-linux*.
	Use linux64.m4.

	* mpn/ia64/logops_n.asm: New file.

2003-11-05  Kevin Ryde  <kevin@swox.se>

	* tune/freq.c (freq_sysctl_hw_model): Relax to just look for "%u MHz",
	for the benefit of sparc cypress under netbsd 1.6.1.

	* mpfr/*: Update to mpfr-2-0-2-branch 2003-11-05.

	* mpn/alpha/ev5/dive_1.c: New file.

	* configure.in (x86_64-*-*): Accept together with amd64-*-*.

	* tune/speed.c: Check range of -x,-y,-w,-W alignment specifiers.
	* tune/speed.h (CACHE_LINE_SIZE): Amend comments.

2003-11-04  Torbjorn Granlund  <tege@swox.com>

	* tune/speed.c: Fix typo in testing HAVE_NATIVE_mpn_modexact_1_odd.

2003-11-03  Kevin Ryde  <kevin@swox.se>

	* mpn/ia64/hamdist.asm: New file.
	* mpn/ia64/mode1o.asm: New file.
	* mpn/ia64/ia64-defs.m4 (ASSERT): New macro.

	* tests/mpz/t-set_d.c (check_2n_plus_1): New test.

2003-11-01  Kevin Ryde  <kevin@swox.se>

	* mpz/fac_ui.c (BSWAP_ULONG) [limb==2*long]: Remove this case, it
	provokes code gen problems on HP cc.
	(BSWAP_ULONG) [generic]: Rename __dst variable to avoid conflicts with
	BITREV_ULONG.
	Fix by Jason Moxham.

	* mpn/powerpc32/mode1o.asm: Use 16-bit i*i for early out, no need to
	truncate divisor.  Amend stated 750/7400 speeds, and note operands
	that give the extremes.

	* mpz/set_d.c: Don't use a special case for d < MP_BASE_AS_DOUBLE, gcc
	3.3 -mpowerpc64 on darwin gets ulonglong->double casts wrong.

	* mpn/generic/diveby3.c: Show a better style carry handling in the
	alternative pipelined sample code.

	Revert this, the longlong.h macros need -mpowerpc64:
	* acinclude.m4 (GMP_GCC_POWERPC64): New macro.
	* configure.in (powerpc64-*-darwin*): Use it to exclude -mpowerpc64
	when bad.

2003-10-31  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode64/submul_1.asm: Move an instruction to save a
	cycle on POWER4.

	* mpn/powerpc64/mode64/divrem_1.asm: Fix several syntax problems
	revealed on Mac OS X.

	* mpn/powerpc64/mode64/*.asm: Add cycle counts for POWER4.

	* mpn/powerpc64/sqr_diagonal.asm: Rewrite to save a cycle on POWER4.

2003-10-31  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr-2-0-2-branch 2003-10-31.

	* mpn/powerpc64/README: Add subdirectory organisation notes.

	* tests/mpn/t-get_d.c: Don't use limits.h, LONG_MIN is wrong on gcc
	2.95 with -mcpu=ultrasparc.

	* acinclude.m4 (GMP_GCC_POWERPC64): New macro.
	* configure.in (powerpc64-*-darwin*): Use it to exclude -mpowerpc64
	when bad.

	* configure.in (powerpc64-*-darwin*) [ABI=mode32]: Use gcc -mcpu flags.

	* mpn/ia64/divrem_1.asm, mpn/ia64/gcd_1.asm: Use "C" for comments.
	* mpn/ia64/README, mpn/ia64/ia64-defs.m4: Note this.

	* mpn/ia64/ia64-defs.m4: Renamed from default.m4, per other defs files.
	* configure.in (IA64_PATTERN): Update GMP_INCLUDE_MPN.

	* doc/gmp.texi (Notes for Particular Systems): Remove m68k ABI notes
	for -mshort and PalmOS, now works.
	(References): Correction, GMP Square Root proof already there, just
	wanting URL from RRRR 4475.

2003-10-29  Kevin Ryde  <kevin@swox.se>

	* configure.in (sparc*-*-*): Use gcc -m32 when that option works, to
	force 32-bit mode on dual 32/64 configurations like GNU/Linux.
	(sparc64-*-linux*): Add support for ABI=64.

	* mpn/generic/pre_divrem_1.c: In fraction part, use CNST_LIMB(0) with
	udiv_qrnnd_preinv to avoid warning about shift > type.

	* mpfr/*: Update to mpfr-2-0-2-branch 2003-10-29.

	* tests/cxx/t-istream.cc: Avoid tellg() checks if putback() doesn't
	update that, avoids certain g++ 2.96 problems.

	* tests/mpn/t-fat.c: New file.
	* tests/mpn/Makefile.am (check_PROGRAMS): Add it.

	* configure.in (CPUVEC_INSTALL, ITERATE_FAT_THRESHOLDS): New macros
	for fat.h.
	* mpn/x86/fat/fat.c (__gmpn_cpuvec_init): Use CPUVEC_INSTALL instead
	of memcpy.  Correction to location of "initialized" set.  Improve
	various comments.

2003-10-27  Torbjorn Granlund  <tege@swox.com>

	* mpn/sparc64/mul_1.asm: Change addcc => add in a few places.
	* mpn/sparc64/addmul_1.asm: Likewise.

	* mpn/sparc32/v9/mul_1.asm: Apply cross-jumping.
	* mpn/sparc32/v9/addmul_1.asm: Likewise.
	* mpn/sparc32/v9/submul_1.asm: Likewise.
	* mpn/sparc32/v9/sqr_diagonal.asm: Likewise.

2003-10-27  Kevin Ryde  <kevin@swox.se>

	* tests/cxx/t-misc.cc: Don't use <climits>, on g++ 2.95.4 (debian 3.0)
	-mcpu=ultrasparc LONG_MIN is wrong and kills the compile.

	* tests/cxx/t-istream.cc: Correction to tellg tests, don't assume
	streampos is zero based.

	* configure.in (HAVE_HOST_CPU_FAMILY_alpha): New define for config.h.
	* mpn/generic/get_d.c: Use it instead of __alpha for alpha workaround,
	since Cray cc doesn't define __alpha.

	* mpn/x86/README: Revise PIC coding notes a bit, add gcc visibility
	attribute.

2003-10-25  Kevin Ryde  <kevin@swox.se>

	* mpn/ia64/gcd_1.asm: New file.

	* tune/many.pl: Allow for PROLOGUE(fun,...), as used on alpha.

	* doc/gmp.texi (C++ Formatted Input): Describe base indicator handling.

	* tests/cxx/t-istream.cc: New file.
	* tests/cxx/Makefile.am: Add it.

	* cxx/ismpznw.cc: New file, integer input without whitespace ...
	* cxx/ismpz.cc: ... from here.
	* gmp-impl.h (__gmpz_operator_in_nowhite): Add prototype.
	* cxx/ismpq.cc: Rewrite using mpz input routines.  Change to accept a
	separate base indicator on numerator and denominator.  Fix base
	indicator case where "123/0456" would stop at "123/0".
	* Makefile.am, cxx/Makefile.am: Add cxx/ismpznw.cc.

	* tests/mpz/t-set_d.c: New file, derived from tests/mpz/t-set_si.c
	* tests/mpz/Makefile.am (check_PROGRAMS): Add it.

	* mpn/m68k/lshift.asm, mpn/m68k/rshift.asm: Support 16-bit int and
	stack alignment.
	* mpn/m68k/README: Add notes on this.
	* configure.in (SIZEOF_UNSIGNED): New define in config.m4.
	* mpn/m68k/m68k-defs.m4 (m68k_definsn): Add cmpw, movew.
	Reported by Patrick Pelissier.

	* mpn/m68k/t-m68k-defs.pl: Don't use -> with hashes, to avoid
	deprecation warnings from perl 5.8.

	* configure.in (viac3-*-*): Use just x86/pentium in $path not x86/p6.
	If gcc is to be believed the old C3s don't have cmov.

	* Makefile.am: Amend comments about not building from libtool
	convenience libraries.

	* mpn/asm-defs.m4 (PROLOGUE): Use m4_file_seen, for correct filename
	in missing EPILOGUE error messages.
	(m4_file_seen): Amend comments about where used.

	* Makefile.am (CXX_OBJECTS): Remove $U, C++ files are not subject to
	ansi2knr rules.

	* gmp-h.in (mpn_divmod_1): Use __GMP_CAST, to avoid warnings in
	applications using g++ -Wold-style-cast.

	* mpn/z8000/README: New file.

2003-10-22  Kevin Ryde  <kevin@swox.se>

	* mpn/generic/get_d.c (CONST_1024, CONST_NEG_1023,
	CONST_NEG_1022_SUB_53): Replace ALPHA_WORKAROUND with a non-gcc-ism,
	and use on Cray Unicos alpha too, which has the same problem.

	* configure.in (powerpc64-*-darwin*): Make ABI=32 available as the
	final fallback, remove mode64 until we know how it will work.

	* doc/gmp.texi (Build Options): Add powerpc970 to available CPUs.
	(ABI and ISA): Add mode32 for Darwin.

	* configure.in (gettimeofday): Use an explicit AC_TRY_LINK, to avoid
	known autoconf 2.57 problems with gettimeofday in AC_CHECK_FUNCS on
	HP-UX.

	* configure.in (powerpc*-*-*): Use ABI=32 instead of ABI=standard for
	the default 32-bit ABI.  Fixes powerpc64-*-aix* which is documented as
	choices "aix64 32" but had "aix64 standard".

	* mpfr/*: Update to mpfr-2-0-2-branch 2003-10-22.

	* doc/gmp.texi (Notes for Particular Systems): Note m68k gcc -mshort
	and PalmOS calling conventions not supported.  Reported by Patrick
	Pelissier.
	(References): Add Paul Zimmermann's Inria 4475 paper.

2003-10-21  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/submul_1.asm: Slightly reschedule loop to accommodate
	Itanium 2 getf.sig latency.

2003-10-21  Kevin Ryde  <kevin@swox.se>

	* tests/mpn/t-instrument.c: Add mpn_addlsh1_n, mpn_rsh1add_n,
	mpn_rsh1sub_n, mpn_sub_nc, mpn_sublsh1_n.  Typo in mpn_preinv_divrem_1
	conditional.

2003-10-20  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/mode32/add_n.asm: New file.
	* mpn/powerpc64/mode32/sub_n.asm: New file.
	* mpn/powerpc64/mode32/mul_1.asm: New file.
	* mpn/powerpc64/mode32/addmul_1.asm: New file.
	* mpn/powerpc64/mode32/submul_1.asm: New file.

2003-10-19  Torbjorn Granlund  <tege@swox.com>

	* longlong.h (AMD64): __x86_64__ => __amd64__.
	(64-bit powerpc): Only define carry-dependent macros if
	!_LONG_LONG_LIMB.

	* acinclude.m4 (POWERPC64_PATTERN): Add powerpc970-*-*.

	* configure.in (POWERPC64_PATTERN): Handle *-*-darwin*.
	(POWERPC64_PATTERN, *-*-aix*): Prepend powerpc64/mode64 to path_aix64.

	* mpn/powerpc64/mode64/mul_1.asm: Change cal => addi.
	* mpn/powerpc64/mode64/addmul_1.asm: Likewise.
	* mpn/powerpc64/mode64/submul_1.asm: Likewise.
	* mpn/powerpc64/sqr_diagonal.asm: Likewise.

	* mpn/powerpc64/mode64/mul_1.asm: Move from "..".
	* mpn/powerpc64/mode64/addmul_1.asm: Likewise.
	* mpn/powerpc64/mode64/submul_1.asm: Likewise.
	* mpn/powerpc64/mode64/divrem_1.asm: Likewise.
	* mpn/powerpc64/mode64/rsh1sub_n.asm: Likewise.
	* mpn/powerpc64/mode64/add_n.asm: Likewise.
	* mpn/powerpc64/mode64/addsub_n.asm: Likewise.
	* mpn/powerpc64/mode64/sub_n.asm: Likewise.
	* mpn/powerpc64/mode64/addlsh1_n.asm: Likewise.
	* mpn/powerpc64/mode64/diveby3.asm: Likewise.
	* mpn/powerpc64/mode64/rsh1add_n.asm: Likewise.
	* mpn/powerpc64/mode64/sublsh1_n.asm: Likewise.

	* mpn/powerpc64/lshift.asm: Handle mode32 ABI.
	* mpn/powerpc64/rshift.asm: Likewise.
	* mpn/powerpc64/umul.asm: Likewise.

	* tune/powerpc64.asm: Make it actually work.

2003-10-19  Kevin Ryde  <kevin@swox.se>

	* mpn/generic/get_d.c: Add a workaround for alpha gcc signed constant
	comparison bug.

	* gmpxx.h (gmp_randclass gmp_randinit_lc_2exp_size constructor): Throw
	std::length_error if size is too big.
	* tests/cxx/t-rand.cc (check_randinit): Exercise this.

	* mpn/x86/pentium4/sse2/addlsh1_n.asm: New file, derived in part from
	mpn/x86/pentium4/sse2/add_n.asm.

	* doc/gmp.texi (C++ Interface Integers, C++ Interface Rationals, C++
	Interface Floats): Note std::invalid_argument exception for invalid
	strings to constructors and operator=.
	(C++ Interface Random Numbers): Note std::length_error exception for
	size too big in gmp_randinit_lc_2exp_size.

2003-10-18  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr-2-0-2-branch 2003-10-18.

	* gmpxx.h (mpz_class, mpq_class, mpf_class, mpfr_class constructors
	and operator= taking string or char*): Throw std::invalid_argument if
	string cannot be converted.
	* tests/cxx/t-constr.cc, tests/cxx/t-assign.cc: Exercise this.

	* cxx/ismpz.cc, cxx/ismpq.cc, cxx/ismpf.cc: Use istream std::locale
	ctype facet for isspace when available.  Only accept space at the
	start of the input, same as g++ libstdc++.  Use ASSERT_NOCARRY to
	check result of mpz_set_str etc.
	* cxx/ismpf.cc: Don't accept "@" for exponent indicator.

	* tune/speed.c, tune/speed.h, tune/common.c, tune/Makefile.am: Remove
	_open and _mpn variants of mpn_toom3_mul_n, only one style now.
	* tune/mul_n_open.c, tune/mul_n_mpn.c: Remove files.

	* gmp-impl.h (LIMB_HIGHBIT_TO_MASK): New macro.
	(udiv_qrnnd_preinv2, udiv_qrnnd_preinv2gen): Use it.

	* tests/mpz/t-import.c, tests/mpz/t-export.c: Use octal for character
	constants, hex is an ANSI-ism.

	* mpn/alpha/ev5/mode1o.c: Corrections to ASSERTs, as per
	mpn/generic/mode1o.c.

	* mpn/generic/diveby3.c: Add commented out alternative code and notes
	for taking the multiply off the dependent chain.  Amend/clarify some
	of the other comments.

	* configure.in (powerpc970-*-*): Use gcc -mcpu=970 when available.
	(powerpc7400-*-*): Fallback on gcc -mcpu=750 if -mcpu=7400 not
	available.

	* doc/gmp.texi (C++ Formatted Input): Note locale digit grouping not
	supported.
	(C++ Formatted Input, C++ Formatted Output): Cross reference class
	interface on overloading.

	* mpn/m68k/README: Add various ideas from doc/tasks.html.

	* mpn/m88k/README: New file.

2003-10-16  Torbjorn Granlund  <tege@swox.com>

	* config.sub: Recognize powerpc970.

2003-10-15  Torbjorn Granlund  <tege@swox.com>

	* config.guess: Recognize powerpc970 under MacOS.

2003-10-15  Kevin Ryde  <kevin@swox.se>

	* configure.in, acinclude.m4 (GMP_C_RIGHT_SHIFT): New test.
	* gmp-impl.h (LIMB_HIGHBIT_TO_MASK): New macro.
	(udiv_qrnnd_preinv2, udiv_qrnnd_preinv2gen): Use it.

	* mpn/amd64/amd64-defs.m4: New file, with a non-aligning PROLOGUE.
	* configure.in (amd64-*-*): Use it.
	* mpn/amd64/addlsh1_n.asm: Add ALIGN(16).

	* mpfr/*: Update to mpfr cvs 2003-10-15.

	* mpn/generic/get_d.c: Rewrite, simplifying and truncating towards
	zero unconditionally.
	* tests/mpn/t-get_d.c: Add various further tests.
	* gmp-impl.h (FORCE_DOUBLE): New macro.

	* gmp-h.in (__mpz_struct): Add comment on __mpz_struct getting into
	C++ mangled function names.

	* doc/gmp.texi (Build Options): Update notes for new doc subdir.
	(Low-level Functions): Note mpn functions don't check for zero limbs
	etc, it's up to an application to strip.

	* doc/configuration (Configure): mdate-sh now in doc subdir, add
	generated fat.h.

2003-10-14  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/lorrshift.asm: Rewrite.

	* mpn/ia64/diveby3.asm: Remove explicit bundling; add branch hints.

2003-10-13  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/diveby3.asm: New file.

2003-10-13  Kevin Ryde  <kevin@swox.se>

	* mpn/powerpc32/mod_34lsub1.asm: New file.

	* mpn/powerpc32/diveby3.asm, mpn/powerpc64/diveby3.asm: src[] in
	second operand of mullw, to allow possible early-out, which the
	0xAA..AB inverse cannot give.  This improvement noticed by Torbjorn.

	* acinclude.m4 (GMP_ASM_LSYM_PREFIX): Print to config.log whether
	local label is purely temporary or appears in object files, for
	development purposes.

	* doc/gmp.texi, doc/fdl.texi, doc/texinfo.tex, doc/mdate-sh: Moved
	from top-level.
	* doc/Makefile.am: New file.
	* configure.in (AC_OUTPUT): Add doc/Makefile.
	* Makefile.am (SUBDIRS): Move doc subdirectory from EXTRA_DIST.
	(info_TEXINFOS, gmp_TEXINFOS): Moved to doc/Makefile.am.
	* mpfr/Makefile.am (mpfr_TEXINFOS): fdl.texi now in doc subdir.
	(TEXINFO_TEX): texinfo.tex now in doc subdir.
	(AM_MAKEINFOFLAGS): Set -I to doc subdir.

	* mpz/and.c: For positive/positive, use mpn_and_n, rate a realloc as
	UNLIKELY.

	* mpn/generic/mul_n.c (mpn_toom3_mul_n, mpn_toom3_sqr_n): Don't test
	for high zero limbs.

2003-10-12  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/diveby3.asm: New file (trivial edits of
	powerpc32/diveby3.asm).

	* mpn/powerpc32/diveby3.asm: Update cycle counts with more processors.
	* mpn/powerpc32/sqr_diagonal.asm: Likewise.

	* mpn/pa64/add_n.asm: Correct PA8500 cycle counts.
	* mpn/pa64/sub_n.asm: Likewise.

	* mpn/m68k/aors_n.asm (INPUT PARAMETERS): Fix typo.
	* mpn/m68k/lshift.asm: Likewise.
	* mpn/m68k/rshift.asm: Likewise.

	* mpn/m68k/README: Correct an URL; add some STATUS comments.

	* mpn/ia64/aorslsh1_n.asm: Avoid shrp when shl/shr works just as well.

	* mpn/powerpc32/addlsh1_n.asm: New file.
	* mpn/powerpc32/sublsh1_n.asm: New file.

2003-10-12  Kevin Ryde  <kevin@swox.se>

	* mpn/sparc64/divrem_1.c, mpn/sparc64/mod_1.c: New files.
	* mpn/sparc64/sparc64.h (HALF_ENDIAN_ADJ, count_leading_zeros_32,
	invert_half_limb, udiv_qrnnd_half_preinv): New macros.

	* gmp-impl.h (udiv_qrnnd_preinv2): Use a ? : for getting the n1 bit,
	so as not to depend on signed right shifts being arithmetic.

	* mpn/powerpc32/diveby3.asm: New file.

	* mpn/generic/divrem_1.c: Use CNST_LIMB(0) to avoid warnings from
	udiv_qrnnd_preinv about shift count when int<long.  Do the same with
	udiv_qrnnd, for consistency.

	* Makefile.am (install-data-hook): Print a warning recommending "make
	check" to watch out for compiler bugs.  Proposed by Torbjorn.

	* mpn/ia64/README (mpn_lshift, mpn_rshift): Amend prospective itanium2
	speed, 0.75 c/l with shrp plus shl/shr.

	* mpn/ia64/popcount.asm: Add comment on optimality.

2003-10-11  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/rsh1aors_n.asm: New file.

	* mpn/asm-defs.m4: Handle rsh1aors_n.

	* configure.in (tmp_mulfunc): Handle rsh1aors_n.

2003-10-11  Kevin Ryde  <kevin@swox.se>

	* mpn/x86/pentium4/sse2/diveby3.asm: Remove non-PIC RODATA memory
	access for 0xAAAAAAAB constant.

	* gmp-impl.h (popc_limb, ULONG_PARITY) [ev67, ev68]: Add gcc asm
	versions using ctpop.

	* mpn/x86/k6/aorsmul_1.asm: Tweak some comments, remove M4_description
	and M4_desc_retval used only in comments.

	* mpn/x86/k6/mul_basecase.asm: Add comment on using mpn_mul_1.

2003-10-09  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/addlsh1_n.asm: Tweak for 0.25 c/l better loop speed.
	* mpn/powerpc64/sublsh1_n.asm: Likewise.

2003-10-09  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-10-09.

	* tests/devel/try.c (_SC_PAGESIZE): Define from _SC_PAGE_SIZE on
	systems which use that, eg. hpux 9.

2003-10-07  Kevin Ryde  <kevin@swox.se>

	* tune/freq.c (freq_sysctl_hw_model): Correction to last sscanf change.

	* configure.in: Check for psp_iticksperclktick in struct pst_processor.
	* tune/freq.c (freq_pstat_getprocessor): Use this.

	* tests/devel/try.c (divisor_array): Add a couple of half-limb values.

	* acinclude.m4 (GMP_PROG_CC_WORKS): Correction to last change, need to
	set result "yes" when cross compiling.

2003-10-06  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul_n.c: Use __GMPN_ADD_1/_GMPN_SUB_1 instead of
	mpn_add_1 and mpn_sub_1.

	* mpn/pa64/aorslsh1_n.asm: Schedule register save and restore code.

2003-10-05  Torbjorn Granlund  <tege@swox.com>

	* mpn/pa64/mul_1.asm: Misc comment cleanups.
	* mpn/pa64/addmul_1.asm: Likewise.
	* mpn/pa64/submul_1.asm: Likewise.

	* mpn/pa64/README: Correct cycle counts.

	* mpn/pa64/aorslsh1_n.asm: New file.

2003-10-04  Kevin Ryde  <kevin@swox.se>

	* tune/freq.c (freq_sysctl_hw_model, freq_sunos_sysinfo,
	freq_sco_etchw, freq_bsd_dmesg, freq_irix_hinv): Demand matching of
	MHz etc at end of sscanf format string.  In particular need this for
	freq_bsd_dmesg on i486-pc-freebsd4.7 to avoid the 486 cpu being used
	for the frequency.

	* tests/misc.c, tests/tests.h (tests_setjmp_sigfpe,
	tests_sigfpe_handler, tests_sigfpe_done, tests_sigfpe_target,
	tests_dbl_mant_bits): New.

	* configure.in (viac3*-*-*): Add gcc VIA c3 options.

	* mpfr/*: Update to mpfr cvs 2003-10-04.

	* tests/refmpn.c (refmpn_addlsh1_n, refmpn_sublsh1_n,
	refmpn_rsh1add_n, refmpn_rsh1sub_n): Add ASSERTs for operand overlaps.
	* tests/tests.h (refmpn_addlsh1_n, refmpn_sublsh1_n, refmpn_rsh1add_n,
	refmpn_rsh1sub_n): Add prototypes.

	* tests/devel/try.c, tune/many.pl: Add mpn_addlsh1_n, mpn_sublsh1_n,
	mpn_rsh1add_n, mpn_rsh1sub_n.

2003-10-03  Torbjorn Granlund  <tege@swox.com>

	* tests/refmpn.c (refmpn_addlsh1_n, refmpn_sublsh1_n, refmpn_rsh1add_n,
	refmpn_rsh1sub_n): New functions.

2003-10-03  Paul Zimmermann  <Paul.Zimmermann@loria.fr>

	* mpn/generic/mul_n.c (toom3_interpolate): Use mpn_add_1/mpn_sub_1
	instead of MPN_INCR_/MPN_DECR_U.

2003-10-02  Torbjorn Granlund  <tege@swox.com>

	* configure.in (ia64*-*-hpux*): Fall back to +O1, not +O.

2003-10-02  Kevin Ryde  <kevin@swox.se>

	* configure.in (ia64*-*-hpux*): For cc, let +O optimization level
	fallback if +O3 doesn't work.

	* acinclude.m4 (GMP_PROG_CC_WORKS): Add a test of __builtin_alloca
	when available, to pick up Itanium HP-UX cc internal errors in +O2.
	Provoking code by Torbjorn.

2003-10-01  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/gmp-mparam.h: Retune.

	* mpn/asm-defs.m4: Handle aorslsh1_n.

	* configure.in (tmp_mulfunc): Handle aorslsh1_n.

	* mpn/ia64/aorslsh1_n.asm: New file.

	* mpn/ia64/aors_n.asm: New file, complete rewrite of mpn_add_n and
	mpn_sub_n.
	* mpn/ia64/add_n.asm: Replace by aors_n.asm.
	* mpn/ia64/sub_n.asm: Replace by aors_n.asm.

2003-10-01  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_C_DOUBLE_FORMAT): Make bad ARM last byte into a
	separate case and consider it non-IEEE, since it looks like this is
	due to some sort of restricted or incorrect software floats.

	* demos/calc/Makefile.am: Use automake yacc/lex support, seems fine in
	separate objdir now.

	* cxx/dummy.cc: Moved from top-level dummy.cc.
	* Makefile.am (libgmpxx_la_SOURCES): Update to cxx/dummy.cc,
	correction to comment about this.

2003-09-30  Torbjorn Granlund  <tege@swox.com>

	* demos/pexpr.c: Correct documentation of -split.
	(TIME): Remove cast of result to double.
	(main): Change timing variables to int.
	(main): #ifdef LIMIT_RESOURCE_USAGE, don't convert numbers of more than
	100000 digits.

2003-09-28  Torbjorn Granlund  <tege@swox.com>

	* mpn/*/*.asm: Clean up spacing, tabify.

	* mpn/alpha/rshift.asm: Table cycle counts.
	* mpn/alpha/lshift.asm: Likewise.
	* mpn/alpha/ev5/rshift.asm: Likewise.
	* mpn/alpha/ev5/lshift.asm: Likewise.
	* mpn/alpha/ev6/add_n.asm: Likewise.
	* mpn/alpha/ev6/sub_n.asm: Likewise.

	* mpn/ia64/lorrshift.asm: Amend comments about performance.

	* mpn/pa64/mul_1.asm: Fix comment typo.
	* mpn/pa64/addmul_1.asm: Likewise.
	* mpn/pa64/submul_1.asm: Likewise.

	* mpn/amd64/addlsh1_n.asm: Save/restore carry using two insn to break
	recurrency.  Add remarks about possible further speedup.
	* mpn/amd64/sublsh1_n.asm: Likewise.

	* mpn/amd64/rsh1add_n.asm: Add remarks about possible further speedup.
	* mpn/amd64/rsh1sub_n.asm: Likewise.

2003-09-27  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/README: Update with POWER4/PPC970 pipeline info.

	* mpn/powerpc64/rsh1add_n.asm: New file.
	* mpn/powerpc64/rsh1sub_n.asm: New file.
	* mpn/powerpc64/rshift.asm: Rewrite.
	* mpn/powerpc64/lshift.asm: Rewrite.

2003-09-26  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc64/addlsh1_n.asm: New file.
	* mpn/powerpc64/sublsh1_n.asm: New file.

2003-09-25  Torbjorn Granlund  <tege@swox.com>

	* tune/common.c (speed_mpn_addlsh1_n, speed_mpn_sublsh1_n,
	speed_mpn_rsh1add_n, speed_mpn_rsh1sub_n): Conditionalize on
	corresponding HAVE_NATIVE_*.

2003-09-25  Kevin Ryde  <kevin@swox.se>

	* mpz/combit.c: Use GMP_NUMB_BITS not BITS_PER_MP_LIMB.

	* demos/expr/exprfr.c: Allow for mpfr_inf_p, mpfr_nan_p and
	mpfr_number_p merely returning non-zero, rather than 1 or 0.

	* demos/expr/exprfr.c, demos/expr/t-expr.c: Add erf, integer_p, zeta.

	* demos/expr/Makefile.am (LDADD): Update comments on $(LIBM).

2003-09-24  Torbjorn Granlund  <tege@swox.com>

	* tune/speed.c (routine): Add entries for mpn_addlsh1_n, mpn_sublsh1_n,
	mpn_rsh1add_n, and mpn_rsh1sub_n.

	* tune/speed.h: Declare speed_mpn_addlsh1_n, speed_mpn_sublsh1_n,
	speed_mpn_rsh1add_n, and speed_mpn_rsh1sub_n.

	* tune/common.c (speed_mpn_addlsh1_n, speed_mpn_sublsh1_n,
	speed_mpn_rsh1add_n, speed_mpn_rsh1sub_n): New functions.

	* gmp-impl.h: Declare mpn_addlsh1_n, mpn_sublsh1_n, mpn_rsh1add_n, and
	mpn_rsh1sub_n.

	* mpn/asm-defs.m4: Add define_mpn's for addlsh1_n, sublsh1_n,
	rsh1add_n, and rsh1sub_n.

	* mpn/powerpc64/*.asm: Add cycle counts in consistent style.  Misc
	styling edits.

	* mpn/amd64/gmp-mparam.h: Retune.

	* configure.in: Add #undefs for HAVE_NATIVE_mpn_addlsh1_n,
	HAVE_NATIVE_mpn_sublsh1_n, HAVE_NATIVE_mpn_rsh1add_n,
	HAVE_NATIVE_mpn_rsh1sub_n.
	(gmp_mpn_functions_optional): List addlsh1_n, sublsh1_n, rsh1add_n,
	and rsh1sub_n.

	* mpn/amd64/addlsh1_n.asm: New file.
	* mpn/amd64/sublsh1_n.asm: New file.
	* mpn/amd64/rsh1add_n.asm: New file.
	* mpn/amd64/rsh1sub_n.asm: New file.

2003-09-24  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-09-24.

	* acinclude.m4 (GMP_C_DOUBLE_FORMAT): Remove conftest* temporary files.

2003-09-23  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (MUL_TOOM3_THRESHOLD, SQR_TOOM3_THRESHOLD): Now 128.

2003-09-23  Kevin Ryde  <kevin@swox.se>

	* gmp-h.in (gmp_randinit_set): Use __gmp_const rather than const.

2003-09-22  Torbjorn Granlund  <tege@swox.com>

	* tune/mul_n_mpn.c: (__gmpn_sqr_n): New #define.
	* tune/mul_n_open.c (__gmpn_sqr_n): New #define.

	* mpn/generic/mul.c (mpn_sqr_n): Move from here...
	* mpn/generic/mul_n.c (mpn_sqr_n): ...to here.
	(mpn_sqr_n): Allocate workspace for toom3 using TMP_* mechanism except
	for very large operands when !WANT_FFT.

	* mpn/generic/mul_n.c: Add a missing ";". Misc comment fixes.

	* mpn/generic/mul.c: Remove spurious #include <stdio.h>.

	* mpn/x86/k7/gmp-mparam.h: Retune.

	* mpn/generic/mul_n.c (mpn_mul_n): Allocate workspace for toom3 using
	TMP_* mechanism except for very large operands when !WANT_FFT.

	* gmp-impl.h (MPN_TOOM3_MUL_N_TSIZE, MPN_TOOM3_SQR_N_TSIZE):
	Define conditionally on WANT_FFT and HAVE_NATIVE_mpn_sublsh1_n.
	(MPN_TOOM3_MAX_N): New #define.

	* mpn/amd64/gmp-mparam.h: Retune.

	* mpn/Makefile.am (TARG_DIST): Add amd64.

	* mpn/generic/sqr_basecase.c: Use mpn_addlsh1_n when available.

	* mpn/generic/mul_n.c: Use proper form for HAVE_NATIVE macros.

2003-09-22  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-09-22.

2003-09-21  Kevin Ryde  <kevin@swox.se>

	* mpn/x86/pentium4/sse2/gmp-mparam.h (USE_PREINV_DIVREM_1,
	USE_PREINV_MOD_1): Set to 1 for new asm versions.

	* mpfr/*: Update to mpfr cvs 2003-09-21.

2003-09-21  Paul Zimmermann  <Paul.Zimmermann@loria.fr>

	* mpn/generic/mul_n.c (mpn_toom3_mul_n): Conditionally use
	mpn_sublsh1_n, mpn_rsh1add_n and mpn_rsh1sub_n, in addition to
	mpn_addlsh1_n.  Avoid all copying, at the expense of some additional
	workspace.

	* gmp-impl.h (MPN_TOOM3_MUL_N_TSIZE, MPN_TOOM3_SQR_N_TSIZE): Accommodate
	latest toom3 code.

2003-09-19  Kevin Ryde  <kevin@swox.se>

	* mpn/x86/pentium4/sse2/divrem_1.asm, mpn/x86/pentium4/sse2/mod_1.asm:
	New files.

2003-09-16  Kevin Ryde  <kevin@swox.se>

	* tune/speed.c (run_one): Don't scale the -1.0 not-available return.
	Print "n/a" for times not-available.

2003-09-13  Paul Zimmermann  <Paul.Zimmermann@loria.fr>

	* mpn/generic/mul_n.c (toom3_interpolate): New function.
	(mpn_toom3_mul_n, mpn_toom3_sqr_n): Call toom3_interpolate.

2003-09-12  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul_n.c (mpn_toom3_mul_n, mpn_toom3_sqr_n): Remove unused
	variables.
	(mpn_toom3_mul_n, mpn_toom3_sqr_n): Use offset `+ 1', not `+ 2' in last
	MPN_DECR_U calls.

2003-09-12  Paul Zimmermann  <Paul.Zimmermann@loria.fr>

	* mpn/generic/mul_n.c (mpn_toom3_mul_n, mpn_toom3_sqr_n): Rewrite.

2003-09-12  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (MPN_KARA_MUL_N_TSIZE, MPN_KARA_SQR_N_TSIZE): Reformulate
	to use the same form as MPN_TOOM3_MUL_N_TSIZE.
	(MPN_TOOM3_MUL_N_TSIZE, MPN_TOOM3_SQR_N_TSIZE): Update for new Toom3
	code requirements.
	* mpn/generic/mul_n.c (evaluate3, interpolate3, add2Times): Remove.
	(USE_MORE_MPN): Remove.

2003-08-31  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-08-31.

2003-08-30  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-08-30.

2003-08-29  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/copyi.asm: New file.
	* mpn/amd64/copyd.asm: New file.
	* mpn/amd64/README: New file.

2003-08-28  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/lshift.asm: New file.
	* mpn/amd64/rshift.asm: New file.
	* mpn/amd64/gmp-mparam.h: Retune.

2003-08-23  Kevin Ryde  <kevin@swox.se>

	* tune/freq.c (freq_getsysinfo): Correction to speed_cycletime value
	established.

	* mpz/rootrem.c, gmp-h.in, gmp.texi (mpz_rootrem): Don't return
	exactness indication, can get that from testing the remainder.

	* mpn/x86/k7/aors_n.asm, mpn/x86/k7/mmx/copyi.asm: Amend to comments
	about loads and stores and what speed should be possible.

2003-08-22  Torbjorn Granlund  <tege@swox.com>

	* mpn/amd64/add_n.asm: New file.
	* mpn/amd64/sub_n.asm: New file.
	* mpn/amd64/mul_1.asm: New file.
	* mpn/amd64/addmul_1.asm: New file.
	* mpn/amd64/submul_1.asm: New file.

2003-08-19  Kevin Ryde  <kevin@swox.se>

	* longlong.h (add_ssaaaa, sub_ddmmss) [hppa 64]: Move down into main
	__GNUC__ block.  Exclude for _LONG_LONG_LIMB (ie. ABI=2.0n) since
	these forms are only for ABI=2.0w.

	* longlong.h (count_leading_zeros) [__mcpu32__]: Check __mcpu32__ to
	avoid bfffo on GCC 3.4 in CPU32 mode.  Reported by Bernardo Innocenti.

	* longlong.h (count_trailing_zeros) [x86_64]: Use "%q0" to force
	64-bit register destination.  Pointed out by Torbjorn.

	* mpz/combit.c: Correction to carry handling when extending a
	negative, and use __GMPN_ADD_1.  Correction to complement limb for a
	negative when there's a non-zero low limb.
	* tests/mpz/bit.c (check_clr_extend, check_com_negs): Exercise these.

	* demos/perl/GMP.xs, demos/perl/GMP.pm, demos/perl/test.pl: Add
	get_d_2exp.
	* demos/perl/GMP.xs, demos/perl/GMP.pm, demos/perl/GMP/Rand.pm,
	demos/perl/test.pl: Add gmp_urandomb_ui, gmp_urandomm_ui.
	(GMP::Rand::randstate): Accept a randstate object to copy.
	* demos/perl/GMP.xs, demos/perl/GMP.pm, demos/perl/GMP/Mpz.pm,
	demos/perl/test.pl: Add combit, rootrem.

2003-08-19  Torbjorn Granlund  <tege@swox.com>

	* tune/Makefile.am (EXTRA_DIST): Add amd64.asm.

2003-08-17  Kevin Ryde  <kevin@swox.se>

	* gmpxx.h [__MPFR_H]: Include full <iostream> for inlines.
	* tests/cxx/t-headfr.cc: New file, exercising this.
	* tests/cxx/Makefile.am: Add it.

	* tests/cxx/t-constr.cc: Include config.h for WANT_MPFR.

	* gmpxx.h: Correction to temp variable type in mpf -> mpfr assignment.
	Reported by Derrick Bass.
	* tests/cxx/t-assign.cc (check_mpfr): Exercise this.

	* configure.in (WANT_MPFR): AC_DEFINE this, for the benefit of
	tests/cxx/t-*.cc.  (Was always meant to have been defined.)
	* tests/cxx/Makefile.am (INCLUDES): Add -I$(top_srcdir)/mpfr.

	* gmpxx.h: __gmp_default_rounding_mode -> __gmpfr_default_rounding_mode
	(struct __gmp_hypot_function): Correction to mpfr_hypot addition.
	* tests/cxx/t-misc.cc (check_mpfr_hypot): Corrections to mpfr/long
	tests.

2003-08-16  Torbjorn Granlund  <tege@swox.com>

	* configure.in (amd64): New.

	* mpn/amd64/gmp-mparam.h: New file.

	* tune/amd64.asm: New file, derived in part from tune/pentium.asm.

2003-08-15  Kevin Ryde  <kevin@swox.se>

	* tune/freq.c (freq_irix_hinv): Reinstate, for the benefit of IRIX 6.2.
	(freq_attr_get_invent): Conditionalize on INFO_LBL_DETAIL_INVENT too.

2003-08-14  Kevin Ryde  <kevin@swox.se>

	* mpq/get_d.c: Use mpn_get_d.
	* tests/mpq/t-get_d.c (check_onebit): New test.

	* gmp.texi (Notes for Particular Systems): Under x86 cpu types, note
	i386 is a fat binary, remove pentium4 recommendation since i386 is now
	quite reasonable for p4.
	(Notes for Particular Systems): Under Windows DLLs, remove caveat
	about --enable-cxx now ok, update .lib creation for new libtool,
	remove .exp not needed for MS C.
	(Notes for Package Builds): i386 is a fat binary.
	(Reentrancy): Remove SCO ctype.h note, don't want to list every system
	misfeature, and was quite possibly for non-threading mode anyway.
	(Autoconf): Remove notes on gmp 2 detection, too old to want to
	encourage anyone to use.
	(Karatsuba Multiplication): Correction to threshold increase/decrease
	for a and b terms.  Reported by Richard Brent and Paul Zimmermann.
	Also add various further index entries.

	* tune/freq.c (freq_attr_get_invent): New function.
	(freq_irix_hinv): Remove, in favour or freq_attr_get_invent.
	* configure.in (AC_CHECK_FUNCS): Add attr_get.
	(AC_CHECK_HEADERS): Add invent.h, sys/attributes.h, sys/iograph.h.

2003-08-03  Kevin Ryde  <kevin@swox.se>

	* tune/tuneup.c (tune_mul): Use MUL_KARATSUBA_THRESHOLD_LIMIT.

2003-08-02  Kevin Ryde  <kevin@swox.se>

	* mpn/asm-defs.m4: Tweak some comments, add hpux11 to m4wrap 0xFF
	problem systems.

	* configure.in (*-*-sco3.2v5*): Remove lt_cv_archive_cmds_need_lc=no,
	since libtool no longer uses it.  This was a workaround fixing ctype.h
	in SCO 5 shared libraries; not sure if libtool now gets it right on
	its own, let's hope so.

	* configure.in, acinclude.m4 (GMP_PROG_HOST_CC): Remove, libtool no
	longer demands HOST_CC.

	* configure.in: When C or C++ compiler not found, refer user to
	config.log.

	* configure.in (i386-*-*): Turn i386 into a fat binary build.
	* mpn/x86/fat/fat.c, mpn/x86/fat/fat_entry.asm,
	mpn/x86/fat/gmp-mparam.h, mpn/x86/fat/gcd_1.c, mpn/x86/fat/mode1o.c:
	New files.
	* gmp-impl.h (struct cpuvec_t) [x86 fat]: New structure.
	* longlong.h (COUNT_LEADING_ZEROS_NEED_CLZ_TAB) [x86 fat]: Define.
	* mpn/asm-defs.m4 (foreach): New macro.
	* mpn/x86/x86-defs.m4 (CPUVEC_FUNCS_LIST): New define.
	* mpn/x86/sqr_basecase.asm: New file, primarily as a fallback for fat
	binaries.
	* mpn/x86/p6/gmp-mparam.h, mpn/x86/p6/mmx/gmp-mparam.h: Add comments
	about fat binary SQR_KARATSUBA_THRESHOLD for p6 and p6/mmx.

	* configure.in: Add various supports for fat binaries, via fat_path,
	fat_functions and fat_thresholds variables.
	* acinclude.m4 (GMP_STRIP_PATH): Mung $fat_path too.
	(GMP_FAT_SUFFIX, GMP_REMOVE_FROM_LIST): New macros.
	* gmp-impl.h: Add various supports for fat binaries.
	(DECL_add_n etc): New macros.
	(mpn_mul_basecase etc): Define only if not already defined.
	* mpn/asm-defs.m4 (m4_config_gmp_mparam): Mention fat binary.
	(MPN): Use m4_unquote, for the benefit of fat binary name expansion.
	* doc/configuration: Notes on fat binaries.
	* gmp-impl.h (MUL_TOOM3_THRESHOLD_LIMIT): Define always.
	(MUL_KARATSUBA_THRESHOLD_LIMIT): New define.
	* mpn/generic/mul.c, mpn/generic/mul_n.c: Use these.
	* tune/divrem1div.c, tune/divrem1inv.c, tune/mod_1_div.c,
	tune/mod_1_inv.c: Define OPERATION_divrem_1 and OPERATION_mod_1, to
	tell fat.h what's being done.

	* config.guess (alpha-*-*): Update comments on what configfsf.guess
	does and doesn't do for us.

2003-07-31  Kevin Ryde  <kevin@swox.se>

	* config.guess: Remove $dummy.o files everywhere, in case vendor
	compilers produce that even when not asked.

	* demos/perl/GMP.xs (class_or_croak): Rename "class" parameter to
	avoid C++ keyword.
	(coerce_ulong, coerce_long): Move croaks to stop g++ 3.3 complaining
	about uninitialized variables.

	* demos/perl/INSTALL: Add notes on building with a DLL.

	* longlong.h (count_trailing_zeros) [x86_64]: Ensure bsfq destination
	is a 64-bit register.  Diagnosed by Francois G. Dorais.

2003-07-31  Torbjorn Granlund  <tege@swox.com>

	* longlong.h [ppc]: Remove nested test for vxworks.

2003-07-24  Kevin Ryde  <kevin@swox.se>

	* gmpxx.h (struct __gmp_binary_multiplies): Use mpz_mul_si for
	mpz*long and long*mpz.
	* tests/cxx/t-ops.cc (check_mpz): Exercise mpz*long and mpz*ulong.

	* cxx/ismpf.cc: Use std::locale decimal point when available.  Expect
	localeconv available always.
	* tests/cxx/t-locale.cc: Enable check_input tests.

	* gmpxx.h (struct __gmp_hypot_function): Use mpfr_hypot.
	* tests/cxx/t-misc.cc (check_mpfr_hypot): New tests.

	* tests/cxx/t-assign.cc, tests/cxx/t-binary.cc, tests/cxx/t-ops.cc,
	tests/cxx/t-prec.cc, tests/cxx/t-ternary.cc, tests/cxx/t-unary.cc:
	Include config.h for WANT_MPFR.

	* tests/mpz/bit.c (check_single): Correction to a diagnostic print.

2003-07-24  Niels Möller  <nisse@lysator.liu.se>

	* mpz/combit.c: New file.
	* Makefile.am, mpz/Makefile.am: Add it.
	* gmp-h.in (mpz_combit): Add prototype.
	* tests/mpz/bit.c (check_single): Exercise mpz_combit.

2003-07-16  Kevin Ryde  <kevin@swox.se>

	* mpn/generic/get_d.c: Correction to infinity handling for large exp.

2003-07-14  Kevin Ryde  <kevin@swox.se>

	* mpz/get_d.c, mpz/get_d_2exp.c, mpf/get_d.c, mpf/get_d_2exp.c: Use
	mpn_get_d.

	* mpn/generic/get_d.c: New file, based on mpz/get_d.c and insert-dbl.c.
	* configure.in, mpn/Makefile.am: Add it.
	* gmp-impl.h (mpn_get_d): Add prototype.

	* tests/mpn/t-get_d.c: New file.
	* tests/mpn/Makefile.am: Add it.

	* tests/mpz/t-get_d_2exp.c (check_onebit, check_round): Test negatives.
	(check_onebit): Add a few more bit sizes.

	* tests/misc.c, tests/tests.h (tests_isinf): New function.

2003-07-12  Kevin Ryde  <kevin@swox.se>

	* configure.in (GMP_PROG_CXX_WORKS): Include $CPPFLAGS, same as
	automake does in the actual build.

	* acinclude.m4 (GMP_PROG_CXX_WORKS): In the namespace test, declare
	namespace before trying to use.  In std iostream test, provoke a
	failure from Compaq C++ in pre-standard mode.

2003-07-08  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_PROG_CC_WORKS): Use separate compiles for various
	known problems, and indicate to the user the reason for rejecting.
	(GMP_PROG_CXX_WORKS): Ditto, and insist on being able to execute each
	compiled program.

2003-07-05  Kevin Ryde  <kevin@swox.se>

	* config.sub: Add comments to our alias transformations.

	* configfsf.sub, configfsf.guess: Update to 2003-07-04.

	* acinclude.m4 (GMP_PROG_CC_WORKS, GMP_PROG_CC_WORKS_LONGLONG): Show
	failing program in config.log, per other autoconf tests.

	* configure.in (i786-*-*): Recognise as pentium4, per configfsf.sub.

2003-06-28  Kevin Ryde  <kevin@swox.se>

	* mpz/get_d_2exp.c, mpf/get_d_2exp.c: Avoid res==1.0 when floats round
	upwards.

	* tests/mpz/t-get_d_2exp.c: New file.
	* tests/mpz/Makefile.am (check_PROGRAMS): Add it.
	* tests/mpf/t-get_d_2exp.c: New file.
	* tests/mpf/Makefile.am (check_PROGRAMS): Add it.
	* tests/x86call.asm, test/tests.h (x86_fldcw, x86_fstcw): New
	functions.
	* tests/misc.c, tests/tests.h (tests_hardware_getround,
	tests_hardware_setround): New functions.

2003-06-25  Kevin Ryde  <kevin@swox.se>

	* mpn/sparc64/dive_1.c: New file.

	* mpn/sparc64/sparc64.h: New file.
	* mpn/sparc64/mode1o.c: Remove things now in sparc64.h.

	* mpfr/*: Update to mpfr cvs 2003-06-25.

	* acinclude.m4 (GMP_PROG_CC_WORKS): In last change provoking gnupro
	gcc, don't use ANSI style function definition.

2003-06-22  Kevin Ryde  <kevin@swox.se>

	* mpn/pa32/hppa1_1/udiv.asm: Remove .proc, .entry, .exit and .procend,
	handled by PROLOGUE and EPILOGUE.  Comment out .callinfo, per other
	asm files.

	* gmpxx.h (mpz_class __gmp_binary_divides, __gmp_binary_modulus): Fix
	long/mpz and long%mpz for dividend==LONG_MIN divisor==-LONG_MIN.
	(mpz_class __gmp_binary_modulus): Fix mpz%long for negative dividend.
	* tests/cxx/t-ops.cc (check_mpz): Add test cases for these, merging
	operator/ and operator% sections for clarity.

2003-06-21  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-06-21.

	* acinclude.m4 (GMP_PROG_CC_WORKS): Add code by Torbjorn provoking an
	ICE from gcc 2.9-gnupro-99r1 under -O2 -mcpu=ev6.
	* configure.in (alpha*-*-* gcc_cflags_cpu): Fallback on -mcpu=ev56 for
	this compiler.

	* gmpxx.h (get_d): Remove comments about long double, double is
	correct for get_d, a future long double form would be get_ld.

2003-06-19  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-06-19.

	* mpn/generic/dive_1.c: Share src[0] fetch among all cases.  No need
	for separate final umul_ppmm in even case, make it part of the loop.

	* mpz/get_d_2exp.c, mpq/set_si.c, mpq/set_ui.c: Nailify.

	* mpf/iset_si.c: Rewrite using mpf/set_si.c code, in particular this
	nailifies it.
	* tests/mpf/t-set_si.c: Nailify tests.

	* mpf/iset_ui.c: Nailify, as per mpf/set_ui.c
	* tests/mpf/t-set_ui.c: New file.
	* tests/mpf/Makefile.am (check_PROGRAMS): Add it.

2003-06-15  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-06-15.

	* mpn/x86/k6/mode1o.asm: Remove a bogus ASSERT.

2003-06-12  Kevin Ryde  <kevin@swox.se>

	* configure.in (--enable-assert): Emit WANT_ASSERT to config.m4.
	* mpn/powerpc32/powerpc-defs.m4, mpn/x86/x86-defs.m4 (ASSERT): Check
	WANT_ASSERT is defined.

	* mpn/sparc32/v9/udiv.asm: Amend heading, this file is for sparc v9.

	* tests/cxx/Makefile.am (TESTS_ENVIRONMENT): In libtool openbsd hack,
	discard error messages from cp, for the benefit of --disable-shared or
	systems not using names libgmp.so.*.

	* tests/devel/try.c (try_one): When overlapping, copy source data
	after filling dst.  Previously probably used only DEADVAL in
	overlapping cases.

2003-06-11  Torbjorn Granlund  <tege@swox.com>

	* mpf/random2.c: Rewrite.  Ignore sign of exp parameter.

2003-06-10  Kevin Ryde  <kevin@swox.se>

	* mpn/sparc64/mode1o.c: New file.

2003-06-09  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/lshift.asm: Add more cycle counts.
	* mpn/powerpc32/rshift.asm: Add more cycle counts.

	* mpn/ia64/addmul_1.asm: Reformat comments for 80 columns.

	* gmp-impl.h (udiv_qrnnd_preinv1): New name for udiv_qrnnd_preinv.
	(udiv_qrnnd_preinv2): New name for udiv_qrnnd_preinv2norm.
	(udiv_qrnnd_preinv): New #define, making udiv_qrnnd_preinv2
	the default.
	* tune/speed.c: Corresponding changes.
	* tune/speed.h: Likewise.
	* tune/common.c: Likewise.

	* mpf/get_str.c: Simplify `off' computation.

	* longlong.h: Tabify.

2003-06-09  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (ABI and ISA): FreeBSD has sparc64 too, just say "BSD" to
	cover all flavours.
	* configure.in: Ditto in some comments.

	* mpfr/*: Update to mpfr cvs 2003-06-09.

	* tests/cxx/Makefile.am (LDADD): Add -L$(top_builddir)/$(LIBS), for
	the benefit of gcc 3.2 on itanium2-hp-hpux11.22.

	* tune/many.pl (mul_2): Add speed routine settings.
	(MAKEFILE): Close when done, for the benefit of development hackery.

2003-06-08  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-06-08.

	* mpn/x86/x86-defs.m4 (femms): Remove fallback to emms.
	(cmovCC, psadbw): Remove simulated versions.
	(cmov_available_p, psadbw_available_p): Remove.
	This trickery was only ever for development purposes on machines
	without those instructions.  Removing it simplifies gmp and in
	particular avoids complications for fat binary builds.  Development
	can be done with a wrapper around "as" if really needed.

	* mpn/x86/divrem_1.asm: Don't use loop_or_decljnz, now K6 has its own
	mpn/x86/k6/divrem_1.asm.  Amend K6 comments now moved to there.
	* mpn/x86/x86-defs.m4 (loop_or_decljnz): Remove, no longer used.

	* mpn/x86/k6/divrem_1.asm: New file, derived from mpn/x86/divrem_1.asm.

	* mpn/x86/k6/pre_mod_1.asm: Remove comments now in mpn/x86/mod_1.asm.

	* mpn/x86/mod_1.asm: Put mpn_mod_1c after mpn_mod_1 for better branch
	prediction.  Put done_zero at end for less wastage in alignment.  Use
	decl+jnz unconditionally since in fact it's ok on k6.  Amend comments.

2003-06-07  Kevin Ryde  <kevin@swox.se>

	* mpn/generic/mode1o.c: Fix ASSERTs on return value.

	* gmp.texi (Build Options): Add viac3 and viac32 cpu types.
	(ABI and ISA): Note on sparcv9 ABI=32 vs ABI=64 speed.  More indexing.

	* configfsf.guess, configfsf.sub: Update to 2003-06-06.
	* config.guess: Remove $RANDOM hack supporting netbsd 1.4, not needed
	by new configfsf.guess.

2003-06-06  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/submul_1.asm: Add branch over .align block.

2003-06-05  Torbjorn Granlund  <tege@swox.com>

	* longlong.h (add_ssaaaa) [pa64]: Output zero operand as register 0.
	Allow more immediate operands.
	(sub_ddmmss) [pa64]: Likewise.
	(add_ssaaaa) [pa32]: Likewise.
	(sub_ddmmss) [pa32]: Likewise.

	* mpn/pa64: Change ".level 2.0W" to ".level 2.0w" to please
	picky GNU assembler.

2003-06-05  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Integer Special Functions): In mpz_array_init, fix type
	shown for integer_array and give an example use.

2003-06-04  Torbjorn Granlund  <tege@swox.com>

	* mpf/set_str.c (mpf_set_str): Work around gcc 2 bug triggered on
	alpha.

2003-06-03  Kevin Ryde  <kevin@swox.se>

	* mpn/x86/pentium/README: Add 7 c/l mmx mul_1, tweak wordings.

	* acinclude.m4 (GMP_C_DOUBLE_FORMAT): Use octal char constants in test
	program, hex is not supported by K&R.

2003-06-02  Torbjorn Granlund  <tege@swox.com>

	* mpn/mips64/divrem_1.asm: New file.

2003-06-01  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/lshift.asm: Reformat code.
	* mpn/powerpc32/rshift.asm: Reformat code.

2003-05-30  Kevin Ryde  <kevin@swox.se>

	* tests/misc.c (tests_start): Set stdout and stderr to unbuffered, to
	avoid any chance of losing output on segv etc.

2003-05-28  Torbjorn Granlund  <tege@swox.com>

	* mpf/get_str.c: Move label `done' to match TMP_MARK and TMP_FREE.
	Remove redundant variable prec.

2003-05-26  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/convert.c: Test bases up to 62.

	* tests/mpf/t-conv.c: Test bases up to 62.

	* demos/pexpr.c: Don't iterate to get accurate timing.

	* mpf/set_str.c (mpn_pow_1_highpart): Cleanup.

	* mp_dv_tab.c: Fix typo.

	* mpf/get_str.c: Rewrite (now sub-quadratic).

2003-05-22  Kevin Ryde  <kevin@swox.se>

	* tests/mpn/t-divrem_1.c: New file.
	* tests/mpn/Makefile.am: Add it.

2003-05-22  Torbjorn Granlund  <tege@swox.com>

	* config.sub: Recognize viac3* processors.

2003-05-20  Torbjorn Granlund  <tege@swox.com>

	* mpn/sparc64/addmul_2.asm: New file.

2003-05-19  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Recognize alphaev7* as alphaev67.

	* config.guess: Recognize viac3* processors.
	* configure.in: Set up path for viac3* processors.
	* acinclude.m4 (X86_PATTERN): Include viac3* processors.

2003-05-19  Kevin Ryde  <kevin@swox.se>

	* tune/freq.c (freq_pstat_getprocessor): New function.
	(freq_all): Use it.
	* configure.in (AC_CHECK_HEADERS): Add sys/pstat.h.
	(AC_CHECK_FUNCS): Add pstat_getprocessor.

2003-05-15  Kevin Ryde  <kevin@swox.se>

	* mpn/generic/mul_fft.c (mpn_mul_fft_decompose): Remove "inline",
	since the code is a bit too big.  gcc doesn't actually inline when
	alloca (TMP_ALLOC) is used anyway.

2003-05-13  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Notes for Particular Systems): Libtool directory is .libs
	not _libs for mingw dll.  Reported by Andreas Fabri.

2003-05-07  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_PROG_CC_WORKS): Add code to generate sse2/xmm code
	from gcc -march=pentium4, to check the assembler supports that.
	(GMP_GCC_PENTIUM4_SSE2, GMP_OS_X86_XMM): New macros.
	* configure.in (pentium4-*-*): Use them to see if gcc -march=pentium4
	(with sse2) is ok.

2003-05-06  Kevin Ryde  <kevin@swox.se>

	* mpz/com.c: Rate size==0 as UNLIKELY, fix comment to mpn_add_1.

	* tune/freq.c (<sys/sysinfo.h>): Include only when needed for
	getsysinfo(), to avoid a problem with this file on AIX 5.1.

2003-05-03  Torbjorn Granlund  <tege@swox.com>

	* mpf/set_str.c: Do not ignore supposedly superfluous digits (in part
	reverting last change).

2003-05-03  Kevin Ryde  <kevin@swox.se>

	* gmp.texi: Use @code for files in @cindex entries, it looks nicer
	than @file.

	* Makefile.am: Note gmp 4.1.1 and 4.1.2 version info.

	* configure.in, acinclude.m4 (GMP_CRAY_OPTIONS): New macro for Cray
	system setups, letting AC_REQUIRE do its job instead of a hard coded
	AC_PROG_EGREP.

	* config.guess: Amend fake RANDOM to avoid ". configfsf.guess" which
	segfaults on Debian "ash" 0.4.16.

2003-05-01  Kevin Ryde  <kevin@swox.se>

	* configure.in (AC_CHECK_FUNCS): Add getsysinfo.
	(AC_CHECK_HEADERS): Add sys/sysinfo.h and machine/hal_sysinfo.h.
	* tune/freq.c (freq_getsysinfo): New function.
	(freq_all): Use it.
	(freq_sysctlbyname_i586_freq, freq_sysctlbyname_tsc_freq,
	freq_sysctl_hw_cpufrequency, freq_sysctl_hw_model): Set
	speed_cycletime before trying to print it, when verbose.

2003-04-28  Torbjorn Granlund  <tege@swox.com>

	* mpf/set_str.c: Major overhaul.
	(mpn_pow_1_highpart): New helper function, meat extracted from
	mpf_set_str.

2003-04-24  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_GCC_ARM_UMODSI): Quote result string against m4.

	* configure, ltmain.sh, aclocal.m4: Update to libtool 1.5.

	* longlong.h (add_ssaaaa) [all]: Remove first "%" commutative in each,
	since gcc only supports one per asm.

	* printf/doprnt.c: Add M for mp_limb_t.
	* tests/misc/t-printf.c: Exercise this.

	* tests/mpz/t-cmp_d.c: Test infinities.
	* tests/mpf/t-cmp_d.c: New file.
	* tests/mpf/Makefile.am: Add it.

	* mpz/cmp_d.c, mpz/cmpabs_d.c, mpf/cmp_d.c: NaN invalid, Inf bigger
	than any value.
	* mpz/set_d.c, mpq/set_d.c, mpf/set_d.c: Nan or Inf invalid.

	* configure.in (AC_CHECK_FUNCS): Add raise.
	* invalid.c: New file.
	* Makefile.am: Add it.
	* gmp-impl.h (__gmp_invalid_operation): Add prototype.
	(DOUBLE_NAN_INF_ACTION): New macro.

	* tests/trace.c, tests/tests.h (d_trace): New function.
	* tests/misc.c, tests/tests.h (tests_infinity_d): New function.
	* tests/misc.c (mpz_erandomb, mpz_errandomb): Use gmp_urandomm_ui.

	* tune/tuneup.c, tune/common.c, tests/devel/try.c: Cast various
	mp_size_t values for printf %ld in case mp_size_t==int.  Use
	gmp_printf for mp_limb_t values.

	* gmp.texi (Nomenclature and Types): Add mp_exp_t, mp_size_t,
	gmp_randstate_t.  Note ulong for bit counts and size_t for byte
	counts.  Don't bother with @noindent.
	(Debugging): New valgrind is getting MMX/SSE.
	(Integer Comparisons): mpz_cmp_d and mpz_cmpabs_d on NaNs and Infs.
	(Float Comparison): mpf_cmp_d behaviour on NaNs and Infs.
	(Low-level Functions): Note with mpn_hamdist what hamming distance is.
	(Formatted Output Strings): Add type M.
	(Internals): Remove remarks on ulong bits and size_t bytes.  Move int
	field remarks to ...
	(Integer Internals, Float Internals): ... here.

2003-04-19  Kevin Ryde  <kevin@swox.se>

	* configure.in (*sparc*-*-* ABI=32): Add umul to extra_functions.

	* mpn/x86/p6/mul_basecase.asm: New file.

2003-04-18  Kevin Ryde  <kevin@swox.se>

	* configure.in (m68060-*-*): Fallback to gcc -m68000 when -m68060 not
	available, and don't use mpn/m68k/mc68020 asm routines.  (Avoids 32x32
	mul and 64/32 div which trap to the kernel on 68060.  Advice by
	Richard Zidlicky.)
	* mpn/m68k/README: Update notes on directory usage.

	* tests/cxx/Makefile.am (TESTS_ENVIRONMENT): Add a hack to let the
	test programs run with a shared libgmpxx on openbsd 3.2.

	* gmp.texi (Language Bindings): Add Guile.

2003-04-12  Kevin Ryde  <kevin@swox.se>

	* configure.in (cygwin*, mingw*, pw32*, os2*): Add
	-Wl,--export-all-symbols to GMP_LDFLAGS, no longer the default in
	latest mingw and libtool.

	* acinclude.m4 (GMP_ASM_COFF_TYPE): New macro.
	* configure.in (x86s): Use it.
	* mpn/x86/x86-defs.m4 (COFF_TYPE): New macro.
	(PROLOGUE_cpu): Use it, for the benefit of mingw DLLs.

	* gmp-impl.h (mpn_copyi, mpn_copyd): Add __GMP_DECLSPEC.

	* gmp.texi (Known Build Problems): Remove windows test program .exe
	repeated built, fixed by new libtool.  Remove MacOS C++ shared library
	creation, fixed by new libtool.
	(Notes for Package Builds, Known Build Problems): Remove DESTDIR notes
	on libgmpxx, fixed in new libtool.

2003-04-10  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Match turbosparc.
	* config.guess: Recognize turbosparc (just for *bsd for now).

2003-04-09  Kevin Ryde  <kevin@swox.se>

	* mpf/mul_ui.c [nails]: Call mpf_mul to handle v > GMP_NUMB_MAX.

	* tests/mpz/t-mul.c (main): Don't try FFT sizes when FFT disabled via
	MP_SIZE_T_MAX, eg. for nails.

	* tests/cxx/t-ternary.cc: Split up tests to help compile speed and
	memory usage.

	* tests/devel/try.c: Print seed under -R, add -E to reseed, use ulong
	for seed not uint.

	* gmp.texi: Add @: after various abbreviations, more index entries.
	(leftarrow): New macro, for non-tex.
	(Random State Initialization): Remove commented gmp_randinit_lc, not
	going to be implemented.
	(Random Number Algorithms): New section.
	(References): Add Matsumoto and Nishimura on Mersenne Twister, add
	Bertot, Magaud and Zimmermann on GMP Square Root.

2003-04-06  Kevin Ryde  <kevin@swox.se>

	* tests/mpz/t-gcd_ui.c: New file.
	* tests/mpz/Makefile.am: Add it.

	* mpz/gcd_ui.c: Correction to return value on longlong limb systems,
	limb might not fit a ulong.

2003-04-04  Kevin Ryde  <kevin@swox.se>

	* configure, aclocal.m4, ltmain.sh: Update to libtool cvs snapshot
	2003-04-02.

2003-04-02  Kevin Ryde  <kevin@swox.se>

	* configure.in (*-*-cygwin*): No longer force lt_cv_sys_max_cmd_len,
	libtool has addressed this now.
	(AC_PROVIDE_AC_LIBTOOL_WIN32_DLL): Remove this, libtool _LT_AC_LOCK
	no longer needs it.

	* acinclude.m4 (GMP_PROG_AR): Also set ac_cv_prog_AR and
	ac_cv_prog_ac_ct_AR when adding flags to AR, so they're not lost by
	libtool's call to AC_CHECK_TOOL.

2003-04-01  Kevin Ryde  <kevin@swox.se>

	* configure, aclocal.m4, ltmain.sh: Update to libtool cvs snapshot
	2003-03-31.

	* configure.in (AC_PROG_F77): Add a dummy AC_PROVIDE to stop libtool
	running F77 probes.

	* randlc2x.c (gmp_rand_lc_struct): Add comments about what exactly is
	in each field.
	(randseed_lc): Rename seedp to seedz to avoid confusion with seedp in
	the lc function.  Suggested by Pedro Gimeno.
	(gmp_randinit_lc_2exp): Use __GMP_ALLOCATE_FUNC_TYPE.  No need for
	"+1" in mpz_init2 of _mp_seed.  Don't bother with mpz_init2 for _mp_a.

2003-03-29  Kevin Ryde  <kevin@swox.se>

	* configure.in (m68k-*-*): Use -O2, no longer need to fallback to -O.
	* acinclude.m4 (GMP_GCC_M68K_OPTIMIZE): Remove macro.

	* configure.in (AC_CHECK_TYPES): Add notes on why tested.

	* gmp.texi (GMPrefu, GMPpxrefu, GMPreftopu, GMPpxreftopu): New macros,
	use them for all external references to get URLs into HTML output.
	(Random State Initialization): Add gmp_randinit_set.
	(Random State Miscellaneous): New section.

2003-03-29  Kevin Ryde  <kevin@swox.se>

	* randbui.c, randmui.c: New files.
	* Makefile.am: Add them.
	* gmp-h.in (gmp_urandomb_ui, gmp_urandomm_ui): Add prototypes.
	* tests/rand/t-urbui.c, tests/rand/t-urmui.c: New files.
	* tests/rand/Makefile.am: Add them.

	* gmp-impl.h (gmp_randstate_srcptr): New typedef.
	(gmp_randfnptr_t): Add randiset_fn.
	* randiset.c: New file.
	* Makefile.am: Add it.
	* gmp-h.in (gmp_randinit_set): Add prototype.
	* randlc2x.c, randmt.c: Add gmp_randinit_set support.
	* tests/rand/t-iset.c: New file.
	* tests/rand/Makefile.am: Add it.

	* tests/misc.c, tests/tests.h (call_rand_algs): New function.

2003-03-27  Kevin Ryde  <kevin@swox.se>

	* mpz/bin_uiui.c: Use plain "*" for kacc products rather than
	umul_ppmm since high not needed, except for an ASSERT now amended.

2003-03-26  Kevin Ryde  <kevin@swox.se>

	* demos/expr/exprfr.c (cbrt, cmpabs, exp2, gamma, nextabove,
	nextbelow, nexttoward): New functions.
	* demos/expr/t-expr.c: Exercise these.

	* mpfr/*: Update to mpfr cvs 2003-03-26.

	* gmp-impl.h (MPZ_REALLOC): Use UNLIKELY, to expect no realloc.

	* tune/time.c (cycles_works_p): Scope variables down to relevant part
	to avoid warnings about unused.

	* configfsf.guess, configfsf.sub: Update to 2003-02-22.
	* config.guess: Fake a $RANDOM variable when running configfsf.guess,
	to workaround a problem on m68k NetBSD 1.4.1.

	* mpz/fac_ui.c: Remove unused variable "z1".

	* tune/freq.c (freq_irix_hinv): Allow "Processor 0" line from IRIX 6.5.

2003-03-24  Torbjorn Granlund  <tege@swox.com>

	* randlc2x.c (randget_lc): Remove write-only variable rn.
	* mpf/eq.c: Remove write-only variable usign.
	* gen-psqr.c (main): Remove write-only variable numb_bits.

2003-03-17  Torbjorn Granlund  <tege@swox.com>

	* Makefile.am (libgmp_la_SOURCES): Add mp_dv_tab.c.
	(libmp_la_SOURCES): Add mp_dv_tab.c.

	* mpn/alpha/invert_limb.asm: Add a few comments.

	* mp_dv_tab.c: New file, defining __gmp_digit_value_tab.

	* mpz/set_str.c: Get rid of function digit_value_in_base and use table
	__gmp_digit_value_tab instead.
	* mpz/inp_str.c: Likewise.
	* mpf/set_str.c: Likewise.
	* mpbsd/min.c: Likewise.
	* mpbsd/xtom.c: Likewise.

	* mpz/set_str.c: Allow bases <= 62.  Return error for invalid bases.
	* mpz/inp_str.c: Likewise.
	* mpf/set_str.c: Likewise.
	* mpz/out_str.c: Likewise.
	* mpz/get_str.c: Likewise.
	* mpf/get_str.c: Likewise.

	* mpz/inp_str.c: Restructure to allocate more string space just
	before needed.
	* mpbsd/min.c: Likewise.

	* longlong.h (__udiv_qrnnd_c): Remove redundant casts.
	(32-bit sparc): Test HAVE_HOST_CPU_supersparc in addition to various
	sparc_v8 spellings.

2003-03-17  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-03-17.

2003-03-15  Kevin Ryde  <kevin@swox.se>

	* Makefile.am (EXTRA_libgmp_la_SOURCES): Use this for TMP_ALLOC
	sources, instead of a libdummy.la.

2003-03-16  Torbjorn Granlund  <tege@swox.com>

	* config.guess: Recognize supersparc and microsparc for *BSD systems.
	Generalize some superscalar recognition patterns.

2003-03-14  Torbjorn Granlund  <tege@swox.com>

	* mpn/sparc64/udiv.asm: New file.

2003-03-13  Torbjorn Granlund  <tege@swox.com>

	* mpn/sparc64: Table cycle counts.  Update some comments.

	* mpn/powerpc64/divrem_1.asm: New file.

2003-03-10  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul.c (mpn_mul): Don't blindly expect
	MUL_KARATSUBA_THRESHOLD to be a constant.

2003-03-07  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul.c (mpn_mul): New operand splitting code for
	avoiding cache misses when un >> MUL_KARATSUBA_THRESHOLD > vn.
	(MUL_BASECASE_MAX_UN): New #define, default to 500 for now.

2003-03-07  Kevin Ryde  <kevin@swox.se>

	* Makefile.am: Put gmp.h and mp.h under $(exec_prefix)/include.
	* gmp.texi (Build Options): Add notes on this.
	Reported by Vincent Lefèvre.

2003-03-06  Kevin Ryde  <kevin@swox.se>

	* configure.in (alpha*-*-* gcc): Add asm option before testing -mcpu,
	for the benefit of gcc 2.9-gnupro-99r1 on alphaev68-dec-osf5.1 which
	doesn't otherwise put the assembler in the right mode for -mcpu=ev6.

2003-03-05  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/powerpc-defs.m4: Set up renaming for v registers.

	* mpz/powm.c (redc): Instead of repeated mpn_incr_u invocations,
	accumulate carries and add at the end.
	(mpz_powm): Trim tp allocation, now as redc doesn't need carry guard.

2003-02-25  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/pentium4/copyd.asm: Correct header comment.

	* mpn/arm/addmul_1.asm: Correct cycle counts.
	* mpn/arm/submul_1.asm: Likewise.

2003-02-20  Kevin Ryde  <kevin@swox.se>

	* demos/factorize.c (factor_using_pollard_rho): Test k>0 to avoid
	infinite loop if k=0 and gcd!=1 reveals a factor.  Reported by John
	Pongsajapan.

	* gmp.texi, fdl.texi: Update to FDL version 1.2.

2003-02-18  Torbjorn Granlund  <tege@swox.com>

	* mpn/arm/mul_1.asm: Fix typo introduced in last change.

2003-02-17  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/gmp-mparam.h: Retune.

	* mpn/sparc64/copyi.asm: Add some header comments.
	* mpn/sparc64/copyd.asm: Likewise.

	* mpn/arm/mul_1.asm: Put vl operand last for umull/umlal.
	Add some header comments.
	* mpn/arm/addmul_1.asm: Rewrite.
	* mpn/arm/submul_1.asm: Rewrite.
	* mpn/arm/gmp-mparam.h: Retune.

2003-02-16  Torbjorn Granlund  <tege@swox.com>

	* mpn/arm/copyi.asm: New file.
	* mpn/arm/copyd.asm: New file.

2003-02-16  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_C_DOUBLE_FORMAT): Tolerate incorrect last data
	byte seen on an arm system.

2003-02-15  Torbjorn Granlund  <tege@swox.com>

	* mpn/arm/gmp-mparam.h: Retune.

2003-02-13  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/750/com_n.asm: Add more cycle counts.

2003-02-13  Kevin Ryde  <kevin@swox.se>

	* configure.in (AC_PREREQ): Bump to 2.57.

	* configure.in, acinclude.m4 (GMP_GCC_WA_OLDAS): New macro, applying
	-Wa,-oldas only when necessary.

	* configure.in (powerpc*-*-*): Don't use -Wa,-mppc with gcc, it
	overrides options recent gcc adds for -mcpu, making generated code
	fail to assemble.

	* tune/tuneup.c (mpn_fft_table): Remove definition, it's in mul_fft.c.

2003-02-12  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/pentium4/sse2/gmp-mparam.h: Retune.
	* mpn/x86/k7/gmp-mparam.h: Retune.
	* mpn/x86/k6/gmp-mparam.h: Retune.
	* mpn/x86/p6/gmp-mparam.h: Retune.
	* mpn/x86/p6/mmx/gmp-mparam.h: Retune.

	* tests/mpz/t-mul.c (main): Rewrite FFT testing code.

2003-02-10  Torbjorn Granlund  <tege@swox.com>

	* config.guess: Recognize "power2" systems.

	* mpn/powerpc64/gmp-mparam.h: Fix indentation.
	* mpn/power/gmp-mparam.h: Retune.
	* mpn/alpha/ev6/nails/gmp-mparam.h: Retune.
	* mpn/sparc64/gmp-mparam.h: Retune.
	* mpn/pa64/gmp-mparam.h: Retune.
	* mpn/sparc32/v8/supersparc/gmp-mparam.h: Retune.
	* mpn/sparc32/v8/gmp-mparam.h: Retune.
	* mpn/mips64/gmp-mparam.h: Retune.
	* mpn/alpha/ev6/gmp-mparam.h: Retune.
	* mpn/powerpc32/gmp-mparam.h: Retune.
	* mpn/powerpc32/750/gmp-mparam.h: Retune.
	* mpn/alpha/ev5/gmp-mparam.h: Retune.
	* mpn/m68k/gmp-mparam.h: Retune.
	* mpn/cray/gmp-mparam.h: Set GET_STR_PRECOMPUTE_THRESHOLD.

	* configure.in: Undo this, problem doesn't happen any more:
	(mips64*-*-*): Pass just -O1 to cc, to work around compiler bug.

2003-02-03  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (MPN_NORMALIZE, MPN_NORMALIZE_NOT_ZERO): Add parens
	around macro parameters.  Reported by Jason Moxham.

2003-02-01  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Low-level Functions): No overlap permitted by mpn_mul_n.
	Reported by Jason Moxham.
	(Formatted Input Strings): Correction to strtoul cross reference
	formatting.
	(BSD Compatible Functions): Add index entry for MINT.

2003-01-29  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (mpn_mul_fft): Now returns int.

2003-01-29  Paul Zimmermann  <Paul.Zimmermann@loria.fr>

	* mpn/generic/mul_fft.c: Major rewrite.

2003-01-25  Kevin Ryde  <kevin@swox.se>

	* config.guess (powerpc*-*-*): Remove $dummy.core file when mfpvr
	fails on NetBSD.
	(trap): Remove $dummy.core on abnormal termination too.

	* mpfr/*: Update to mpfr cvs 2003-01-25.

2003-01-24  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/README: Update cycle counts to match current code.

2003-01-18  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-01-18.

2003-01-17  Torbjorn Granlund  <tege@swox.com>

	* gmp.texi: Canonicalize URLs.

2003-01-15  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Notes for Particular Systems): Add hardware floating point
	precision mode.

	* mpfr/*, configure, aclocal.m4, config.in: Update to mpfr cvs
	2003-01-15.

2003-01-11  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to mpfr cvs 2003-01-11.

2003-01-09  Kevin Ryde  <kevin@swox.se>

	* mpfr/get_str.c: Update to mpfr cvs 2003-01-09.

	* doc/configuration: Various updates.

2003-01-06  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/copyi.asm: Avoid `nop' mnemonic, unsupported on Cray.
	* mpn/alpha/copyd.asm: Likewise.

2003-01-05  Kevin Ryde  <kevin@swox.se>

	* demos/expr/t-expr.c (check_r): Tolerate mpfr_set_str new return
	value.

	* configure, aclocal.m4 (*-*-osf4*, *-*-osf5*): Regenerate with
	libtool patch to avoid bash printf option problem when building shared
	libraries with cxx.

	* configure.in (pentium4-*-*): Use "-march=pentium4 -mno-sse2" since
	sse2 causes buggy code from gcc 3.2.1 and is only supported on new
	enough kernels.

	* acinclude.m4 (GMP_PROG_NM): Add some notes about failures, per
	report by Krzysztof Kozminski.

	* gmp-h.in (mpz_mdivmod_ui, mpz_mmod_ui): Add parens around "r".

	* gmp-h.in (__GMP_CAST): New macro, clean to g++ -Wold-style-cast.
	(GMP_NUMB_MASK, mpz_cmp_si, mpq_cmp_si, mpz_odd_p, mpn_divexact_by3,
	mpn_divmod): Use it.  Reported by Krzysztof Kozminski.
	(mpz_odd_p): No need for the outermost cast to "int".
	* tests/cxx/t-cast.cc: New file.
	* tests/cxx/Makefile.am: Add it.

2003-01-04  Kevin Ryde  <kevin@swox.se>

	* mpfr/set_str.c: Update to mpfr cvs 2003-01-04.

	* demos/expr/exprfra.c (e_mpfr_number): Tolerate recent mpfr_set_str
	returning count of characters accepted.

2003-01-03  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/copyi.asm: New file.
	* mpn/alpha/copyd.asm: New file.

2003-01-03  Kevin Ryde  <kevin@swox.se>

	* demos/expr/t-expr.c: Use __gmpfr on some mpfr internals that have
	changed.

	* mpfr/*, aclocal.m4, config.in, configure: Update to mpfr cvs
	2003-01-03.

	* gmp.texi (Introduction to GMP): Mention release announcements
	mailing list, and put home page and ftp before mailing lists.

2002-12-28  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul_fft.c (mpn_fft_next_size): Simplify.

2002-12-28  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (M68K_PATTERN): New macro.
	(GMP_GCC_M68K_OPTIMIZE): Use it to avoid m6811 and friends.
	* configure.in: Ditto.

	* tests/mpz/t-import.c, tests/mpz/t-export.c: Use '\xHH' to avoid
	warnings about char overflows.
	* acinclude.m4 (GMP_C_DOUBLE_FORMAT): Ditto.

2002-12-28  Pedro Gimeno  <pggimeno@wanadoo.es>

	* randmt.c (randseed_mt, default_state): Fix off-by-one bug on padding.
	(randseed_mt): Add ASSERT checking result of mpz_export.

2002-12-24  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Integer Import and Export): Clarify treatment of signs,
	reported by Kent Boortz.

	* randmt.c: Use gmp_uint_least32_t.
	(randseed_mt): Add nails to mpz_export in case mt[i] more than 32 bits.

	* gmp-impl.h (gmp_uint_least32_t): New typedef, replacing GMP_UINT32.
	* configure.in (AC_CHECK_TYPES): Add uint_least32_t.
	(AC_CHECK_SIZEOF): Add unsigned short.

2002-12-22  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (ULONG_PARITY) [generic C]: Mask result to a single bit.
	(ULONG_PARITY) [_CRAY, __ia64]: New macros.
	* tests/t-parity.c: New test.
	* tests/Makefile.am (check_PROGRAMS): Add it.

	* longlong.h (count_trailing_zeros) [ia64]: New macro.

	* tests/t-count_zeros.c (check_various): Remove unused variable "n".

	* mpn/x86/README: Revise notes on PIC, PLT and GOT.

	* demos/perl/GMP.xs, demos/perl/GMP.pm, demos/perl/test.pl: Add "mt"
	to GMP::Rand::randstate.

2002-12-22  Pedro Gimeno  <pggimeno@wanadoo.es>

	* randmt.c (randseed_mt): Fix bug that might cause the generator to
	return all zeros with certain seeds.  Fix WARM_UP==0 case.
	(gmp_randinit_mt): Initialize to a known state by default.
	(randget_mt): Remove check for uninitialized buffer: no longer needed.
	(recalc_buffer): Use ?: instead of two-element array.

	* tests/rand/t-mt.c: New test.
	* tests/rand/Makefile.am (check_PROGRAMS): Add it.

2002-12-21  Kevin Ryde  <kevin@swox.se>

	* cxx/osdoprnti.cc: Use <cstdarg> and <cstring> rather than <stdarg.h>
	and <string.h>.  No need for <stdio.h>.

	* demos/expr/expr.c, demos/expr/exprfa.c, demos/expr/exprfra.c,
	demos/expr/exprza.c: Use mp_get_memory_functions, not
	__gmp_allocate_func etc.
	* demos/expr/t-expr.c: Don't use gmp-impl.h.
	(numberof): New macro.

	* gmp-h.in, gmp-impl.h (__gmp_allocate_func, __gmp_reallocate_func,
	__gmp_free_func): Move declarations to gmp-impl.h

	* mp_get_fns.c: New file.
	* Makefile.am (libgmp_la_SOURCES, libmp_la_SOURCES): Add it.
	* gmp-h.in (mp_get_memory_functions): Add prototype.
	* gmp.texi (Custom Allocation): Add mp_get_memory_functions, refer to
	"free" not "deallocate" function.
	* gmpxx.h (struct __gmp_alloc_cstring): Use mp_get_memory_functions,
	not __gmp_free_func.

	* gmp-impl.h [__cplusplus]: Add <cstring> for strlen.
	(gmp_allocated_string): Hold length in a field.
	* cxx/osdoprnti.cc, cxx/osmpf.cc: Use this.

2002-12-20  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-perfsqr.c (check_sqrt): Print more variables upon
	failure.

	* mpn/generic/rootrem.c: In Newton loop, pad qp with leading zero.

2002-12-19  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/rootrem.c: Allocate 1.585 (log2(3)) times more space
	for pp temporary to allow for worst case overestimate of root.
	Add some asserts.

	* tests/mpz/t-root.c: Generalize and speed up.

2002-12-19  Kevin Ryde  <kevin@swox.se>

	* tests/cxx/t-rand.cc (check_randinit): Add gmp_randinit_mt test.

	* gmp-h.in: Don't bother trying to support Compaq C++ in pre-standard
	I/O mode.
	* gmp.texi (Notes for Particular Systems): Compaq C++ must be used in
	"standard" iostream mode.

2002-12-18  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/mod_34lsub1.asm: Add code for big-endian, using existing
	little-endian code only if HAVE_LIMB_LITTLE_ENDIAN is defined.

2002-12-18  Kevin Ryde  <kevin@swox.se>

	* configure.in (HAVE_LIMB_BIG_ENDIAN, HAVE_LIMB_LITTLE_ENDIAN): New
	defines in config.m4.

2002-12-17  Torbjorn Granlund  <tege@swox.com>

	* printf/printffuns.c (gmp_fprintf_reps): Make it actually work
	for padding > 256.

2002-12-17  Kevin Ryde  <kevin@swox.se>

	* tune/freq.c: Add <string.h> for memcmp.

	* mpz/pprime_p.c: Use MPN_MOD_OR_MODEXACT_1_ODD.

	* gmp.texi (Formatted Output Strings): %a and %A are C99 not glibc.
	(Formatted Input Strings): Type "l" is for double too.  Hex floats are
	accepted for mpf_t.
	(Formatted Input Functions): Describe tightened parse rule, clarify
	return value a bit.

	* scanf/doscan.c: Add hex floats, tighten matching to follow C99, for
	instance "0x" is no longer acceptable to "%Zi".
	Rename "invalid" label to avoid "invalid" variable, SunOS cc doesn't
	like them the same.
	* tests/misc/t-scanf.c: Update tests.
	* tests/misc/t-locale.c (check_input): Don't let "0x" appear from fake
	decimal point.

	* config.guess (sparc*-*-*): Look at BSD sysctl hw.model to recognise
	ultrasparcs.

	* mpfr/tests/dummy.c: New file.
	* mpfr/tests/Makefile.am (libfrtests_a_SOURCES): Add it.

2002-12-14  Kevin Ryde  <kevin@swox.se>

	* mpbsd/Makefile.am (nodist_libmpbsd_la_SOURCES): Move these mpz
	sources to libmpbsd_la_SOURCES directly, automake 1.7.2 now gets the
	ansi2knr setups right for sources in other directories.

	* mpfr/tests/Makefile.am: Add libfrtests.a in preparation for new mpfr.

2002-12-13  Kevin Ryde  <kevin@swox.se>

	* mpfr/Makefile.am (mpfr_TEXINFOS, AM_MAKEINFOFLAGS): Allow for
	fdl.texi in recent mpfr.

	* configure.in (AC_PROG_EGREP): Ensure this is run outside the Cray
	conditional AC_EGREP_CPP.

	* configure.in (alpha*-*-*): Use gcc -Wa,-oldas if it works, to avoid
	problems with new compaq "as" on OSF 5.1.

	* mpn/Makefile.am (EXTRA_DIST): Remove Makeasm.am, automake 1.7.2 does
	it automatically.

	* acinclude.m4 (AC_LANG_FUNC_LINK_TRY(C)): Remove this hack, fixed by
	autoconf 2.57.

	* configure.in (AC_CONFIG_LIBOBJ_DIR): Set to mpfr, for the benefit of
	new mpfr using LIBOBJ.

	* configure.in: (AM_INIT_AUTOMAKE): Use "gnu no-dependencies
	$(top_builddir)/ansi2knr".
	* */Makefile.am (AUTOMAKE_OPTIONS): Remove, now in configure.in.

	* configure, config.in, INSTALL.autoconf: Update to autoconf 2.57.
	* */Makefile.in, configure, aclocal.m4, install-sh, mkinstalldirs:
	Update to automake 1.7.2.

	* gmp.texi (Build Options): Add hppa64 to cpu types.
	(ABI and ISA): Add gcc to hppa 2.0.
	(Debugging): Add maximum debuggability config options.
	(Language Bindings): Add Arithmos, reported by Johan Vervloet.
	(Formatted Output Strings): 128 bits is about 40 digits, ll is only
	for long long not long double.
	(Formatted Input Strings): ll is only for long long not long double.

	* mpz/divis.c, mpz/divis_ui.c, mpz/cong.c, mpz/cong_ui.c: Allow d=0,
	under the rule n==c mod d iff exists q satisfying n=c+q*d.
	* gmp.texi (Integer Division): Describe this.
	Suggested by Jason Moxham.

2002-12-13  Pedro Gimeno  <pggimeno@wanadoo.es>

	* randlc2x.c (lc): Remove check for seedn < an, which is now
	superfluous.  Add ASSERT to ensure it's correct.  Add ASSERT to check
	precondition of __GMPN_ADD.
	(gmp_randinit_lc_2exp): Avoid reallocation by allocating one extra bit
	for both seed and a.  Simplify seedn < p->_cn case.

	* tests/rand/t-lc2exp.c (check_bigs): Test negative seeds.

2002-12-12  Torbjorn Granlund  <tege@swox.com>

	* mpn/pa32/pa-defs.m4 (PROLOGUE_cpu): Zap spurious argument to `.proc'.
	Add empty `.callinfo'.

2002-12-11  Torbjorn Granlund  <tege@swox.com>

	* mpn/x86/pentium4/sse2/addmul_1.asm: Don't reuse `ret' symbol for a
	label.

2002-12-11  Kevin Ryde  <kevin@swox.se>

	* configure.in (hppa*-*-*): Don't use gcc -mpa-risc-2-0 in ABI=1.0.

	* mpn/pa32/pa-defs.m4: New file, arranging for .proc/.procend.
	* configure.in (hppa*-*-*): Use it.

	* printf/doprnt.c: Comments on "ll" versus "L".

	* tests/mpz/t-div_2exp.c: Reduce tests, especially the random ones.

2002-12-11  Torbjorn Granlund  <tege@swox.com>

	* mpz/get_d.c (limb2dbl): New macro for conversion to `double'.
	Define it to something non-trivial for 64-bit hppa.
	* mpq/get_d.c: Likewise.
	* mpf/get_d.c: Likewise.

	* mpn/x86/pentium4/sse2/addmul_1.asm: Unroll to save one c/l.

2002-12-09  Kevin Ryde  <kevin@swox.se>

	* tune/Makefile.am: Don't use -static under --disable-static, it tends
	not to work.
	* configure.in (ENABLE_STATIC): New AM_CONDITIONAL.

	* gmp-h.in: Use <iostream> instead of <iosfwd> with Compaq C++ in
	pre-standard I/O mode.

	* tests/mpz/t-jac.c, tests/mpz/t-scan.c: Reduce tests.

2002-12-08  Kevin Ryde  <kevin@swox.se>

	* configure.in (*-*-ultrix*): Remove forcible --disable-shared,
	believe this was a generic problem with libtool, now gone.

2002-12-08  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (USE_LEADING_REGPARM): Disable for PIC code generation.

2002-12-07  Torbjorn Granlund  <tege@swox.com>

	* tests/cxx/t-misc.cc (check_mpq): Use 0/1 for canonical 0 in
	mpq_cmp_ui calls.

	* configure.in (hppa2.0*-*-*): Pass +O2 instead of +O3 to work around
	compiler bug with mpfr/tests/tdiv.

2002-12-07  Kevin Ryde  <kevin@swox.se>

	* configure.in (hppa2.0*-*-* ABI=2.0n): Make -mpa-risc-2-0 optional.
	New hppa-level-2.0 test using GMP_HPPA_LEVEL_20 to detect assembler
	support for 2.0n.
	* acinclude.m4 (GMP_PROG_CC_WORKS): Add code that provokes an error
	from gcc -mpa-risc-2-0 if the assembler doesn't know 2.0 instructions.
	(GMP_HPPA_LEVEL_20): New macro.

2002-12-07  Pedro Gimeno  <pggimeno@wanadoo.es>

	* gmp-impl.h (gmp_randfnptr_t.randseed_fn) Return void.
	(LIMBS_PER_ULONG, MPN_SET_UI): New macros.
	(MPZ_FAKE_UI): Rename couple of parameters.

	* randlc2x.c (gmp_rand_lc_struct): _mp_c and _mp_c_limbs replaced
	with mpn style _cp and _cn.  All callers changed.
	(randseed_lc): Fix limbs(seed) > bits_to_limbs(m2exp) case.
	Remove return value.
	(gmp_randinit_lc_2exp): Attempt to avoid redundant reallocation.

	* randmt.c (mangle_seed): New function by Kevin.
	(randseed_mt): Use it instead of mpz_powm, for performance.  Remove
	return value.  Remove commented out code (an inferior alternative to
	mpz_export).

	* randsdui.c (gmp_randseed_ui): Use MPZ_FAKE_UI.

	* tests/rand/t-lc2exp.c (check_bigm, check_bigs): New tests.
	* tests/rand/t-urndmm.c: Add L to constants in calls, for K&R.

2002-12-06  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Remove -g.
	(hppa*-*-*): Pass -Wl,+vnocompatwarnings with +DA2.0.

2002-12-05  Torbjorn Granlund  <tege@swox.com>

	* mpn/pa64/sqr_diagonal.asm: Remove .entry, .proc, .procend.
	* mpn/pa64/udiv.asm: Likewise.

2002-12-05  Kevin Ryde  <kevin@swox.se>

	* mpn/pa64/sub_n.asm: Remove space in "sub, db" which gas objects to.
	* mpn/pa64/*.asm, tune/hppa2.asm: Use ".level 2.0" for 2.0n, since gas
	doesn't like ".level 2.0N".

	* configure.in (hppa*-*-*): Group path and flags choices, for clarity.
	(hppa1.0*-*-*): Use gcc -mpa-risc-1-0 when available.
	(hppa2.0*-*-*): Ditto -mpa-risc-2-0.
	(*-*-hpux*): Exclude ABI=2.0w for hpux[1-9] and hpux10, rather than
	the converse of allowing it for hpux1[1-9]; ie. list the bad systems
	rather than try to guess the good systems.
	(hppa2.0*-*-*) [ABI=2.0n ABI=2.0w]: Add gcc to likely compilers.
	(hppa*-*-*) [gcc]: Test sizeof(long) to differentiate a 32-bit or
	64-bit build of the compiler.
	(hppa64-*-*): Add this as equivalent to hppa2.0-*-*.
	* acinclude.m4 (GMP_C_TEST_SIZEOF): New macro.

	* tests/tests.h (ostringstream::str): Must null-terminate
	ostrstream::str() for the string constructor.

2002-12-04  Torbjorn Granlund  <tege@swox.com>

	* mpn/pa32/hppa1_1/udiv.asm: Don't wrap symbol to INT64 in L() stuff.

	* longlong.h (mpn_udiv_qrnnd_r based udiv_qrnnd): Fix typo.

	* mpn/powerpc32/powerpc-defs.m4: Define float registers with `f'
	prefix.

2002-12-04  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Floating-point Functions): Note the mantissa is binary and
	decimal fractions cannot be represented exactly.  Suggested by Serge
	Winitzki.
	(Known Build Problems): Note libtool stripping options when linking.
	Reported by Vincent Lefevre.

	* acinclude.m4 (GMP_ASM_LABEL_SUFFIX): Don't make an empty result a
	failure, that's a valid result.
	(GMP_ASM_GLOBL): Establish this from the host cpu type.
	(IA64_PATTERN): New macro.
	(GMP_PROG_EXEEXT_FOR_BUILD, GMP_C_FOR_BUILD_ANSI,
	GMP_CHECK_LIBM_FOR_BUILD): Remove temporary files created.
	* configure.in: Use IA64_PATTERN.

2002-12-03  Torbjorn Granlund  <tege@swox.com>

	* tune/hppa.asm: Use config.m4.
	* tune/hppa2.asm: Likewise.
	* tune/hppa2w.asm: Likewise.

	* mpn/pa64: Use LDEF.

2002-12-03  Kevin Ryde  <kevin@swox.se>

	* INSTALL: Use return rather than exit in the example programs.
	Suggested by Richard Dawe.

	* gmp.texi (Build Options): Move non-unix notes to ...
	(Notes for Particular Systems): ... here.  Mention MS Interix,
	reported by Paul Leyland.
	(C++ Interface Random Numbers): Add gmp_randinit_mt to examples.

	* acinclude.m4 (GMP_ASM_LABEL_SUFFIX): Must test empty suffix first,
	for the benefit of hppa hp-ux.
	(GMP_ASM_UNDERSCORE): Grep the output of "nm" instead of trying to
	construct an asm file, and in case of failure fallback on no
	underscore and a warning.

	* longlong.h (count_leading_zeros, count_trailing_zeros) [ev67, ev68]:
	Restrict __asm__ ctlz and cttz to __GNUC__.

	* gen-psqr.c (HAVE_CONST, const): New macros.

	* tests/cxx/t-rand.cc (check_randinit): Add gmp_randinit_mt.

2002-12-02  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h: Split popc_limb again, combined version gives too many
	compiler warnings.

2002-12-01  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/gcdext.c (div1): Disable unused function.

	* mpz/root.c: Don't include stdlib.h or longlong.h.
	* mpz/rootrem.c: Likewise.

	* extract-dbl.c: abort => ASSERT_ALWAYS.
	* mpz/set_d.c: Likewise.
	* mpn/generic/tdiv_qr.c: Likewise.

	* gen-psqr.c (f_cmp_fraction, f_cmp_divisor): Change parameter to
	`const void *', to match qsort spec.

2002-12-01  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Integer Division): Fix a couple of @math's for tex.
	Use @dots in more places.

	* tests/cxx/t-locale.cc: Test non std::locale systems too.
	* tests/cxx/clocale.c: New file, reinstating what was localeconv.c,
	and subverting nl_langinfo too.
	* tests/cxx/Makefile.am (t_locale_SOURCES): Add it.

	* tests/tests.h (ostringstream, istringstream): Provide fakes of these
	if <sstream> not available.
	* tests/cxx/t-locale.cc, tests/cxx/t-ostream.cc: Remove <sstream>.
	* configure.in (AC_CHECK_HEADERS) [C++]: Add <sstream>.

2002-11-30  Torbjorn Granlund  <tege@swox.com>

	* printf/doprnt.c (__gmp_doprnt): Comment out a `break' to shut up
	compiler warnings.

	* mpn/ia64/invert_limb.asm: Add `many' hints to return insns.

	* mpn/ia64/divrem_1.asm: Allocate more local registers; put b0 in
	one of them.

	* mpn/ia64/popcount.asm: Properly restore register ar.lc.

	* longlong.h (umul_ppmm) [ia64]: Form both product parts in asm.

	* mpz/bin_uiui.c: Cast umul_ppmm operands.

	* scanf/doscan.c (gmpscan): Remove unused label store_get_digits.

	* gmp-impl.h: #undef MIN and MAX before #defining.

	* mpn/ia64/copyi.asm: Add `;' after bundle declarators.
	* mpn/ia64/copyd.asm: Likewise.

	* mpn/ia64/divrem_1.asm: Add some syntax to placid the HP-UX assembler.

2002-11-30  Kevin Ryde  <kevin@swox.se>

	* configure.in (AC_CHECK_HEADERS): Add nl_types.h.
	* tests/misc/t-locale.c: Use this, for nl_item on netbsd 1.4.1.

2002-11-29  Torbjorn Granlund  <tege@swox.com>

	* tests/devel/addmul_1.c: Provide prototype for mpn_print.
	(OPS): Account for function overhead.
	* tests/devel/{submul_1.c,mul_1.c,add_n.c,sub_n.c}: Likewise.

	* mpn/ia64/addmul_1.asm: Rewrite.

2002-11-28  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/sqr_diagonal.asm: Don't allocate any registers.

	* mpn/ia64/submul_1.asm: Adapt to Itanium 2.

	* mpn/ia64/mul_1.asm: Fix typo in HAVE_ABI_32 code.

	* mpn/ia64/add_n.asm: Rewrite.
	* mpn/ia64/sub_n.asm: Rewrite.

2002-11-28  Kevin Ryde  <kevin@swox.se>

	* mpn/Makefile.am (nodist_EXTRA_libmpn_la_SOURCES): Use this rather
	than libdummy.
	* tests/Makefile.am (EXTRA_libtests_la_SOURCES): Use this for
	x86call.asm and x86check.c rather than libdummy.

2002-11-27  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-mul.c: Implement reference Karatsuba multiplication.
	Rewrite testing scheme to run fewer really huge tests.

2002-11-26  Torbjorn Granlund  <tege@swox.com>

	* tests: Decrease repetition count for some of the slowest tests.

	* mpn/ia64/divrem_1.asm: New file.

2002-11-25  Torbjorn Granlund  <tege@swox.com>

	* mpfr/tests/tdiv.c: Decrease number of performed tests.

2002-11-23  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/mul_1.asm: Rewrite.

2002-11-23  Kevin Ryde  <kevin@swox.se>

	* mpn/ia64/README: Add some references.

	* gmp.texi (Build Options): Add itanium and itanium2, mention DocBook
	and XML from makeinfo, add texinfo top level cross reference.
	(Integer Division): Try to clarify 2exp functions a bit.
	(C++ Interface Floats): Giving bad string to constructor is undefined.
	(C++ Interface Integers, C++ Interface Rationals): Ditto, and show
	default base in prototype, not the description.

	* config.sub, config.guess, configure.in (itanium, itanium2): New cpu
	types.

	* tests/misc/t-printf.c, tests/misc/t-scanf.c (check_misc): Suppress
	%zd test on glibc prior to 2.1, it's not supported.

2002-11-22  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/copyi.asm: Optimize for Itanium 2.
	* mpn/ia64/copyd.asm: Likewise.

2002-11-20  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/sqr_diagonal.asm: New file.

	* mpn/ia64/submul_1.asm: Handle vl == 0 specially.

2002-11-20  Kevin Ryde  <kevin@swox.se>

	* tests/cxx/t-locale.cc: Test with locales imbued into stream, use
	<sstream>, eliminated some C-isms.  istream tests disabled, not yet
	locale-ized.
	* tests/cxx/Makefile.am (t_locale_SOURCES): Remove localeconv.c.
	* tests/cxx/localeconv.c: Remove file.

	* configure.in (AC_CHECK_TYPES) [C++]: Add std::locale.
	* printf/doprntf.c: Add decimal point parameter, remove localeconv use.
	* gmp-impl.h (__gmp_doprnt_mpf): Update prototype, bump symbol to
	__gmp_doprnt_mpf2 to protect old libgmpxx.
	* cxx/osmpf.cc: Use this with ostream locale decimal_point facet.
	* printf/doprnt.c: Ditto, with GMP_DECIMAL_POINT.

	* gmp-h.in: More comments on __declspec for windows DLLs.

	* mpf/set_str.c, scanf/doscan.c: Cast through "unsigned char" for
	decimal point string, same as input chars.

	* configure.in (AC_CHECK_HEADERS): Add langinfo.h.
	(AC_CHECK_FUNCS): Add nl_langinfo.
	* gmp-impl.h (GMP_DECIMAL_POINT): New macro.
	* mpf/out_str.c, mpf/set_str.c, scanf/doscan.c: Use it, and don't
	bother with special code for non-locale systems.
	* tests/misc/t-locale.c: Subvert nl_langinfo too.

	* configure.in, acinclude.m4 (GMP_ASM_X86_GOT_UNDERSCORE): New macro.
	* mpn/x86/x86-defs.m4 (_GLOBAL_OFFSET_TABLE_): New macro, inserting
	extra underscore for OpenBSD.
	* mpn/x86/README (_GLOBAL_OFFSET_TABLE_): Update notes.
	Reported by Christian Weisgerber.

	* tests/cxx/t-rand.cc (check_randinit): New function, collecting up
	constructor tests.

	* tests/cxx/t-ostream.cc: Use <sstream> instead of <strstream>, use
	compare instead of strcmp.

	* gmpxx.h (__gmp_randinit_lc_2exp_size_t): Return type is int.

2002-11-18  Kevin Ryde  <kevin@swox.se>

	* tune/speed.c (r_string): Use CNST_LIMB with <N>bits, spotted by
	Torbjorn.

2002-11-19  Torbjorn Granlund  <tege@swox.com>

	* mpn/ia64/mul_1.asm: Remove redundant cmp from prologue code.
	Streamline prologue.
	* mpn/ia64/addmul_1.asm: Likewise.
	* mpn/ia64/submul_1.asm: New file.
	* mpn/ia64/submul_1.c: Remove.

2002-11-17  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/popham.c: New file, using new faster algorithm.
	* mpn/generic/popcount.c: Remove.
	* mpn/generic/hamdist.c: Remove.

	* mpn/ia64/addmul_1.asm: Don't clobber callee-saves register f16.
	* mpn/ia64/mul_1.asm: Likewise.

	* mpn/ia64/addmul_1.asm: Add pred.rel declarations.  Resolve RAW
	hazards for condition code registers, duplicating code as needed.  Add
	prediction to all branches.
	* mpn/ia64/mul_1.asm: Likewise.
	* mpn/ia64/add_n.asm: Likewise.
	* mpn/ia64/sub_n.asm: Likewise.
	* mpn/ia64/copyi.asm: Likewise.
	* mpn/ia64/copyd.asm: Likewise.

	* mpn/generic/random2.c: Add a cast to silence some compilers.

2002-11-16  Torbjorn Granlund  <tege@swox.com>

	* mpz/powm.c: Cap allocation by limiting k to 10 (512 precomputed
	values).

2002-11-16  Kevin Ryde  <kevin@swox.se>

	* configure.in, gmp.texi: Remove powerpc64 ABI=32L, doesn't work and
	is unlikely to ever do so.
	* configure.in: Allow ABI=32 for powerpc64.
	Reported by David Edelsohn.

2002-11-14  Kevin Ryde  <kevin@swox.se>

	* mpn/Makefile.am (nodist_libdummy_la_SOURCES): Add addmul_2.c
	addmul_3.c addmul_4.c addmul_5.c addmul_6.c addmul_7.c addmul_8.c.

	* gmp-h.in (__GMP_DECLSPEC_EXPORT, __GMP_DECLSPEC_IMPORT) [__GNUC__]:
	Use __dllexport__ and __dllimport__ to keep out of application
	namespace.

2002-11-14  Gerardo Ballabio <gerardo.ballabio@unimib.it>

	* gmpxx.h (__gmp_randinit_default_t, __gmp_randinit_lc_2exp_t,
	__gmp_randinit_lc_2exp_size_t): Use extern "C" { typedef ... }, for
	the benefit of g++ prior to 3.2.

2002-11-12  Kevin Ryde  <kevin@swox.se>

	* gmpxx.h (gmp_randclass constructors): Patch from Roberto Bagnara to
	use extern "C" on C function pointer arguments.

2002-11-09  Kevin Ryde  <kevin@swox.se>

	* configure.in, Makefile.am, printf/Makefile.am,
	printf/repl-vsnprintf.c: Handle vsnprintf replacement with C
	conditionals.

	* acinclude.m4 (AC_LANG_FUNC_LINK_TRY(C)): Workaround troubles recent
	HP cc +O3 causes for AC_CHECK_FUNCS.

	* gmp.texi (Notes for Particular Systems): Add Sparc app regs.
	(Debugging): Note gcc -fstack options to detect overflow.
	(Formatted Output Strings, Formatted Input Strings): Format strings
	are not multibyte.

2002-11-06  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/tdiv_qr.c: Remove a bogus assert.

2002-11-05  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/tdiv_qr.c: Remove two dead mpn_divrem_2 calls.

2002-11-04  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_C_INLINE): Don't define "inline" for C++.

	* demos/expr/expr-impl.h (stdarg.h): Test __DECC same as gmp.h.

	* mpbsd/mtox.c, printf/obprintf.c, printf/obvprintf.c,
	scanf/vsscanf.c, demos/expr/expr.c, demos/expr/exprf.c,
	demos/expr/exprfa.c, demos/expr/exprfr.c, demos/expr/exprq.c,
	demos/expr/exprz.c, demos/expr/exprza.c: Add <string.h> for strlen and
	memcpy.

2002-11-02  Kevin Ryde  <kevin@swox.se>

	* longlong.h: Test __x86_64__ not __x86_64.  Reported by Andreas
	Jaeger.

	* mpz/import.c, mpz/export.c: Use char* subtract from NULL to get
	pointer alignment, for the benefit of Cray vector systems.

	* cxx/ismpf.cc: Use <clocale>.
	* tests/cxx/t-locale.cc: No need to conditionalize <clocale>.

	* scanf/doscan.c: Don't use isascii, rely on C99 ctype.h.

	* gmp.texi (Build Options): Describe CC_FOR_BUILD, cross reference
	texinfo manual.
	(ABI and ISA): Add powerpc620 and powerpc630 to powerpc64, add NetBSD
	and OpenBSD sparc64.
	(Notes for Package Builds): Cross reference libtool manual.
	(Notes for Particular Systems): Add OpenBSD to non-MMX versions of gas.
	(Known Build Problems): Add MacOS X C++ shared libraries.

2002-10-31  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h, tune/speed.c, tune/speed.h, tune/common.c, tune/many.pl,
	tests/devel/try.c, tests/tests.h, tests/refmpn.c (mpn_addmul_5,
	mpn_addmul_6, mpn_addmul_7, mpn_addmul_8): Add testing and measuring.
	* configure.in (config.in): Add #undefs of HAVE_NATIVE_mpn_addmul_5,
	HAVE_NATIVE_mpn_addmul_6, HAVE_NATIVE_mpn_addmul_7,
	HAVE_NATIVE_mpn_addmul_8.
	(gmp_mpn_functions_optional): Add addmul_5 addmul_6 addmul_7 addmul_8.

	* tests/devel/try.c (ASSERT_CARRY): Remove, now in gmp-impl.h
	(try_one): Do dest setups after sources, for benefit of
	dst0_from_src1.

2002-11-01  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/tdiv_qr.c: Avoid quadratic behaviour for
	sub-division when numerator is more than twice the size of the
	denominator.  Simplify loop logic for the same case.  Clean up a
	few comments.

2002-10-29  Torbjorn Granlund  <tege@swox.com>

	* configure.in (*-cray-unicos*): Pass -hnofastmd again.

2002-10-25  Torbjorn Granlund  <tege@swox.com>

	* tests/tadd.c: Disable test of denorms.

2002-10-23  Linus Nordberg  <linus@swox.se>

	* gmp.texi (Introduction to GMP): Update section about mailing
	lists.

2002-10-23  Kevin Ryde  <kevin@swox.se>

	* gmp-h.in (__GMP_ATTRIBUTE_PURE): Suppress this when
	__GMP_NO_ATTRIBUTE_CONST_PURE is defined.
	* gmp-impl.h (ATTRIBUTE_CONST): Ditto.
	* tune/common.c: Use __GMP_NO_ATTRIBUTE_CONST_PURE.

	* tune/speed.h, tune/many.pl: Remove ATTRIBUTEs from prototypes.
	* tune/speed.h: Remove various "dummy" variables attempting to keep
	"pure" calls live, no longer necessary.  They weren't sufficient for
	recent MacOS cc anyway.

2002-10-21  Torbjorn Granlund  <tege@swox.com>

	* mpn/cray/ieee/addmul_1.c: Handle overlap as in mul_1.c.
	* mpn/cray/ieee/submul_1.c: Likewise.

2002-10-19  Kevin Ryde  <kevin@swox.se>

	* configure.in (sparcv9 etc -*-*bsd*): Add support for NetBSD and
	OpenBSD sparc64.  Reported by Christian Weisgerber.
	(AC_CHECK_HEADERS): Add sys/param.h for sys/sysctl.h on *BSD.

	* demos/calc/calc.y: Change ={ to {, needed for bison 1.50.

	* longlong.h (count_leading_zeros, count_trailing_zeros) [x86_64]:
	Should be UDItype.

	* mpz/set_str.c, mpf/set_str.c, mpbsd/xtom.c, scanf/sscanffuns.c: Cast
	chars through "unsigned char" to zero extend, required by C99 ctype.h.

2002-10-18  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-root.c: Test also mpz_rootrem.

	* mpn/generic/rootrem.c: Avoid overflow problem when n is huge.

	* mpz/root.c: Avoid overflow problems in allocation computation; also
	simplify it.  Misc cleanups.

	* mpz/rootrem.c: New file.
	* Makefile.am, mpz/Makefile.am, gmp-h.in: Add them.

2002-10-17  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (popc_limb): Combine variants.

2002-10-14  Kevin Ryde  <kevin@swox.se>

	* configure.in (AC_CHECK_HEADERS): Add sys/time.h for sys/resource.h
	test, needed by SunOS, and next autoconf will insist headers actually
	compile.

2002-10-08  Kevin Ryde  <kevin@swox.se>

	* tune/time.c (speed_time_init): Allow for Cray times() apparently
	being a cycle counter.

	* dumbmp.c (mpz_get_str): Fix buf size allocation.

	* tests/trace.c, tests/tests.h (mp_limb_trace): New function.

	* tune/speed-ext.c (SPEED_EXTRA_PROTOS): Use __GMP_PROTO.
	* tests/devel/try.c (malloc_region): Add a cast for SunOS cc.

	* configure.in (AC_CHECK_FUNCS): Add strerror.
	(AC_CHECK_DECLS): Add sys_errlist, sys_nerr.
	* tune/time.c, tests/devel/try.c: Use them.

2002-10-05  Kevin Ryde  <kevin@swox.se>

	* configure.in (AC_CHECK_HEADERS): Test float.h, not in SunOS cc.
	* printf/repl-vsnprintf.c: Use this.

	* configure.in (*sparc*-*-*): Collect up various options for clarity,
	use gcc -mcpu=supersparc and ultrasparc3, use cc -xchip, don't use
	-xtarget=native, use cc configs with acc, merge SunOS bundled cc and
	SunPRO cc configs.

	* gmp-impl.h (gmp_randfnptr_t): Use __GMP_PROTO.
	(MPZ_REALLOC): Cast _mpz_realloc return value to mp_ptr, for the
	benefit of SunOS cc which requires pointers of the same type on the
	two legs of a ?:.

	* dumbmp.c (mpz_realloc): Add a cast to avoid a warning from SunOS cc.

	* acinclude.m4: Allow for i960 b.out default cc output.

	* gmp.texi (Random State Initialization): Add gmp_randinit_mt.
	(Perfect Square Algorithm): Describe new mpn_mod_34lsub1 use.
	(Factorial Algorithm): Describe Jason's new code.
	(Binomial Coefficients Algorithm): Ideas about improvements
	moved to doc/projects.html.
	(Contributors): Add Jason Moxham and Pedro Gimeno.

2002-10-03  Kevin Ryde  <kevin@swox.se>

	* gen-psqr.c: New file.
	* Makefile.am, mpn/Makefile.am: Use it to generate mpn/perfsqr.h.
	* mpn/generic/perfsqr.c: Use generated data, put mod 256 data into
	limbs to save space, use mpn_mod_34lsub1 when good.
	* tests/mpn/t-perfsqr.c: New file.
	* tests/mpn/Makefile.am (check_PROGRAMS): Add it.
	* tests/mpz/t-perfsqr.c (check_modulo): New test.
	(check_sqrt): New function holding current tests.

	* configure.in (AC_INIT): Modernize to package name and version here
	rather than AM_INIT_AUTOMAKE, add bug report email.
	(AC_CONFIG_SRCDIR): New macro.

	* gmp-impl.h (ROUND_UP_MULTIPLE): Fix for non-power-of-2 moduli (not
	normal in current uses), clarify the comments a bit.

2002-09-30  Kevin Ryde  <kevin@swox.se>

	* mpn/Makeasm.am (.s.lo): Add --tag=CC for the benefit of CCAS!=CC,
	same as .S.lo and .asm.lo.

	* Makefile.am (gen-fac_ui, gen-fib, gen-bases): Quote source files in
	test -f stuff to avoid Sun make rewriting them.

2002-09-28  Kevin Ryde  <kevin@swox.se>

	* tests/devel/try.c, tune/speed.c: Avoid strings longer than C99
	guarantees.

	* tests/refmpn.c, tests/tests.h (refmpn_zero_extend, refmpn_normalize,
	refmpn_sqrtrem): New functions.
	* tests/devel/try.c (TYPE_SQRTREM): Use refmpn_sqrtrem.
	(compare): Correction to tr->dst_size subscripting.

	* dumbmp.c: Add several new functions, allow for initial n<d in
	mpz_tdiv_q (now in mpz_tdiv_qr actually).

	* gen-bases.c (chars_per_limb): Get GMP_NUMB_BITS for base==2,
	similarly other powers of 2, which this was in the past.
	* tests/refmpn.c (refmpn_chars_per_limb): Ditto.
	* tests/mpn/t-mp_bases.c: Test chars_per_limb for power-of-2 bases too.

	* Makefile.am, mpz/Makefile.am: Setups for gen-fac_ui.c generating
	mpz/fac_ui.h.

2002-09-28  Jason Moxham <J.L.Moxham@maths.soton.ac.uk>

	* dumbmp.c (mpz_pow_ui, mpz_addmul_ui, mpz_root): New functions.
	* gen-fac_ui.c: New file.
	* mpz/fac_ui.c: Rewrite.

2002-09-26  Kevin Ryde  <kevin@swox.se>

	* tests/cxx/localeconv.c: New file, split from t-locale.cc.
	* tests/cxx/t-locale.cc: Use it.
	* tests/cxx/Makefile.am (t_locale_SOURCES): Add it.

	* tests/cxx/Makefile.am: Updates for Gerardo's new test programs.

2002-09-26  Gerardo Ballabio <gerardo.ballabio@unimib.it>

	* gmpxx.h (__gmp_cmp_function): Bug fixes in double/mpq and
	double/mpfr comparisons.

	* tests/cxx/t-assign.cc, tests/cxx/t-binary.cc, tests/cxx/t-constr.cc,
	tests/cxx/t-ternary.cc, tests/cxx/t-unary.cc: Revise and add various
	tests, including some for mpfr, some split from t-expr.cc.
	* tests/cxx/t-locale.cc: Modernize include files.
	* tests/cxx/t-ostream.cc: Modernize include files, use cout rather
	than printf for diagnostics.
	* tests/cxx/t-misc.cc, tests/cxx/t-rand.cc: New file, split from
	t-allfuns.cc.
	* tests/cxx/t-ops.cc: New file, some split from t-allfuns.cc.
	* tests/cxx/t-prec.cc: New file.
	* tests/cxx/t-allfuns.cc, tests/cxx/t-expr.cc: Remove files.

2002-09-25  Torbjorn Granlund  <tege@swox.com>

	* configure.in (*-cray-unicos*): Remove -hscalar0, it causes too much
	performance loss.  Let's trust Cray to fix their compilers.

2002-09-24  Torbjorn Granlund  <tege@swox.com>

	* mpn/powerpc32/add_n.asm: Rewrite.
	* mpn/powerpc32/sub_n.asm: Rewrite.

2002-09-24  Pedro Gimeno  <pggimeno@wanadoo.es>

	* randlc2x.c: Prepare for nails by changing type of _mp_c to mpz_t,
	make _mp_seed fixed-size, disallow SIZ(a)==0 to optimize comparisons
	for mpn_mul.
	* gmp-impl.h (MPZ_FAKE_UI): New macro.

	* randmt.c: Some constants made long for K&R compliance; remove UL at
	the end of other constants; use mp_size_t where appropriate; use
	mpz_export to split the seed.

	* gmp-impl.h: Remove type cast in RNG_FNPTR and RNG_STATE, to allow
	them to be used as lvalues.
	* randclr.c, randlc2x.c, randmt.c, randsd.c: All callers changed.

	* mpz/urandomm.c: Replace mpn_cmp with MPN_CMP.

	* tests/rand/gen.c: Get rid of gmp_errno.

2002-09-24  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Custom Allocation): Keep allocate_function etc out of the
	function index by using @deftypevr.
	More index entries.

2002-09-24  Gerardo Ballabio <gerardo.ballabio@unimib.it>

	* gmpxx.h (mpfr_class constructors from strings): Precision was set
	incorrectly, fixed.

2002-09-23  Torbjorn Granlund  <tege@swox.com>

	* mpf/urandomb.c: Don't crash for overlarge nbits argument.
	Let nbits==0 mean to fill number with random bits.

2002-09-21  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/mod_34lsub1.asm: Add r31 dummy operand to `br' instruction.

2002-09-20  Gerardo Ballabio <gerardo.ballabio@unimib.it>

	* gmpxx.h (__gmp_binary_equal, __gmp_binary_not_equal): Fix broken
	mpq/double functions.

2002-09-18  Torbjorn Granlund  <tege@swox.com>

	* randmt.c (randget_mt): Fix typo.

2002-09-18  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (_gmp_rand): Avoid evaluating "state" more than once, for
	the benefit places calling it with RANDS.

	* randmt.c (randseed_mt): Use mpz_init for mod and seed1, for safety.

	* tune/tuneup.c (sqr_karatsuba_threshold): Initialize to
	TUNE_SQR_KARATSUBA_MAX so mpn_sqr_n works for randmt initialization.

	* gmp.texi (Integer Comparisons): Remove mention of non-existent
	mpz_cmpabs_si, reported by Conrad Curry.

	* tune/speed.c, tune/speed.h, tune/common.c: Add gmp_randseed,
	gmp_randseed_ui and mpz_urandomb.

2002-09-18  Pedro Gimeno  <pggimeno@wanadoo.es>

	* tests/rand/gen.c: Add mt, remove lc and bbs.

	* Makefile.am (libgmp_la_SOURCES): Add randmt.c, remove randlc.c and
	randraw.c.

	* randmt.c: New file.
	* gmp-h.in (gmp_randinit_mt): Add prototype.
	* randdef.c: Use gmp_randinit_mt.

	* gmp-impl.h (RNG_FNPTR, RNG_STATE): New macros.
	(gmp_randfnptr_t): New structure.
	(_gmp_rand): Now a macro not a function.
	* gmp-h.in (__gmp_randata_lc): Remove, now internal to randlc2x.c.
	(__gmp_randstate_struct): Revise comments on field usage.
	* randsd.c, randclr.c: Use function pointer scheme.
	* randsdui.c: Use gmp_randseed.
	* randraw.c: Remove file.
	* randlc2x.c: Collect up lc_2exp related code from randsd.c, randclr.c
	and randraw.c, use function pointer scheme, integrate seed==0/a==0
	into main case and fix case where bits(a) < m2exp.

	* randlc.c: Remove file, never documented and never worked.
	* gmp-h.in (gmp_randinit_lc): Remove prototype.

2002-09-16  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/mod_34lsub1.asm: New file.

2002-09-16  Kevin Ryde  <kevin@swox.se>

	* configure.in, acinclude.m4 (GMP_C_RESTRICT): Remove this, not
	currently used, and #define restrict upsets Microsoft C headers on
	win64.  Reported by David Librik.

	* configure.in (x86): Add gcc 3.2 -march and -mcpu flags, remove some
	unnecessary -march=i486 fallbacks.

	* gmp.texi (Notes for Particular Systems): Note cl /MD is required for
	Microsoft C and MINGW to cooperate on I/O.  Explained by David Librik.
	(Language Bindings): Add linbox.
	* gmp.texi (Language Bindings):

2002-09-12  Kevin Ryde  <kevin@swox.se>

	* mpz/aorsmul_i.c: Allow for w==x overlap with nails.  Test
	BITS_PER_ULONG > GMP_NUMB_BITS rather than GMP_NAIL_BITS != 0.
	* tests/mpz/t-aorsmul.c: Test this.

	* tune/common.c: mpn_mod_34lsub1 only exists for GMP_NUMB_BITS%4==0
	* tune/speed.c: Add mpn_mod_34lsub1.

2002-09-10  Pedro Gimeno  <pggimeno@wanadoo.es>

	* rand.c: Remove old disabled BBS code.
	* mpf/urandomb.c: Use BITS_TO_LIMBS.

2002-09-10  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Multiplication Algorithms): FFT is now enabled by default.

2002-09-10  Pedro Gimeno  <pggimeno@wanadoo.es>

	* mpz/urandomm.c: Use mpn level functions, avoid an infinite loop if
	_gmp_rand forever returns all "1" bits.
	* tests/rand/t-urndmm.c: New file
	* tests/rand/Makefile.am (check_PROGRAMS): Add it.

	* gmp-impl.h (BITS_TO_LIMBS): New macro.
	* mpz/urandomb.c: Use it, and use MPZ_REALLOC.

2002-09-08  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_GCC_WA_MCPU): New macro.
	* configure.in (alpha*-*-*): Use it to avoid -Wa,-mev67 if gas isn't
	new enough to know ev67.  Reported by David Bremner.

2002-07-30  Gerardo Ballabio <gerardo.ballabio@unimib.it>

	* gmpxx.h (__gmpz_value etc): Remove, use mpz_t etc instead.
	(__gmp_expr): Reorganise specializations, use __gmp_expr<T,T> not
	mpz_class etc.
	(mpfr evals): Remove mode parameter, was always
	__gmp_default_rounding_mode anyway.

2002-09-07  Kevin Ryde  <kevin@swox.se>

	* gmp-h.in, mp-h.in: Use #ifdef for tests, for the benefit of
	applications using gcc -Wundef.

	* longlong.h: Define COUNT_LEADING_ZEROS_NEED_CLZ_TAB for all alphas,
	since mpn/alpha/cntlz.asm always goes into libgmp.so, even for ev67
	and ev68 which don't need it.  Reported by David Bremner.

	* gmp.texi (Demonstration Programs): New section, expanding on what
	was under "Build Options".
	(Converting Floats): Don't need \ for _ in @var within @math.
	Add and amend various index entries.

	* demos/qcn.c: Add -p prime limit option.

2002-08-30  Kevin Ryde  <kevin@swox.se>

	* mpz/pprime_p.c: Handle small negatives with isprime, in particular
	must do so for n==-2.
	* tests/mpz/t-pprime_p.c: New file.
	* tests/mpz/Makefile.am: Add it.

2002-08-26  Torbjorn Granlund  <tege@swox.com>

	* gmp.texi (Converting Floats): Fix typo in mpf_get_d_2exp docs,
	reported by Paul Zimmermann.

2002-08-26  Kevin Ryde  <kevin@swox.se>

	* configure.in: Echo the ABI being tried for the compilers.
	(powerpc*-*-*): Use powerpc64/aix.m4 for ABI=aix64 too.
	(AC_CHECK_FUNCS): Add strtol, for tests/rand/gen.c.

2002-08-24  Kevin Ryde  <kevin@swox.se>

	* configure.in (HAVE_HOST_CPU_, HAVE_HOST_CPU_FAMILY_, HAVE_NATIVE_):
	Setup templates for these using AH_VERBATIM rather than acconfig.h,
	preferred by latest autoconf.  Prune lists to just things used.
	* acconfig.h: Remove file.

	* mpn/powerpc32/mode1o.asm: Forgot ASM_START.

	* tune/time.c (have_cgt_id): Renamed from HAVE_CGT_ID so avoid
	confusion with autoconf outputs, and turn it into a "const" variable.

2002-08-23  Torbjorn Granlund  <tege@swox.com>

	* configure.in: Choose powerpc32/aix.m4 or powerpc64/aix.m4 based on
	ABI, not configuration triple.

	* mpz/pprime_p.c: Partially undo last change--handle small and
	negative numbers in the same test.

2002-08-22  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (MUL_FFT_THRESHOLD, SQR_FFT_THRESHOLD): Note
	mpn/generic/mul_fft.c is not nails-capable, and don't bother setting
	other FFT data for nails.

	* configfsf.guess: Update to 2002-08-19.
	* configfsf.sub: Update to 2002-08-20.

	* config.guess (powerpc*-*-*): Use a { } construct to suppress SIGILL
	message on AIX.

2002-08-20  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Build Options): Add ia64 under cpu types.
	(ABI and ISA): Describe IRIX 6 ABI=o32.
	(Notes for Particular Systems): Remove -march=pentiumpro, now ok.
	(Known Build Problems): Binutils 2.12 is ok for libgmp.a.
	(Emacs): New section.
	(Language Bindings): Update MLton URL, reported by Stephen Weeks.
	(Prime Testing Algorithm): New section.
	Don't put a blank line after @item in @table since it can make a page
	break between the heading and the entry.
	Misc tweaks elsewhere, in particular more index entries.

	* mpz/millerrabin.c: Need x to be size+1 for change to urandomm.

	* gmp-impl.h: Comments on the use of __GMP_DECLSPEC.

	* tune/time.c (freq_measure_mftb_one): Use struct_timeval, for the
	benefit of mingw.

	* tests/refmpn.c, tests/tests.h (ref_addc_limb, ref_subc_limb):
	Renamed from add and sub, following gmp-impl.h ADDC_LIMB and SUBC_LIMB.

2002-08-17  Kevin Ryde  <kevin@swox.se>

	* mpn/powerpc32/mode1o.asm: New file.
	* configure.in, acinclude.m4 (GMP_ASM_POWERPC_PIC_ALWAYS): New macro.
	* mpn/asm-defs.m4: Use it to help setting up PIC.

	* configure.in (AC_PREREQ): Bump to 2.53.

	* mpn/powerpc32/powerpc-defs.m4 (ASSERT): New macro.
	(PROLOGUE_cpu): New macro, giving ALIGN(4) not 8.

2002-08-16  Torbjorn Granlund  <tege@swox.com>

	* mpn/m68k/lshift.asm: Fix typo in !scale_available_p code.
	* mpn/m68k/rshift.asm: Likewise.

2002-08-16  Kevin Ryde  <kevin@swox.se>

	* configure.in (--enable-profiling=instrument): New option.
	* gmp.texi (Profiling): Describe it.
	* mpn/x86/x86-defs.m4 (PROLOGUE_cpu, call_instrument, ret_internal):
	Add support.
	(call_mcount): Share PIC setups with call_instrument.
	* mpn/x86/*.asm: Use ret_internal.
	* mpn/asm-defs.m4 (m4_unquote): New macro.
	* tests/mpn/t-instrument.c: New file.
	* tests/mpn/Makefile.am: Add it.

	* mpn/alpha/umul.asm: Add ASM_END.

2002-08-12  Kevin Ryde  <kevin@swox.se>

	* mpz/pprime_p.c: Fake up a local mpz_t to take abs(n), rather than
	using mpz_init etc.

	* mpz/millerrabin.c: Use mpz_urandomm for uniform selection of x,
	reported by Jason Moxham.  Exclude x==n-1, ie. -1 mod n.  Use
	gmp_randinit_default.

	* mpn/alpha/umul.asm: Use "r" registers, for the benefit of Unicos.

	* tests/devel/try.c: Add mpn_copyi and mpn_copyd.

2002-08-09  Kevin Ryde  <kevin@swox.se>

	* Makefile.am: Remove configure.lineno from DISTCLEANFILES and gmp.tmp
	from MOSTLYCLEANFILES, automake does these itself now.

	* */Makefile.in, aclocal.m4, configure, install-sh, missing,
	mkinstalldirs: Update to automake 1.6.3.

	* mpn/ia64/README: Some notes on assembler syntax.

	* mpn/ia64/add_n.asm, mpn/ia64/sub_n.asm: Add .body.
	* mpn/ia64/add_n.asm, mpn/ia64/addmul_1.asm, mpn/ia64/mul_1.asm,
	mpn/ia64/sub_n.asm: Position .save ar.lc just before relevant
	instruction.
	* mpn/ia64/addmul_1.asm, mpn/ia64/mul_1.asm: Add .save ar.pfs and pr.
	* mpn/ia64/copyd.asm, mpn/ia64/copyi.asm: Correction to .body position.
	* mpn/ia64/lorrshift.asm: Add .prologue stuff.

	* configure.in (*-*-unicos*): Remove forcible --disable-shared,
	libtool gets this right itself now.

2002-08-07  Kevin Ryde  <kevin@swox.se>

	* mpn/x86/pentium/mmx/hamdist.asm: New file, adapted from
	mpn/x86/pentium/mmx/popham.asm.
	* mpn/x86/pentium/mmx/popham.asm: Remove file, not faster than plain
	mpn/x86/pentium/popcount.asm for the popcount.

	* mpn/alpha/umul.asm: Use PROLOGUE/EPILOGUE, rename it mpn_umul_ppmm.
	* configure.in (alpha*-*-*): Add umul to extra_functions.

	* mpz/remove.c: Make src==0 return 0, not do DIVIDE_BY_ZERO.

2002-08-05  Torbjorn Granlund  <tege@swox.com>

	* acconfig.h: Remove spurious undefs for mpn_divrem_newton and
	mpn_divrem_classic.

2002-08-05  Kevin Ryde  <kevin@swox.se>

	* tests/refmpn.c, tests/tests.h, tests/misc/t-printf.c,
	tests/mpf/t-trunc.c, tests/mpn/t-mp_bases.c, tests/mpn/t-scan.c,
	tests/mpq/t-cmp_ui.c, tests/mpz/bit.c, tests/mpz/t-aorsmul.c,
	tests/mpz/t-powm_ui.c tests/mpz/t-root.c, tests/mpz/t-scan.c: More
	care with long and mp_size_t parameters, for the benefit of K&R.

	* demos/perl/GMP.pm, demos/perl/GMP.xs, demos/perl/GMP/Mpz.pm,
	demos/perl/test.pl: Add mpz_import and mpz_export.
	* demos/perl/GMP.pm: Remove "preliminary" warning.

	* mpn/lisp/gmpasm-mode.el: Set add-log-current-defun-header-regexp to
	pick up m4 defines etc.

	* Makefile.am (libgmpxx_la_DEPENDENCIES): libgmp.la should be here,
	not libgmpxx_la_LIBADD, for the benefit of "make -j2".

	* mpn/ia64/*.asm [hpux ABI=32]: Extend 32-bit operands to 64-bits, not
	optimal and might not be sufficient, but seems to work.

2002-08-03  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Profiling): Use a table and expand for clarity.
	(Integer Special Functions): New section for mpz_array_init,
	_mpz_realloc, mpz_getlimbn and mpz_size, to discourage their use.

	* configure.in (*-*-msdosdjgpp*): Remove forcible --disable-shared,
	libtool gets this right itself now.

2002-07-30  Kevin Ryde  <kevin@swox.se>

	* mpn/powerpc32/lshift.asm, mpn/powerpc32/rshift.asm: Lose final mr,
	and make final stwu into an stw.

	* gmp.texi (Known Build Problems): An easier workaround for DESTDIR,
	using LD_LIBRARY_PATH.
	(C++ Interface MPFR): Remove mpfrxx.h.

	* mpfrxx.h: Remove file.
	* Makefile.am: Remove mpfrxx.h.
	* tests/cxx/Makefile.am: Add Gerardo's new test programs.

2002-07-30  Gerardo Ballabio <gerardo.ballabio@unimib.it>

	* gmpxx.h: Use mpz_addmul etc for ternary a+b*c etc.  Reorganise some
	macros for maintainability.  Merge mpfrxx.h.
	* tests/cxx/t-constr.cc, tests/cxx/t-expr.cc: Various updates.
	* tests/cxx/t-assign.cc, tests/cxx/t-binary.cc,
	tests/cxx/t-ternary.cc, tests/cxx/t-unary.cc: New files.

2002-07-27  Kevin Ryde  <kevin@swox.se>

	* longlong.h (count_trailing_zeros) [ia64 __GNUC__]: Don't use
	__builtin_ffs for now, doesn't seem to work.

	* configure.in: Establish CONFIG_SHELL to avoid a problem with
	AC_LIBTOOL_SYS_MAX_CMD_LEN on ia64-*-hpux*.

	* tune/speed.h (SPEED_ROUTINE_MPN_GCD_FINDA): Don't let calls to
	mpn_gcd_finda go dead.

	* mpn/generic/tdiv_qr.c: Inline mpn_rshift and MPN_COPY of 2 limbs.

2002-07-24  Kevin Ryde  <kevin@swox.se>

	* demos/primes.c: Use __GMP_PROTO and don't use signed, for the
	benefit of K&R.

	* demos/calc/calclex.l: Add <string.h> for strcmp.

	* mpn/ia64/invert_limb.asm: Use .rodata which works on ia64-*-hpux*
	and should be standard, rather than worrying about RODATA.

	* gmp.texi (Function Classes): Add cross references.
	(Integer Import and Export): Fix return value grouping.

	* mpn/lisp/gmpasm-mode.el (gmpasm-comment-start-regexp): Add // for
	ia64.  Add notes on what the various styles are for.

	* mpn/ia64/default.m4 (ASM_START): Define to empty, not dnl, so as not
	to kill text on the same line.
	(EPILOGUE_cpu): Force a newline after "#", so as not to suppress macro
	expansion in the rest of the EPILOGUE line.

2002-07-21  Kevin Ryde  <kevin@swox.se>

	* tune/speed.h: Fix some missing _PROTOs.

	* Makefile.am (DISTCLEANFILES): Add configure.lineno.

	* acinclude.m4 (GMP_C_DOUBLE_FORMAT): Define
	HAVE_DOUBLE_IEEE_BIG_ENDIAN and HAVE_DOUBLE_IEEE_LITTLE_ENDIAN in
	config.m4 too.
	* mpn/ia64/invert_limb.asm: Add big-endian data.

	* tests/mpz/t-jac.c (try_si_zi): Correction to "a" parameter type.

2002-07-20  Kevin Ryde  <kevin@swox.se>

	* mpz/bin_ui.c, mpz/jacobi.c, mpz/pprime_p.c, mpn/generic/divis.c:
	More care with long and mp_size_t parameters, for the benefit of K&R.

	* gmp-impl.h (invert_limb): Use parens around macro arguments.
	(mpn_invert_limb): Give prototype and define unconditionally.

	* gmp-impl.h (CACHED_ABOVE_THRESHOLD, CACHED_BELOW_THRESHOLD): New
	macros.
	* mpn/generic/sb_divrem_mn.c: Use them to help gcc let preinv code go
	dead when not wanted.

2002-07-17  Kevin Ryde  <kevin@swox.se>

	* tests/refmpz.c (refmpz_hamdist): Ensure mp_size_t parameters are
	that type, for the benefit of hpux ia64 bundled cc ABI=64.

	* configure.in (ia64*-*-hpux*): Need +DD64 in cc_64_cppflags to get
	the right headers for ansi2knr.

	* acinclude.m4 (GMP_TRY_ASSEMBLE, GMP_ASM_UNDERSCORE): Use $CPPFLAGS
	with $CCAS and when linking, as done by the makefiles.
	(GMP_ASM_X86_MMX, GMP_ASM_X86_SSE2): Show $CPPFLAGS in diagnostics.

	* gmp-impl.h (ieee_double_extract): Setup using HAVE_DOUBLE_IEEE_*.
	(GMP_UINT32): New define, 32 bit type for ieee_double_extract.
	* configure.in: Add AC_CHECK_SIZEOF unsigned.
	* configure.in, acinclude.m4 (GMP_IMPL_H_IEEE_FLOATS): Remove.
	(GMP_C_DOUBLE_FORMAT): Instead warn about unknown float here.

	* configure.in, acinclude.m4 (GMP_C_SIZES): Remove.
	* acinclude.m4 (GMP_INCLUDE_GMP_H_BITS_PER_MP_LIMB): Remove this
	scheme, not required.
	* configure.in (unsigned long, mp_limb_t): Run AC_CHECK_SIZEOF for
	these unconditionally, check mp_limb_t against gmp-mparam.h values.
	* gmp-impl.h (BYTES_PER_MP_LIMB, BITS_PER_MP_LIMB): Define based on
	SIZEOF_MP_LIMB_T if not provided by gmp-mparam.h.
	(BITS_PER_ULONG): Define here now.

	* gmp.texi (ABI and ISA): Add HP-UX IA-64 choices.
	(Random State Initialization): Typo in m2exp described for
	gmp_randinit_lc_2exp_size.
	(Formatted Output Functions): Clarify gmp_obstack_printf a bit.
	(Formatted Input Strings): Typo in %n summary.

	* mpz/inp_raw.c (NTOH_LIMB_FETCH): Use simple generic default, since
	endianness detection is now cross-compile friendly.
	* mpz/out_raw.c (HTON_LIMB_STORE): Ditto.

	* mpz/fib_ui.c: Nailify.
	* mpz/random.c: Nailify.

	* mpfr/acinclude.m4 (MPFR_CONFIGS): Patch by Vincent for an apparent
	float rounding gremlin on powerpc.

2002-07-15  Kevin Ryde  <kevin@swox.se>

	* Makefile.am (PRINTF_OBJECTS): Avoid ending in a backslash, hpux ia64
	make doesn't like that.

	* mpn/ia64/*.asm: Add .sptk to unconditional branches, add ";" after
	.mib etc, for the benefit of hpux.

	* configure.in (ia64*-*-*): Use ABI=64 on non-HPUX systems, for
	consistency.

	* gmp-impl.h (ieee_double_extract): Test __sparc__, used by gcc 3.1.
	Reported by nix@esperi.demon.co.uk.
	* mpfr/mpfr-math.h (_MPFR_NAN_BYTES etc): Ditto.

2002-07-13  Kevin Ryde  <kevin@swox.se>

	* mpn/powerpc32/rshift.asm: Rewrite, transformed from lshift.asm.

	* tune/tuneup.c (DIVEXACT_1_THRESHOLD, MODEXACT_1_ODD_THRESHOLD):
	Always zero for native mpn_divexact_1, mpn_modexact_1_odd.

	* gmp-h.in (__GMP_EXTERN_INLINE): Don't use this during configure,
	ie. __GMP_WITHIN_CONFIGURE, to avoid needing dependent routines.
	* acinclude.m4 (GMP_H_EXTERN_INLINE): Consequent changes.

	* gmp-impl.h, mpn/asm-defs.m4 (mpn_addmul_2, mpn_addmul_3,
	mpn_addmul_4): Add prototypes and defines.

	* gmp.texi (Number Theoretic Functions): Clarify return value.
	Reported by Peter Keller.

2002-07-10  Kevin Ryde  <kevin@swox.se>

	* configure.in, acinclude.m4 (GMP_PROG_LEX): Remove this in favour of
	AM_PROG_LEX, now ok when lex is missing.

	* longlong.h (count_leading_zeros) [pentiummmx]: Don't use __clz_tab
	variant under LONGLONG_STANDALONE.
	(count_trailing_zeros) [ia64 __GNUC__]: Use __builtin_ffs.

	* gmp-impl.h (popc_limb): Add an ia64 asm version.
	(DItype): Use HAVE_LONG_LONG to choose long long, avoiding _LONGLONG
	which is in gcc but means something unrelated in MS Visual C 7.0.
	Reported by David Librik.

	* mpz/divexact.c: Add an ASSERT that den divides num.

	* mpn/asm-defs.m4 (LDEF): New macro.
	(INT32, INT64): Use it.
	* mpn/pa32/*.asm: Use it.
	* mpn/pa32/README: Update notes on labels.

	* tests/refmpn.c, tests/tests.h, tests/t-bswap.c (ref_bswap_limb):
	Renamed from refmpn_bswap_limb.
	* tests/t-bswap.c: Add tests_start/tests_end for randomization.

	* tests/refmpn.c, tests/tests.h (ref_popc_limb): New function.
	* tests/t-popc.c: New file.
	* tests/Makefile.am: Add it.

	* mpn/ia64/invert_limb.asm: Use RODATA since ".section .rodata" is not
	accepted by ia64-*-hpux*.

	* acinclude.m4 (GMP_ASM_BYTE): New macro.
	(GMP_ASM_ALIGN_LOG, GMP_ASM_W32): Use it.
	(GMP_ASM_LABEL_SUFFIX): Use test compiles, not $host.
	(GMP_ASM_GLOBL): Ditto, and add .global for ia64-*-hpux*.
	(GMP_ASM_GLOBL_ATTR): Use GMP_ASM_GLOBL result, not $host.
	(GMP_ASM_LSYM_PREFIX): Allow any "a-z" nm symbol code, add ".text" to
	test program, required by ia64-*-hpux*.
	(GMP_ASM_LABEL_SUFFIX): Make LABEL_SUFFIX just the value, not a "$1:",
	the former being how it's currently being used in fact.

	* configure.in, acinclude.m4 (GMP_PROG_CC_WORKS_LONGLONG): New macro.
	* configure.in (ia64-*-hpux*): Add 32 and 64 bit ABI modes.

2002-07-06  Kevin Ryde  <kevin@swox.se>

	* tests/cxx/t-allfuns.cc: New file.
	* tests/cxx/Makefile.am: Add it.

	* mpz/clrbit.c, mpz/setbit.c: Only MPN_NORMALIZE if high limb changes
	to zero.  Use _mpz_realloc return value.

	* gmp.texi (Build Options, C++ Formatted Output, C++ Formatted Input):
	Cross reference to Headers and Libraries for libgmpxx stuff.
	(Low-level Functions): mpn_divexact_by3 result based on GMP_NUMB_BITS.
	mpn_set_str takes "unsigned char *", reported by Mark Sofroniou.
	(C++ Interface General): Describe linking with libgmpxx and libgmp.

2002-07-01  Kevin Ryde  <kevin@swox.se>

	* tune/tuneup.c, gmp-impl.h: Eliminate the array of thresholds in
	one(), tune just one at a time and let the callers hand dependencies.
	Eliminate the second_start_min hack, handle SQR_KARATSUBA_THRESHOLD
	oddities in tune_sqr() instead.

	* mpn/pa64/umul.asm, mpn/pa64/udiv.asm, mpn/asm-defs.m4, acconfig.h,
	longlong.h, tune/speed.c, tune/speed.h, tune/common.c, tune/many.pl,
	tests/devel/try.c: Introduce mpn_umul_ppmm_r and mpn_udiv_qrnnd_r
	rather than having variant parameter order for mpn_umul_ppmm and
	mpn_udiv_qrnnd on pa64.

	* gmp-h.in (mpz_export): Remove a spurious parameter name.
	* gmp-impl.h (mpn_rootrem): Use __MPN.

2002-06-29  Kevin Ryde  <kevin@swox.se>

	* longlong.h (udiv_qrnnd) [hppa32]: Remove mpn_udiv_qrnnd version, the
	general mechanism for that suffices.

	* mpf/inp_str.c: Fix returned count of chars read, reported by Paul
	Zimmermann.  Also fix a memory leak for invalid input.
	* tests/mpf/t-inp_str.c: New file.
	* tests/mpf/Makefile.am (check_PROGRAMS): Add it.

	* tests/devel/try.c (mpn_mod_34lsub1): Only exists for
	GMP_NUMB_BITS%4==0.
	(SIZE2_FIRST): Respect option_firstsize2 for "fraction" case.

	* mpn/generic/diveby3.c: Further nailifications.
	* gmp-impl.h (MODLIMB_INVERSE_3): Allow for GMP_NUMB_BITS odd.
	(GMP_NUMB_CEIL_MAX_DIV3, GMP_NUMB_CEIL_2MAX_DIV3): New constants.
	* tests/t-constants.c: Check them.

	* gmp-h.in (__GMP_CRAY_Pragma): New macro.
	(__GMPN_COPY_REST): Use it.
	* gmp-impl.h (CRAY_Pragma): Use it.

2002-06-25  Kevin Ryde  <kevin@swox.se>

	* mpz/import.c, mpz/export.c: Cast data pointer through "char *" in
	alignment tests, for the benefit of Cray vector systems.

	* configure.in (x86-*-*): Remove -march=pentiumpro check, seems ok
	with current code.
	* acinclude.m4 (GMP_GCC_MARCH_PENTIUMPRO, GMP_GCC_VERSION_GE): Remove
	macros, no longer needed

	* acinclude.m4 (GMP_ASM_RODATA): Remove temporary files.

	* configure.in (GMP_ASM_GLOBL_ATTR): Reposition to avoid duplication
	through AC_REQUIRE.

2002-06-23  Kevin Ryde  <kevin@swox.se>

	* tests/mpz/t-fib_ui.c (check_fib_table): Check table values, not just
	that they're non-zero.

	* acinclude.m4 (GMP_GCC_ARM_UMODSI): Match bad "gcc --version" output
	exactly, rather than parsing it with GMP_GCC_VERSION_GE.
	(GMP_ASM_UNDERSCORE): Use GLOBL_ATTR.

	* mpn/pa32/udiv.asm, mpn/pa32/hppa1_1/udiv.asm, mpn/pa64/udiv.asm:
	Renamed from udiv_qrnnd.asm, for consistency with other udiv's.
	* mpn/pa64/umul.asm: Renamed from umul_ppmm.asm likewise.
	* configure.in (hppa*-*-*): Update extra_functions.
	(NAILS_SUPPORT): Remove umul_ppmm, udiv_qrnnd, udiv_fp, udiv_nfp from
	nails-neutral list, no longer needed.

	* gmp-h.in (__DECC): Add notes on testing this for ANSI-ness.
	(__GMP_EXTERN_INLINE): Add static __inline for DEC C.
	(mpz_mod_ui): Move up to main section, it's still documented.

2002-06-22  Kevin Ryde  <kevin@swox.se>

	* mpz/jacobi.c, mpz/kronsz.c, mpz/kronuz.c, mpz/kronzs.c,
	mpz/kronzu.c: Allow for odd GMP_NUMB_BITS, tweak a few variable setups.
	* gmp-impl.h (JACOBI_STRIP_LOW_ZEROS): New macro.

	* mpn/generic/mod_34lsub1.c: Nailify.
	* tests/devel/try.c (CNST_34LSUB1): Nailify.
	* gmp-impl.h (ADDC_LIMB): New macro.

	* gmpxx.h (mpf_class::get_str): Make exponent mp_exp_t&, default
	base=10 and ndigits=0.
	(mpz_class::set_str, mpq_class::set_str, mpf_class::set_str): Add
	versions accepting "const char *".
	* mpfrxx.h (mpfr_class::get_str, mpfr_class::set_str): Ditto, and
	uncommenting set_str and operator=.
	* gmp.texi (C++ Interface Integers, C++ Interface Rationals)
	(C++ Interface Floats): Update.

	* gmp-impl.h (modlimb_invert): Merge the <=64bits and general versions.
	(const, signed): Move to near top of file, fixes --enable-alloca=debug
	on K&R.

	* gen-fib.c: New file, derived from mainline in mpn/generic/fib2_ui.c.
	* dumbmp.c (mpz_init_set_ui): New function.
	* Makefile.am, mpn/Makefile.am: Generate fib_table.h, mpn/fib_table.c.
	* gmp-impl.h: Use fib_table.h, add __GMP_DECLSPEC to __gmp_fib_table
	(for the benefit of tests/mpz/t-fib_ui.c).
	* mpn/generic/fib2_ui.c: Remove __gmp_fib_table and generating code.

	* Makefile.am: Add mp.h to BUILT_SOURCES, distclean all BUILT_SOURCES,
	use += more.

	* acinclude.m4 (GMP_ASM_M68K_INSTRUCTION, GMP_ASM_M68K_BRANCHES):
	Don't let "unknown" get into the cache variables.
	(GMP_ASM_TEXT): See what assembles, don't hard-code hpux and aix.
	(GMP_PROG_EXEEXT_FOR_BUILD): Add ,ff8 for RISC OS, per autoconf cvs.
	(GMP_PROG_CPP_FOR_BUILD): Restructure per AC_PROG_CPP, print correct
	result if CPP_FOR_BUILD overrides the cache variable.
	(GMP_PROG_CC_FOR_BUILD_WORKS): New macro split from
	GMP_PROG_CC_FOR_BUILD.  Allow for "conftest" default compiler output.
	* configure.in, acinclude.m4 (GMP_PROG_HOST_CC): Reinstate this,
	separating HOST_CC establishment from GMP_PROG_CC_FOR_BUILD.

	* configure.in (mpn_objs_in_libgmp): Move mpn/mp_bases.lo ...
	* Makefile.am (MPN_OBJECTS): ... to here, add $U, and arrange
	MPN_OBJECTS to be common between libgmp and libmp.

2002-06-20  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul_n.c (TOOM3_MUL_REC, TOOM3_SQR_REC): Don't check if
	basecase is to be invoked when *_TOOM3_THRESHOLD is more than 3 times
	the corresponding *_THRESHOLD.

2002-06-20  Kevin Ryde  <kevin@swox.se>

	* mpn/ia64/submul_1.c: Add missing TMP_DECL, TMP_MARK, TMP_FREE.
	Reported by Paul Zimmermann.

	* configure.in, acinclude.m4 (AC_DEFINE): Make templates read "Define
	to 1", for clarity as per autoconf.
	* acinclude.m4 (GMP_OPTION_ALLOCA): Group WANT_TMP templates.

2002-06-20  Gerardo Ballabio <gerardo.ballabio@unimib.it>

	* gmpxx.h, mpfrxx.h: Remove mpz_classref, let mpq_class::get_num and
	mpq_class::get_den return mpz_class& as per the documentation.
	Reported by Roberto Bagnara.

2002-06-18  Kevin Ryde  <kevin@swox.se>

	* tests/rand/t-lc2exp.c: New file.
	* tests/rand/Makefile.am: Add it, and use tests/libtests.la.

	* randraw.c (lc): Pad seed==0 case with zero limbs, return same
	(m2exp+1)/2 bits as normal, right shift "c" result as normal.

	* configure.in: Don't bother with line numbers in some diagnostics.
	(*-*-mingw*): Use -mno-cygwin if it works, suggested by delta trinity.

	* tests/mpz/Makefile.am, tests/mpq/Makefile.am,
	tests/misc/Makefile.am, (CLEANFILES): Set to *.tmp for test program
	temporaries, to get t-scanf.tmp and reduce future maintenance.

2002-06-16  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/get_str.c (mpn_dc_get_str): Pass scratch memory area in
	new `tmp' parameter.  Trim allocation needs by reusing input parameter.

2002-06-15  Torbjorn Granlund  <tege@swox.com>

	* mpn/sparc32/v9/udiv.asm: New file.

2002-06-15  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_GCC_VERSION_GE): Correction to recognising mingw
	gcc 3.1 version number.  Reported by Jim Fougeron.

	* configure.in (AC_PROVIDE_AC_LIBTOOL_WIN32_DLL): New define, to make
	AC_LIBTOOL_WIN32_DLL work with autoconf 2.53.

	* acinclude.m4 (GMP_C_SIZES): Establish BITS_PER_MP_LIMB as a value,
	not an expression, for the benefit of the gen-bases invocation.

	* config.guess (CC_FOR_BUILD): Try c99, same as configfsf.guess.

2002-06-15  Paul Zimmermann  <Paul.Zimmermann@loria.fr>

	* mpfr/set_q.c: Allow for 1 bit numerator or denominator.

2002-06-14  Kevin Ryde  <kevin@swox.se>

	* configure.in (AC_C_BIGENDIAN): Use new style action parameters.

	* randlc2x.c: Allow for a<0, allow for c>=2^m2exp.
	* randraw.c (lc): Allow for a==0.

	* mpn/sparc32/udiv.asm: Renamed from udiv_fp.asm.  Don't know if float
	is the best way for v7, but it's what configure has chosen since gmp 3.
	* configure.in (*sparc*-*-* ABI=32): extra_functions="udiv" for all,
	in particular sparc32/v8/udiv.asm is faster (on ultrasparc2) than
	udiv_fp previously used for v9 chips.

	* gen-bases.c: New file, derived from mpn/mp_bases.c.
	* dumbmp.c: New file, mostly by Torbjorn, some by me.
	* configure.in, acinclude.m4 (GMP_PROG_CC_FOR_BUILD,
	GMP_PROG_CPP_FOR_BUILD, GMP_PROG_EXEEXT_FOR_BUILD,
	GMP_C_FOR_BUILD_ANSI, GMP_CHECK_LIBM_FOR_BUILD): New macros.
	(GMP_PROG_HOST_CC): Remove, superceded by GMP_PROG_CC_FOR_BUILD.
	* Makefile.am: Run gen-bases to create mp_bases.h and mpn/mp_bases.c.
	* gmp-impl.h: Use mp_bases.h.
	* mpn/mp_bases.c: Remove file.
	* mpn/Makefile.am: mp_bases.c now in nodist_libmpn_la_SOURCES.

	* tests/mpz/t-cmp_d.c (check_one_2exp): Use volatile to force to
	double, fixes gcc 3.1 with -O4.  Reported by Michael Lee.
	* configure.in (AC_C_VOLATILE): New macro.

	* tests/misc/t-scanf.c: (fromstring_gmp_fscanf): Add missing va_end.
	Don't mix varargs and fixed args functions, not good on x86_64.
	Reported by Marcus Meissner.

	* Makefile.am (EXTRA_DIST): Remove mpfr/README, now in mpfr/Makefile.in

	* configure, config.in, INSTALL.autoconf: Update to autoconf 2.53.
	* */Makefile.in, install-sh, mdate-sh, missing, aclocal.m4, configure:
	Update to automake 1.6.1.
	* configfsf.guess, configfsf.sub: Update to 2002-05-29.

2002-06-12  Kevin Ryde  <kevin@swox.se>

	* acinclude.m4 (GMP_GCC_VERSION_GE): Recognise mingw gcc 3.1 version.
	(GMP_PROG_CC_WORKS): Allow for a_out.exe, as per autoconf.
	(GMP_GCC_NO_CPP_PRECOMP, GMP_ASM_UNDERSCORE): Ditto, plus a.exe.

2002-06-09  Torbjorn Granlund  <tege@swox.com>

	* randraw.c (lc): Remove broken ASSERT_ALWAYS.

	* mpn/x86: Update gmp-mparam.h files with current measures *_THRESHOLD
	values.
	* mpn/x86/p6/mmx/gmp-mparam.h: New file.

2002-06-09  Kevin Ryde  <kevin@swox.se>

	* mpn/x86/*/gmp-mparam.h (USE_PREINV_DIVREM_1): Add tuned settings.

	* acconfig.h (HAVE_NATIVE_mpn_preinv_divrem_1): New template.

	* tests/refmpn.c, tests/tests.h (refmpn_chars_per_limb,
	refmpn_big_base): New functions.
	* tests/mpn/t-mp_bases.c: Use them, and don't test big_base_inverted
	unless it's being used.

	* gmp.texi (Notes for Particular Systems): Using Microsoft C with DLLs.
	(Known Build Problems): Notes on MacOS and GCC.
	(Integer Logic and Bit Fiddling): Use ULONG_MAX for maximum ulong.
	(Low-level Functions): mpn_get_str accepts base==256.
	(Formatted Output Functions): Note output is not atomic.
	(Internals): Note mp_size_t for limb counts.

	* mp-h.in, gmp-h.in (mp_ptr, mp_srcptr, mp_size_t, mp_exp_t): Remove
	these types from mp.h, not needed.

	* mpfr/tests/tadd.c, mpfr/tests/tmul.c (check): Apply a hack to the
	parameter order to make sparc gcc 2.95.2 happy.

	* doc/configuration: Notes on bootstrapping.

2002-06-08  Kevin Ryde  <kevin@swox.se>

	* mpfr/tests/tsqrt.c, mpfr/tests/tsqrt_ui.c: Suppress tests if sqrt is
	not affected by mpfr_set_machine_rnd_mode.

	* mpfr/mul_2si.c: Workaround a mips gcc 2.95.3 bug under -O2 -mabi=n32.

	* configure.in (alphev56): Fix to use ev5 path.

2002-06-06  Kevin Ryde  <kevin@swox.se>

	* gmp-h.in: Use __gmp_const not const, in a number of places.

	* configure.in (sparc): Use ABI=32 instead of ABI=standard on v7 and
	v8, for consistency with v9 choices.
	(sparc64): Restrict GMP_ASM_SPARC_REGISTER to ABI=64.
	(x86): Move MMX $path munging to before printout.
	(CCAS): Move upward to support this.

	* gmp-impl.h (modlimb_invert): Merge macros for specific limb sizes,
	add a version for arbitrary limb size, use GMP_NUMB_BITS.
	(modlimb_invert, MODLIMB_INVERSE_3): Fix comments to say GMP_NUMB_BITS.

	* gmp-h.in (__GMP_LIKELY, __GMP_UNLIKELY): New macros.
	(mpz_getlimbn, mpz_perfect_square_p, mpz_popcount): Use them, make the
	fetch or mpn call likely, unconditionally calculate the alternative so
	as to avoid an "else" clause.
	* gmp-impl.h (LIKELY, UNLIKELY): Aliases.

	* configure.in, mpfr/tests/Makefile.am: Add $LIBM to $LIBS for
	MPFR_CONFIGS so it detects fesetround, and let it go through to
	$MPFR_LIBS.
	* mpfr/rnd_mode.c: Use gmp-impl.h to get MPFR_HAVE_FESETROUND.

	* tests/mpz/t-sizeinbase.c: Disable fake bits test, such pointer
	setups are bogus and have been seen failing on hppa.

	* tests/misc.c, tests/refmpz.c, tests.tests.h, tests/mpz/t-cong.c:
	Rename mpz_flipbit to refmpz_combit and move from misc.c to refmpz.c.

2002-06-05  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-powm_ui.c Print proper routine name in error message.

2002-06-03  Kevin Ryde  <kevin@swox.se>

	* tune/time.c, tune/freq.c, tune/speed.h: Add powerpc mftb support.
	(FREQ_MEASURE_ONE): Move to speed.h, fix tv_sec factor.
	(freq_measure): Use for mftb measuring too.
	* tune/powerpc.asm, tune/powerpc64.asm: New files.
	* configure.in, tune/Makefile.am: Add them.

	* gmp-impl.h (popc_limb): Add versions for Cray and fallback for
	arbitrary limb size.

	* mpn/sparc32/sparc-defs.m4: New file.
	* configure.in (sparc*-*-*): Use it.
	* acinclude.m4 (GMP_ASM_SPARC_REGISTER): New macro.
	* configure.in (sparc64): Use it.  Also, use -Wc,-m64 for linking.
	* mpn/sparc64/add_n.asm, mpn/sparc64/addmul_1.asm,
	mpn/sparc64/copyd.asm, mpn/sparc64/copyi.asm, mpn/sparc64/lshift.asm,
	mpn/sparc64/mul_1.asm, mpn/sparc64/rshift.asm,
	mpn/sparc64/sqr_diagonal.asm, mpn/sparc64/sub_n.asm,
	mpn/sparc64/submul_1.asm: Use REGISTER for .register.

2002-06-01  Kevin Ryde  <kevin@swox.se>

	* mpz/powm_ui.c: Fix for result range in certain circumstances.

	* mpn/x86/k6/diveby3.asm: Speedup to 10 c/l, same as divexact_1.
	Anomaly pointed out by Alexander Kruppa.

2002-05-31  Torbjorn Granlund  <tege@swox.com>

	* mpz/export.c: Cast pointer via `unsigned long' when checking
	alignment to avoid compiler warnings.

2002-05-29  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (BSWAP_LIMB): Versions for m68k, powerpc, and arbitrary
	limb size.
	* configure.in, acconfig.h (HAVE_HOST_CPU_FAMILY_m68k): New define.

2002-05-27  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/mul_basecase.c: Improve MAX_LEFT handling, returning
	when possible.  Add code for mpn_addmul_5 and mpn_addmul_6.

2002-05-25  Kevin Ryde  <kevin@swox.se>

	* tune/tuneup.c: Misc nailifications, and disable preinv thresholds
	with nails.
	* tune/speed.h: Use GMP_NUMB_HIGHBIT with mpn_sb_divrem_mn and
	mpn_divrem_2.
	* mpz/powm.c (redc): Nailify q.

	* tests/mpn/t-scan.c: Reduce the amount of testing, to go faster.

2002-05-23  Torbjorn Granlund  <tege@swox.com>

	* Version 4.1 released.

	* mpn/alpha/ev6/nails/gmp-mparam.h: New file.

	* tests/devel/add_n.c (refmpn_add_n): Nailify.
	* tests/devel/sub_n.c (refmpn_sub_n): Nailify.
	* tests/devel/addmul_1.c (refmpn_addmul_1): Nailify.
	* tests/devel/submul_1.c (refmpn_submul_1): Nailify.

	* mpn/alpha/ev6/nails/add_n.asm: New file.
	* mpn/alpha/ev6/nails/sub_n.asm: New file.
	* mpn/alpha/ev6/nails/mul_1.asm: New file.
	* mpn/alpha/ev6/nails/submul_1.asm: New file.

2002-05-22  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/ev6/nails/addmul_1.asm: New file.

	* mpz/inp_str.c (mpz_inp_str_nowhite): Nailify.

	* mpn/generic/mul_basecase.c: Update pointers before conditional
	MAX_LEFT break statements.

2002-05-21  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-gcd.c: Test mpz_gcd_ui.

	* mpz/lcm_ui.c: Nailify.

	* mpz/gcd_ui.c: Nailify.  Make it work as documented, allowing
	NULL to be passed for result parameter.  Fix gcd(0,0) case.

	* mpz/set_str.c: Nailify.

	* randlc2x.c (gmp_randinit_lc_2exp): Nailify.

	From Jakub Jelinek:
	* longlong.h (add_ssaaaa,sub_ddmmss) [64-bit sparc]:
	Make it actually work.

2002-05-18  Torbjorn Granlund  <tege@swox.com>

	* mpf/ui_div.c: Shut up compiler warning.

	* mpn/generic/mul_basecase.c: Use mpn_addmul_2, mpn_addmul_3, and
	mpn_addmul_4, as available.

	* mpn/alpha/ev6/nails/addmul_2.asm: Adjust NAILS_SUPPORT decls.
	* mpn/alpha/ev6/nails/addmul_3.asm: Likewise
	* mpn/alpha/ev6/nails/addmul_4.asm: Likewise.

	* configure.in (*-cray-unicos*): Back again to -hscalar0.
	(gmp_mpn_functions_optional): Add mul_3, mul_4, addmul_2, addmul_3,
	and addmul_4.
	* acconfig.h: Add #undefs for new optional mpn functions.

2002-05-18  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Integer Import and Export): Mention Cray unfilled words.

	* mpz/set_d.c, mpq/set_d.c: Use LIMBS_PER_DOUBLE for the output of
	__gmp_extract_double.  Reported by Henrik Johansson.

2002-05-17  Torbjorn Granlund  <tege@swox.com>

	* mpn/alpha/ev6/nails/addmul_2.asm: New file.
	* mpn/alpha/ev6/nails/addmul_3.asm: New file.
	* mpn/alpha/ev6/nails/addmul_4.asm: New file.

	* mpn/generic/dump.c: Rewrite and nailify.

2002-05-16  Kevin Ryde  <kevin@swox.se>

	* mpfr/Makefile.am (EXTRA_DIST): Add BUGS file.

2002-05-15  Torbjorn Granlund  <tege@swox.com>

	* configure.in (*-cray-unicos*): Remove -hscalar0, add -hnofastmd
	as workaround for compiler bug.
	(mips64*-*-*): Pass just -O1 to cc, to work around compiler bug.

2002-05-14  Torbjorn Granlund  <tege@swox.com>

	* configure.in (*-cray-unicos*): Pass -hscalar0 to work around
	compiler bug for mpz/import.c.

2002-05-11  Torbjorn Granlund  <tege@swox.com>

	* mpz/import.c: Cast pointer via `unsigned long' when checking
	alignment to avoid compiler warnings.

	* mpn/generic/rootrem.c: Adjust allocation of qp temporary area.

2002-05-09  Kevin Ryde  <kevin@swox.se>

	* mpz/import.c: Corrections to size store, special case tests, and
	general case ACCUMULATE.
	* tests/mpz/t-import.c, tests/mpz/t-export.c: More test data.

2002-05-09  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/rootrem.c: Use temp space for root, copy value in place
	before returning.
	* mpz/root.c: Don't allocate extra limb for root value.
	* mpz/perfpow.c: Undo last change.

2002-05-08  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h (powerpc BSWAP_LIMB_FETCH): Rename local variable to make
	it not clash with caller.

	* mpn/generic/rootrem.c: New file.
	* configure.in (gmp_mpn_functions): Add rootrem and pow_1.
	* mpn/Makefile.am (nodist_libdummy_la_SOURCES): Add rootrem.c and
	pow_1.c
	* gmp-impl.h (mpn_rootrem): Add declaration.
	* mpz/perfpow.c: Amend allocations for mpn_rootrem requirements.
	* mpz/root.c: Rewrite to use mpn_rootrem.

2002-05-08  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (MUL_KARATSUBA_THRESHOLD etc): Remove forced nail values.

	* mpf/fits_u.h, mpf/fits_s.h, tests/mpf/t-fits.c: Ignore fraction
	part, making the code match the documentation.

	* gmpxx.h (struct __gmp_binary_minus): Use mpz_ui_sub.

2002-05-07  Kevin Ryde  <kevin@swox.se>

	* mpn/powerpc32/README: New file.

	* mpz/root.c: Use unsigned long with mpz_sub_ui not mp_limb_t.

	* tune/README: Misc updates including sparc32/v9 smoothness, low res
	timebase, and mpn_add_n operand overlaps.
	* tune/many.pl: Add udiv.asm support.

	* gmp.texi (Build Options): A couple of --build better as --host.
	(Known Build Problems, Notes for Package Builds): Add DESTDIR problem.
	(Compatibility with older versions): Compatible with 4.x versions.
	(Converting Integers): Remove mpz_get_ui + mpz_tdiv_q_2exp decompose.
	(Integer Import and Export): New section.
	(Miscellaneous Integer Functions): Clarify mpz_sizeinbase returns 1
	for operand of 0.
	(Language Bindings): Add GNU Pascal.
	(Low-level Functions): Add GMP_NUMB_MAX.

	* tests/mpz/t-import.c, tests/mpz/t-export.c, tests/mpz/t-get_d.c:
	New tests.
	* tests/mpz/Makefile.am: Add them.

	* mpz/import.c, mpz/export.c: New files.
	* Makefile.am, mpz/Makefile.am, gmp-h.in: Add them.

	* gmp-h.in, gmp-impl.h (GMP_NUMB_MAX): Move to gmp.h.
	* gmp-impl.h (CNST_LIMB): Add cast to mp_limb_t to ensure unsigned.
	(CRAY_Pragma, MPN_REVERSE, MPN_BSWAP, MPN_BSWAP_REVERSE,
	ASSERT_ALWAYS_LIMB, ASSERT_ALWAYS_MPN): New macros.
	(MPZ_CHECK_FORMAT): Use ASSERT_ALWAYS_MPN.

2002-05-07  Torbjorn Granlund  <tege@swox.com>

	* mpz/aors_ui.h: Nailify.

	* tests/mpz/t-addsub.c: New file.
	* tests/mpz/Makefile.am (check_PROGRAMS): Add t-addsub.

	* mpz/ui_sub.c: New file.
	* mpz/Makefile.am (libmpz_la_SOURCES): Add ui_sub.c.
	* Makefile.am (MPZ_OBJECTS): Ditto.
	* gmp-h.in (mpz_ui_sub): Add declaration.

	* gmp-impl.h (MPZ_REALLOC): Rewrite to allow the use of _mpz_realloc
	return value.

	* gmp-h.in (mpn_pow_1): Add declaration.

	* mpn/generic/pow_1.c: Handle exp <= 1.  Reverse rp/tp parity scheme
	for bn == 1 arm.

	* Rename MP_LIMB_T_HIGHBIT => GMP_LIMB_HIGHBIT.

2002-05-06  Torbjorn Granlund  <tege@swox.com>

	* demos/pexpr.c (main): Don't call mpz_sizeinbase with negative base.

	* randraw.c (lc): Remove an unused variable.

	* mpn/generic/get_str.c: Clarify an algorithm description.

	* tests/mpf/t-trunc.c: Nailify.
	* tests/mpf/t-set_si.c: Disable for nails.

	* mpf/cmp_si.c: Nailify.
	* mpf/cmp_ui.c: Nailify.
	* mpf/div.c: Nailify.
	* mpf/div_2exp.c: Nailify.
	* mpf/div_ui.c: Nailify.
	* mpf/eq.c: Nailify.
	* mpf/get_d.c: Nailify.
	* mpf/get_d_2exp.c: Nailify.
	* mpf/get_si.c: Nailify.
	* mpf/get_str.c: Nailify.
	* mpf/get_ui.c: Nailify.
	* mpf/mul_2exp.c: Nailify.
	* mpf/random2.c: Nailify.
	* mpf/set_q.c: Nailify.
	* mpf/set_si.c: Nailify.
	* mpf/set_str.c: Nailify.
	* mpf/set_ui.c: Nailify.
	* mpf/sub.c: Nailify.
	* mpf/ui_div.c: Nailify.
	* mpf/ui_sub.c: Nailify.
	* mpf/urandomb.c: Nailify.

	* gmp-impl.h (__GMPF_BITS_TO_PREC, __GMPF_PREC_TO_BITS): Nailify.

	* mpz/get_si.c: Misc variable name changes.

	* mpf/fits_u.h: Rewrite - nailify.
	* mpf/fits_s.h: Likewise.

	* mpz/mod.c: Disambiguate if-statement with extra {}.

	* mpf/int_p.c: Fix type of size variables.
	* mpf/get_ui: Likewise.
	* mpf/get_si: Likewise.
	* mpq/equal.c: Likewise.
	* mpq/get_d.c: Likewise.
	* mpz/cmp_d.c: Likewise.
	* mpz/cmpabs_d.c: Likewise.
	* mpz/divis_2exp.c: Likewise.
	* mpz/kronuz.c: Likewise.
	* mpz/kronzu.c: Likewise.
	* mpz/kronzs.c: Likewise.
	* mpz/kronsz.c: Likewise.
	* mpz/scan0.c: Likewise.
	* mpz/scan1.c: Likewise.
	* mpz/tstbit.c: Likewise.
	* mpz/cong_2exp.c: Likewise.
	* mpz/divis.c: Likewise.

2002-05-04  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/gcd.c: Additional nailify changes.

2002-05-04  Kevin Ryde  <kevin@swox.se>

	* gmp-h.in (__GNU_MP_VERSION): Set to 4.1.
	* Makefile.am (-version-info): Bump for new release.

2002-04-30  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/divrem_1.c: Additional nailify changes.
	* mpn/generic/mod_1.c: Likewise.

	* tests/mpq/t-get_d.c: Print floats with all 16 digits.

	* mpq/get_d.c: Nailify.

	* tests/mpq/t-set_f.c: Disable for nails.

	* mpz/get_d.c: Nailify.

	* gmp-impl.h (LIMBS_PER_DOUBLE, MP_BASE_AS_DOUBLE): Nailify.

	* gmp-h.in (__GMPZ_FITS_UTYPE_P): Cast maxval to before shifting it.

	* extract-dbl.c: Nailify.

2002-04-29  Torbjorn Granlund  <tege@swox.com>

	* mpq/md_2exp.c (mord_2exp): Nailify.

	* mpq/cmp_ui.c: Nailify.

	* mpq/cmp.c (mpq_cmp): Nailify.

	* mpn/generic/gcd.c: Nailify.  GNUify code layout.

	* mpn/generic/gcdext.c: Nailify.  Misc changes.

	* tests/mpz/t-sqrtrem.c: Let argv[1] mean # of repetitions.
	* tests/mpz/t-gcd.c: Likewise.

	* mpz/gcd.c: Nailify.

	* mpn/generic/random.c: Nailify.

	* gmp-impl.h (modlimb_invert): Nailify.

2002-04-27  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/gcdext.c (div2): Remove qh parameter.
	(mpn_gcdext): Streamline double-limb code.
	Move GCDEXT_THRESHOLD check to after initial division.

2002-04-27  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (JACOBI_MOD_OR_MODEXACT_1_ODD): Allow for odd
	GMP_NUMB_BITS.

	* tune/time.c (sgi_works_p): Allow for 64-bit counter, and fix
	SGI_CYCLECNTR_SIZE handling.

	* demos/expr/exprfr.c: Add nan and inf constants.
	* demos/expr/t-expr.c: Exercise them.

2002-04-26  Torbjorn Granlund  <tege@swox.com>

	* mpz/cmp_ui.c: Fix overflow conditions for nails.

	* gmp-h.in (mpz_get_ui): Fix typo from last change.

	* mpz/n_pow_ui.c: Adjust allocation for nails.
	(GMP_NUMB_HALFMAX): Renamed from MP_LIMB_T_HALFMAX.
	Fix umul_ppmm invocation for for nails.

2002-04-24  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/gcdext.c: Simplify by using mpn_tdiv_qr instead of
	mpn_divmod.

2002-04-24  Kevin Ryde  <kevin@swox.se>

	* configure.in (*-*-cygwin*): Give a sensible default command line
	limit, to avoid blowups reported by Jim Fougeron on windows 9x.
	(--enable-nails): Make the default 2, since mp_bases has data for that.

	* mpfr/mpfr-math.h (__mpfr_nan): Use a "double" for the bytes, to
	avoid a mis-conversion on alpha gcc 3.0.2.
	(_MPFR_INFP_BYTES, _MPFR_INFM_BYTES): Should be a zero mantissa.

2002-04-23  Torbjorn Granlund  <tege@swox.com>

	* mpz/dive_ui.c: Fix typo.

	* mpz/fits_s.h: Rewrite.

	* mpz/jacobi.c: Nailify.
	* mpz/kronuz.c: Additional nailify changes.
	* mpz/kronsz.c: Likewise.

2002-04-23  Kevin Ryde  <kevin@swox.se>

	* demos/expr/Makefile.am (LDADD): Add $(LIBM) for the benefit of mpfr.

	* mpz/divis_ui.c, mpz/cong_ui.c: Nailify.
	* mpn/generic/bdivmod.c, mpz/divexact.c, mpz/dive_ui.c: Nailify.
	* mpn/generic/sb_divrem_mn.c, mpn/generic/divrem.c,
	mpn/generic/divrem_2.c: Nailify ASSERTs.
	* mpn/x86/k6/mmx/logops_n.asm, mpn/x86/k6/mmx/com_n.asm: Nailify.
	* mpz/inp_raw.c, mpz/out_raw.c: Nailify.
	* mpz/kronzu.c, mpz/kronuz.c, mpz/kronzs.c, mpz/kronsz.c: Nailify.
	* mpn/generic/divis.c, mpz/cong.c, mpz/cong_2exp.c: Nailify.
	* gmp-impl.h (NEG_MOD): Nailify.

	* gmp-impl.h, mpn/mp_bases.c: Add back GMP_NUMB_BITS==30 bases data.

	* mpfr/get_d.c: Patch from Paul to avoid problem with constant folding
	in gcc on OSF.

	* mpn/lisp/gmpasm-mode.el: Remove mention of defunct LF macro.

2002-04-22  Torbjorn Granlund  <tege@swox.com>

	* demos/pexpr.c: Handle "binomial" operator.

	* mpz/cmp_ui.c: Move assignments of `up' out of conditionals.

	* mpn/generic/gcdext.c: Fix fencepost error in STAT code.

	* gmp-impl.h (mpn_com_n): Nailify.

	* tests/mpz/t-cdiv_ui.c: New file.
	* tests/mpz/Makefile.am (check_PROGRAMS): Add t-cdiv_ui.
	* mpz/cdiv_qr_ui.c: Nailify.
	* mpz/cdiv_q_ui.c: Nailify.
	* mpz/cdiv_r_ui.c: Nailify.
	* mpz/cdiv_ui.c: Nailify.

	* tests/misc/t-printf.c (CHECK_N): Add cast to allow `char' to be an
	unsigned type.
	* tests/misc/t-scanf.c: Likewise.

	* mpz/mul_i.h: Rework nails code to handle parameter overlap.

	* tests/mpz/t-set_f.c: Disable for nails.

2002-04-21  Torbjorn Granlund  <tege@swox.com>

	* mpz/set_si.c: Add cast to support LONG_LONG_LIMB.
	* mpz/iset_si.c: Likewise.

	* mpz/bin_ui.c: Nailify.
	* mpz/bin_uiui.c: Nailify.

	* mpz/cmpabs_ui.c: Nailify.

	* tests/mpz/t-aorsmul.c: Nailify.
	* mpz/aorsmul_i.c (mpz_addmul_ui, mpz_submul_ui): Nailify better.

2002-04-20  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-fdiv_ui.c: Check mpz_fdiv_ui.
	* tests/mpz/t-tdiv_ui.c: Check mpz_tdiv_ui.

	* mpz/tdiv_ui.c: Rewrite nails code.
	* mpz/fdiv_ui.c: Nailify.

	* tests/mpz/t-tdiv_ui.c: Check returned remainders.
	* tests/mpz/t-fdiv_ui.c: Merge in recent t-tdiv_ui changes.

	* mpz/tdiv_q_ui.c: Remove spurious TMP_* calls.

	* mpz/fdiv_qr_ui.c: Nailify.
	* mpz/fdiv_q_ui.c: Nailify.
	* mpz/fdiv_r_ui.c: Nailify.

	* mpz/get_si.c: Misc nailify changes to shut up compiler warnings.

	* mpz/ui_pow_ui.c: Fix typo in last change.

2002-04-20  Kevin Ryde  <kevin@swox.se>

	* tests/misc/t-printf.c, tests/misc/t-scanf.c: Check all %n types.

	* mpn/x86/k7/mmx/divrem_1.asm, mpn/x86/p6/mmx/divrem_1.asm
	(mpn_preinv_divrem_1): New entrypoint.
	(mpn_divrem_1): Avoid a branch when testing high<divisor.
	* mpn/asm-defs.m4: Add define_mpn(preinv_divrem_1).
	* configure.in: Allow divrem_1.asm to provide mpn_preinv_divrem_1.

	* gmp-impl.h [nails]: Add #undefs of MUL_KARATSUBA_THRESHOLD etc, to
	override CPU gmp-mparam.h.  Remove JACOBI_BASE_METHOD override since
	it's nails-neutral.

	* tests/mpn/t-mp_bases.c: New file.
	* tests/mpn/Makefile.am (check_PROGRAMS): Add it.
	* tests/t-constants.c: Move MP_BASES constants checks to it.

	* mpn/mp_bases.c: Fix big_base_inverted values for nails.
	* gmp-impl.h (MP_BASES_BIG_BASE_INVERTED_10,
	MP_BASES_NORMALIZATION_STEPS_10): Fix nails values.
	(MP_BASES_*): Remove GMP_NUMB_BITS == 30 data.

	* mpn/x86/pentium/com_n.asm, mpn/x86/pentium/logops_n.asm: Add
	NAILS_SUPPORT indicators.

	* configure.in: Grep for NAILS_SUPPORT in cpu-specific code, and look
	in "nails" subdirectories, print path used.
	* mpn/asm-defs.m4 (NAILS_SUPPORT): New macro.

	* mpfr/mpfr-test.h: Include config.h, for the benefit of test programs
	not using gmp-impl.h.

2002-04-19  Torbjorn Granlund  <tege@swox.com>

	* tests/mpz/t-scan.c: Nailify.

	* mpz/tdiv_qr_ui.c: Nailify.
	* mpz/tdiv_q_ui.c: Nailify.
	* mpz/tdiv_r_ui.c: Nailify.
	* mpz/tdiv_ui.c: Nailify.

	* mpz/cmp_ui.c: Nailify.

	* mpz/ui_pow_ui.c: Misc nailify changes to shut up compiler warnings.

	* mpz/scan0.c: Nailify.
	* mpz/scan1.c: Nailify.

	* tests/mpz/t-sizeinbase.c (mpz_fake_bits): Nailify.

2002-04-18  Torbjorn Granlund  <tege@swox.com>

	* mpz/aorsmul_i.c: Nailify.

	* mpz/cmp_si.c: Nailify (botched).

	* mpz/ui_pow_ui.c: Nailify.

	* gmp-h.in (__GMPZ_FITS_UTYPE_P): Nailify.

	* mpz/fits_s.h: Nailify.

	* tests/mpz/bit.c (check_tstbit): Nailify.

	From Paul Zimmermann:
	* mpn/generic/sqrtrem.c: Nailify.

	* mpz/n_pow_ui.c: Nailify.

	* mpz/cfdiv_r_2exp.c: Nailify.

	* randraw.c (lc): Undo: Let mpn_rshift put result in place to avoid
	extra MPN_COPY.

2002-04-17  Torbjorn Granlund  <tege@swox.com>

	* mpz/clrbit.c: Add two GMP_NUMB_MASK masks after addition.

	* mpn/generic/random2.c (LOGBITS_PER_BLOCK): Decrease to 4.

	* gmp-impl.h (nail DIV_DC_THRESHOLD): Decrease to 50 to allow fast
	division.

	* mpn/generic/random2.c: Nailify.

	* mpz/fac_ui.c: Nailify.

	* mpz/mul_i.h: #if ... #endif code block to shut up gcc warnings.

	* mpn/generic/sqrtrem.c: Adopt to GNU coding standards.
	(mpn_dc_sqrtrem): New name for mpn_dq_sqrtrem.
	Partial nailification.

	* configure.in: As a temporary hack, clear extra_functions for nails
	builds.

	* gmp-h.in (mpz_get_ui): #if ... #endif else code block to shut up gcc
	warnings.

2002-04-17  Kevin Ryde  <kevin@swox.se>

	* texinfo.tex: Update to 2002-03-26.08 per texinfo 4.2.
	* gmp.texi: Must have @top in @ifnottex (or @contents doesn't come out
	in one run).

	* mpn/generic/scan0.c, mpn/generic/scan1.c: Nailify.

	* tests/mpn/t-scan.c: New file.
	* tests/mpn/Makefile.am (check_PROGRAMS): Add it.

	* tests/refmpn.c, tests/tests.h (refmpn_tstbit): Use unsigned long for
	bit index.
	(refmpn_setbit, refmpn_clrbit, refmpn_scan0, refmpn_scan1): New
	functions.

	* mpfr/cmp_ui.c (mpfr_cmp_si_2exp): Fix b==0 i!=0 case.

2002-04-17  Gerardo Ballabio <gerardo.ballabio@unimib.it>

	* gmpxx.h, mpfrxx.h: Remove mpfr_class bool combinations, remove
	mpfr_class::get_str2, use mp_rnd_t for rounding modes, use
	8*sizeof(double) for mpfr_t's holding doubles.

2002-04-17  Torbjorn Granlund  <tege@swox.com>

	* mpz/powm.c: Nailify.
	* mpz/powm_ui.c: Nailify.

2002-04-16  Torbjorn Granlund  <tege@swox.com>

	* mpz/hamdist.c: Nailify.
	* tests/misc.c (urandom): Nailify.

	* mpz/get_si.c: Nailify.
	* gmp-h.in (mpz_get_ui): Nailify.  Streamline (and probably upset
	memory checkers).

	* gmp-impl.h (mp_bases[10] values): Add versions for GMP_NUMB_BITS
	being 28, 60, and 63.
	* mpn/mp_bases.c: Add tables for GMP_NUMB_BITS being 28, 60, and 63.

	* mpz/iset_si.c: Nailify.
	* mpz/iset_ui.c: Nailify

	* tests/mpz/convert.c (main): Print test number in error message.

	* mpn/generic/get_str.c (mpn_sb_get_str): Shift up `frac' into nails
	field after bignum division.

2002-04-16  Kevin Ryde  <kevin@swox.se>

	* gmp-h.in, gmp-impl.h (GMP_NAIL_MASK): Move to gmp.h.

	* gmp.texi: Use @documentdescription and @copying, per texinfo 4.2.
	(Low-level Functions): Clarify mpn_gcd overlap requirements, rewrite
	mpn_set_str description, add nails section.
	(C++ Interface General): Remove bool from types that mix with classes.
	(Language Bindings): Add STklos, GNU Smalltalk, Regina.
	(Binary to Radix, Radix to Binary): Describe new code.
	(Assembler Cache Handling): More notes, mostly by Torbjorn.

	* macos/configure (%vars): Remove __GMP from substitutions, per change
	to main configure.

	* mpn/generic/dive_1.c: Nailify.
	* mpn/generic/mode1o.c: Nailify, remove bogus ASSERT in commented-out
	alternate implementation.
	* gmp-impl.h (SUBC_LIMB): New macro.

	* tests/devel/try.c (validate_divexact_1): Correction to compare.
	(udiv_qrnnd): New testing.
	(SHIFT_LIMIT): Nailify.
	(-b): New option, remove spurious "H" from getopt string.

	* mpz/clrbit.c: Nailify.
	* tests/mpz/t-hamdist.c: Nailify.
	* gmp-impl.h (MPN_FIB2_SIZE): Nailify.
	(PP): Nailify conditionals.
	* tests/mpz/t-fib_ui.c (MPZ_FIB_SIZE_FLOAT): Nailify.

	* configure.in, acinclude.m4: Establish GMP_NAIL_BITS and
	GMP_LIMB_BITS for gmp-h.in configure tests.

	* mpfr/*, configure.in: Update to final mpfr 2.0.1.
	* mpfr/acinclude.m4 (MPFR_CONFIGS): Use $host, not uname stuff.
	* mpfr/tests/tout_str.c: Patch from Paul for denorm fprintf tests.

2002-04-15  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/divrem_1.c (EXTRACT): Remove.

	* tests/mpz/t-tdiv_ui.c (dump_abort): Accept argument for error string.

	* mpz/rrandomb.c: Nailify.  Needs further work.

	* mpn/generic/mod_1.c: Nailify.

	* gmp-impl.h: Set various *_THRESHOLD values to be used for nails to
	avoid not yet qualified algorithms.
	(MPZ_CHECK_FORMAT): Check that nail part is zero.

	* tests/mpz/t-mul.c (main): Test squaring even for huge operands.
	(base_mul): Nailify.
	(dump_abort): Accept argument for error string.  Print product
	difference.

	* mpn/generic/set_str.c: Nailify.

	* gmp-h.in (__GMPN_ADD, __GMPN_SUB): Nailify.

2002-04-14  Torbjorn Granlund  <tege@swox.com>

	* randraw.c (lc): Return non-nonsense return value for seed=0 case.
	Check for m2exp being non-zero early; remove all other tests of m2exp.
	Remove redundant MPN_ZERO call.
	Let mpn_rshift put result in place to avoid extra MPN_COPY.
	Remove confusing comment before function `lc' describing BBS algorithm.
	Misc simplification and cleanups.
	Nailify.  Needs further work.

	* mpz/set_si.c: Nailify.
	* mpz/set_ui.c: Nailify.
	* mpz/mul_i.h: Nailify.

	* tests/mpz/t-mul_i.c: Actually test _ui routines.  Add some more test
	values.

	* mpn/generic/mul_n.c: Finish nailifying toom3 code.

2002-04-13  Kevin Ryde  <kevin@swox.se>

	* mpfr/*: Update to another new mpfr 2.0.1.
	* configure.in, Makefile.am, mpfr/Makefile.am, mpfr/tests/Makefile.am:
	Use MPFR_CONFIGS macro, establish separate MPFR_CFLAGS for mpfr build.

	* mpfr/tests/Makefile.am: Correction to convenience rule for libmpfr.a.

2002-04-11  Kevin Ryde  <kevin@swox.se>

	* mpfr/set_q.c: gmp-impl.h before mpfr.h to avoid _PROTO redefine.

	* mpfr/*, configure.in: Update to new mpfr 2.0.1.

	* tests/refmpn.c (refmpn_udiv_qrnnd, refmpn_divmod_1c_workaround):
	Fixes for nails.

	* tests/t-constants.c (MODLIMB_INVERSE_3): Nailify tests.
	(MP_BASES_BIG_BASE_INVERTED_10, MP_BASES_NORMALIZATION_STEPS_10): Only
	check these under USE_PREINV_DIVREM_1.
	* tests/t-modlinv.c: Nailify tests.

2002-04-11  Gerardo Ballabio <gerardo.ballabio@unimib.it>

	* gmpxx.h: Remove bool combinations, remove mpf_class::get_str2, only
	need <iosfwd> now.

2002-04-11  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/diveby3.c: Nailify.
	* gmp-impl.h (MODLIMB_INVERSE_3): Nailify.

	* mpn/generic/mul_n.c: Nailify Toom3 code.

2002-04-10  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (MPN_KARA_MUL_N_MINSIZE, MPN_KARA_SQR_N_MINSIZE): Set to
	3, as needed by nails case.

	* mpn/generic/addmul_1.c, mpn/generic/submul_1.c [nails]: Fix vl
	assert, add rp,n and up,n asserts.

	* mpfr/Makefile.am: Add new mpfr-math.h, install mpf2mpfr.h.

2002-04-10  Torbjorn Granlund  <tege@swox.com>

	* mpn/generic/divrem_1.c: Nailify.  Update mp_size_t variables to use
	`n' suffix instead of `size' suffix.
	* mpn/generic/divrem_2.c: Likewise.
	* mpn/generic/sb_divrem_mn.c: Nailify.
	* mpn/generic/tdiv_qr.c: Nailify.
	(SHL): Remove silly macro.

	* mpn/generic/mul_n.c (mpn_kara_mul_n): Replace open-coded increment by
	mpn_incr_u call.  Handle nails in ws[n] increment.
	* mpn/generic/mul_n.c (mpn_kara_sqr_n): Likewise.

	* gmp-h.in (GMP_NUMB_MASK): New #define.
	(__GMPN_AORS_1): Add version for nails.

	* gmp-impl.h (GMP_NUMB_MASK): Comment out, now in gmp.h.
	(mpn_incr_u): Don't assume `incr' is non-zero.
	(mpn_decr_u): Similarly.

2002-04-09  Kevin Ryde  <kevin@swox.se>

	* mpfr/*, configure.in: Update to mpfr 2.0.1.

	* tests/refmpn.c (refmpn_mul_1c, lshift_make): Corrections for nails.
	* tssts/refmpn.c, tests/tests.h (refmpn_cmp_allowzero): New function.

	* mpn/generic/mul_1.c [nails]: Fix vl assert, add {up,n} assert.

	* mpn/pa32/hppa1_1/pa7100/addmul_1.asm,
	mpn/pa32/hppa1_1/pa7100/submul_1.asm: Rename "size" define, to avoid
	ELF .size directive.  Reported by LaMont Jones.

	* tests/mpz/t-set_si.c: Add nails support.

2002-04-05  Torbjorn Granlund  <tege@swox.com>

	* gmp-impl.h: Replace nail mpn_incr_u, mpn_decr_u with faster versions.
	(mp_bases[10] values): Check GMP_NUMB_BITS instead of BITS_PER_MP_LIMB.
	Add GMP_NUMB_BITS == 30 version.
	(__gmp_doprnt, etc): Remove parameter names.

	* mpn/generic/mul_n.c: Nailify Karatsuba code.
	* mpn/generic/get_str.c: Nailify.
	* mpn/generic/sqr_basecase.c: Nailify.
	* mpn/generic/lshift.c: Nailify.
	* mpn/generic/rshift.c: Likewise.
	* mpn/generic/add_n.c: Nailify.  Revamp non-nail code.
	* mpn/generic/sub_n.c: Likewise.
	* mpn/generic/mul_1.c: Likewise.
	* mpn/generic/addmul_1.c: Likewise.
	* mpn/generic/submul_1.c: Likewise.

2002-04-02  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (BSWAP_LIMB_FETCH, BSWAP_LIMB_STORE) [powerpc]:
	Corrections to constraints, and restrict to bigendian.

2002-03-31  Kevin Ryde  <kevin@swox.se>

	* tests/mpz/dive.c: Better diagnostics.

	* tests/devel/try.c (mpn_get_str, mpn_umul_ppmm_r): New tests.

	* tests/misc.c, tests/tests.h (byte_diff_lowest, byte_diff_highest):
	New functions.

	* tests/t-bswap.c: New file.
	* tests/Makefile.am (check_PROGRAMS): Add it.

	* tests/mpn/t-aors_1.c, tests/mpn/t-iord_u.c: Add nails support.

	* gmp-impl.h (MPN_IORD_U) [x86]: Eliminate unnecessary jiord and iord,
	rename "n" to incr per generic versions, restrict to nails==0.
	(mpn_incr_u, mpn_decr_u): Add nails support.
	(GMP_NAIL_LOWBIT, GMP_NUMB_MAX): New macros.

	* tests/trace.c, tests/tests.h (byte_trace, byte_tracen): New
	functions.
	* tests/trace.c: Handle NULL operands.

	* tests/refmpn.c, tests/devel/try.c, tune/speed.c: Add preliminary
	nail support.

	* tests/refmpn.c, test/tests.h (byte_overlap_p, refmpn_equal_anynail,
	refmpn_umul_ppmm_r, refmpn_udiv_qrnnd_r, refmpn_get_str,
	refmpn_bswap_limb, refmpn_random, refmpn_random2, refmpn_bswap_limb):
	New functions.

	* gmp-impl.h, tests/refmpn.c (ASSERT_LIMB): Renamed from
	ASSERT_MP_LIMB_T.

	* mpn/x86/*/*.asm, mpn/powerpc32/*/*.asm, mpn/powerpc64/*/*.asm: Put
	speeds after the copyright notice, so as to keep that clear.

2002-03-29  Kevin Ryde  <kevin@swox.se>

	* configure.in (powerpc*-*-aix*): Correction to xlc -qarch selection,
	for 32-bit mode.

2002-03-28  Torbjorn Granlund  <tege@swox.com>

	* mpn: Fix spacing in many files.

	* mpn/generic/aorsmul_1.c: Split into addmul_1.c and submul_1.c.
	* mpn/generic/aors_n.c: Split into add_n.c and sub_n.c.

	* mpn/pa64/add_n.asm: Trim another 0.125 cycle/limb.  Fix a comment.
	* mpn/pa64/sub_n.asm: Likewise.

	* mpn/pa64/mul_1.asm: Change comclr, comb to proper forms cmpclr, cmpb.
	* mpn/pa64/addmul_1.asm: Likewise.
	* mpn/pa64/submul_1.asm: Likewise.

2002-03-28  Kevin Ryde  <kevin@swox.se>

	* gmp.texi (Converting Integers): Fix type of exp in mpz_get_d_2exp,
	reported by epl@unimelb.edu.au.
	(References): Update Burnikel and Ziegler URL, reported by Keith
	Briggs.

	* gmp-h.in, mp-h.in, configure.in, acinclude.m4: Remove __GMP from
	AC_SUBSTs, since autoconf says leading "_" in makefile variables is
	not portable.

	* demos/expr/run-expr.c: Declare optarg, optind, opterr if necessary.
	* configure.in, demos/expr/expr-config-h.in: Configs for this.

2002-03-27  Torbjorn Granlund  <tege@swox.com>

	* mpn/Makefile.am (TARG_DIST): Remove pa64w and hppa, add pa32.

	* configure.in (path_20w): Remove pa64w.

	* mpn/pa64/udiv_qrnnd.asm: Tweak for PA8000 performance comparative to
	that on PA8500.

2002-03-26  Torbjorn Granlund  <tege@swox.com>

	* mpn/pa32: New name for mpn/hppa.
	* configure.in: Corresponding changes.

	* mpn/pa64/umul_ppmm.asm: New file, generalized for both 2.0N and 2.0W.
	* mpn/pa64/umul_ppmm.S: Remove.

	* mpn/pa64/udiv_qrnnd.asm: Generalize for both 2.0N and 2.0W.
	* mpn/pa64w/udiv_qrnnd.asm: Remove.

2002-03-26  Kevin Ryde  <kevin@swox.se>

	* mpfr/tests/tdiv.c, mpfr/tests/tui_div.c: Don't depend on nan and inf
	handling in "double", for the benefit of alpha.

	* configure (hppa2.0w): Set path to "pa64w pa64".

	* acinclude.m4, configure.in (GMP_C_INLINE): New macro.
	* acinclude.m4 (GMP_H_EXTERN_INLINE): Use it, and fix "yes" handling.

2002-03-25  Torbjorn Granlund  <tege@swox.com>

	* mpn/pa64w/add_n.s: Remove.
	* mpn/pa64w/sub_n.s: Remove.
	* mpn/pa64w/lshift.s: Remove.
	* mpn/pa64w/rshift.s: Remove.
	* mpn/pa64w/mul_1.S: Remove.
	* mpn/pa64w/addmul_1.S: Remove.
	* mpn/pa64w/submul_1.S: Remove.
	* mpn/pa64w/sqr_diagonal.asm: Remove.

	* mpn/pa64/mul_1.asm: New file with twice faster code; generalized
	for both 2.0N and 2.0W.
	* mpn/pa64/submul_1.asm: Likewise.
	* mpn/pa64/mul_1.S: Remove.
	* mpn/pa64/submul_1.S: Remove.

	* mpn/pa64/sqr_diagonal.asm: Generalize for both 2.0N and 2.0W.

	* mpn/pa64/add_n.asm: New file, generalized for both 2.0N and 2.0W.
	* mpn/pa64/sub_n.asm: Likewise.
	* mpn/pa64/lshift.asm: Likewise.
	* mpn/pa64/rshift.asm: Likewise.
	* mpn/pa64/add_n.s: Remove.
	* mpn/pa64/sub_n.s: Remove.
	* mpn/pa64/lshift.s: Remove.
	* mpn/pa64/rshift.s: Remove.

2002-03-24  Kevin Ryde  <kevin@swox.se>

	* gmp-impl.h (BSWAP_LIMB_FETCH, BSWAP_LIMB_STORE): New macros.
	* mpz/inp_raw.c, mpz/out_raw.c: Use them.
	* acconfig.h (HAVE_HOST_CPU): Add some powerpc types.

	* mpn/powerpc32/750/com_n.asm: New file.

	* mpfr/tests/tout_str.c: Disable random tests, since they fail on
	alphaev56-unknown-freebsd4.1 and do nothing by default.

	* mpfr/tests/tsqrt.c: Don't depend on nan, inf or -0 in "double", for
	the benefit of alpha.
	* mpfr/sqrt.c: Clear nan flag on -0.

	* demos/factorize.c: Use mpn_random() instead of random(), to avoi